{"version":3,"sources":["./src/$_gendir lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/boxplot/boxplot-chart/boxplot-chart.component.css","./src/app/boxplot/boxplot-chart/boxplot-chart.component.html","./src/app/boxplot/boxplot-chart/boxplot-chart.component.ts","./src/app/boxplot/boxplot-table/boxplot-table.component.css","./src/app/boxplot/boxplot-table/boxplot-table.component.html","./src/app/boxplot/boxplot-table/boxplot-table.component.ts","./src/app/boxplot/boxplot.component.css","./src/app/boxplot/boxplot.component.html","./src/app/boxplot/boxplot.component.ts","./src/app/boxplot/boxplot.module.ts","./src/app/boxplot/boxplot.ts","./src/app/england/england.component.css","./src/app/england/england.component.html","./src/app/england/england.component.ts","./src/app/map/google-map/google-map.component.css","./src/app/map/google-map/google-map.component.html","./src/app/map/google-map/google-map.component.ts","./src/app/map/googleMap.service.ts","./src/app/map/map-chart/map-chart.component.css","./src/app/map/map-chart/map-chart.component.html","./src/app/map/map-chart/map-chart.component.ts","./src/app/map/map-legend/map-legend.component.css","./src/app/map/map-legend/map-legend.component.html","./src/app/map/map-legend/map-legend.component.ts","./src/app/map/map-table/map-table.component.css","./src/app/map/map-table/map-table.component.html","./src/app/map/map-table/map-table.component.ts","./src/app/map/map.component.css","./src/app/map/map.component.html","./src/app/map/map.component.ts","./src/app/map/map.module.ts","./src/app/map/practice-search/practice-search.component.css","./src/app/map/practice-search/practice-search.component.html","./src/app/map/practice-search/practice-search.component.ts","./src/app/map/practice-search/practice-search.ts","./src/app/metadata/metadata-table/metadata-table.component.css","./src/app/metadata/metadata-table/metadata-table.component.html","./src/app/metadata/metadata-table/metadata-table.component.ts","./src/app/metadata/metadata.component.css","./src/app/metadata/metadata.component.html","./src/app/metadata/metadata.component.ts","./src/app/metadata/metadata.module.ts","./src/app/population/population-chart/population-chart.component.css","./src/app/population/population-chart/population-chart.component.html","./src/app/population/population-chart/population-chart.component.ts","./src/app/population/population-summary/population-summary.component.css","./src/app/population/population-summary/population-summary.component.html","./src/app/population/population-summary/population-summary.component.ts","./src/app/population/population.component.css","./src/app/population/population.component.html","./src/app/population/population.component.ts","./src/app/population/population.module.ts","./src/app/population/population.ts","./src/app/population/registered-persons-table/registered-persons-table.component.css","./src/app/population/registered-persons-table/registered-persons-table.component.html","./src/app/population/registered-persons-table/registered-persons-table.component.ts","./src/app/shared/component/indicator-header/indicator-header.component.css","./src/app/shared/component/indicator-header/indicator-header.component.html","./src/app/shared/component/indicator-header/indicator-header.component.ts","./src/app/shared/service/api/area.service.ts","./src/app/shared/service/api/indicator.service.ts","./src/app/shared/service/api/parameters.ts","./src/app/shared/service/helper/coreDataHelper.service.ts","./src/app/shared/service/helper/ftHelper.service.ts","./src/app/shared/service/helper/script.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/shared.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir lazy\n// module id = ./src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<ft-map></ft-map>\\r\\n<ft-england></ft-england>\\r\\n<ft-metadata></ft-metadata>\\r\\n<ft-population></ft-population>\\r\\n<ft-boxplot></ft-boxplot>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, HostListener } from '@angular/core';\r\nimport { FTModel, FTRoot } from './typings/FT.d';\r\ndeclare var FTWrapper: FTRoot;\r\n\r\n@Component({\r\n  selector: '[app-root]',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, ComponentFactoryResolver, ApplicationRef, Type  } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AppComponent } from './app.component';\r\nimport {MapComponent} from './map/map.component';\r\nimport { MapModule } from './map/map.module';\r\nimport { BoxplotModule } from './boxplot/boxplot.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { CoreDataHelperService } from './shared/service/helper/coreDataHelper.service';\r\nimport { FTHelperService } from './shared/service/helper/ftHelper.service';\r\nimport { EnglandComponent } from './england/england.component';\r\nimport { MetadataModule } from './metadata/metadata.module';\r\nimport { PopulationModule } from './population/population.module';\r\nimport { MetadataTableComponent } from './metadata/metadata-table/metadata-table.component';\r\nimport { TypeaheadModule } from 'ngx-bootstrap';\r\n\r\nconst components = [AppComponent, MapComponent];\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EnglandComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    MapModule,\r\n    BoxplotModule,\r\n    PopulationModule,\r\n    SharedModule,\r\n    MetadataModule,\r\n    TypeaheadModule.forRoot()\r\n  ],\r\n  providers: [CoreDataHelperService, FTHelperService],\r\n  entryComponents: components\r\n  // Instead of bootstraping a single component, with overriding mechnisam, multiple componenta are bootstrapped\r\n  // bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  constructor(private resolver: ComponentFactoryResolver) { }\r\n  // Overriding angular original behaviour, This will bootsttrap all the component defined\r\n  // in the array if the component tag is found on the document\r\n  ngDoBootstrap(appRef: ApplicationRef) {\r\n      components.forEach((componentDef: Type<{}>) => {\r\n          const factory = this.resolver.resolveComponentFactory(componentDef);\r\n          if (document.querySelector(factory.selector)) {\r\n              appRef.bootstrap(factory);\r\n          }\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/boxplot/boxplot-chart/boxplot-chart.component.css\n// module id = ./src/app/boxplot/boxplot-chart/boxplot-chart.component.css\n// module chunks = main","module.exports = \"<div #chart id=\\\"boxplot-chart\\\"></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/boxplot/boxplot-chart/boxplot-chart.component.html\n// module id = ./src/app/boxplot/boxplot-chart/boxplot-chart.component.html\n// module chunks = main","import { Component, Input, OnChanges, SimpleChanges, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { BoxplotData } from '../boxplot';\r\n\r\nimport * as Highcharts from 'highcharts';\r\nrequire('highcharts/modules/exporting')(Highcharts);\r\nrequire('highcharts/highcharts-more')(Highcharts);\r\n\r\n@Component({\r\n  selector: 'ft-boxplot-chart',\r\n  templateUrl: './boxplot-chart.component.html',\r\n  styleUrls: ['./boxplot-chart.component.css']\r\n})\r\nexport class BoxplotChartComponent implements OnChanges, AfterViewInit {\r\n\r\n  @Input() boxplotData: BoxplotData;\r\n  @ViewChild('chart') public chartEl: ElementRef;\r\n  chart: Highcharts.ChartObject;\r\n\r\n  ngAfterViewInit() {\r\n    this.displayChart();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.displayChart();\r\n  }\r\n\r\n  private displayChart() {\r\n    if (this.isAnyData()) {\r\n      let chartContainer = null;\r\n      if (this.chartEl && this.chartEl.nativeElement) {\r\n        chartContainer = this.chartEl.nativeElement;\r\n        this.chart = new Highcharts.Chart(chartContainer, this.getChartOptions());\r\n      }\r\n    }\r\n  }\r\n\r\n  private getChartOptions(): Highcharts.Options {\r\n\r\n    var metadata = this.boxplotData.metadata;\r\n    var unitLabel = metadata.Unit.Label;\r\n\r\n    // Series\r\n    var seriesName = this.boxplotData.areaTypeName + ' in ' + this.boxplotData.comparatorName;\r\n    let series: any[] /*Highcharts.IndividualSeriesOptions[]*/ = [\r\n      {\r\n        name: seriesName,\r\n        data: this.getChartData()\r\n      }\r\n    ];\r\n\r\n    // So accessible from tooltip\r\n    var boxplotData = this.boxplotData;\r\n\r\n    return (\r\n      {\r\n        chart: {\r\n          type: 'boxplot',\r\n          width: 820,\r\n          animation: false\r\n        },\r\n\r\n        title: {\r\n          text: ''\r\n        },\r\n\r\n        legend: {\r\n          enabled: false\r\n        },\r\n\r\n        xAxis: {\r\n          categories: this.boxplotData.periods,\r\n          title: {\r\n            text: ''\r\n          }\r\n        },\r\n\r\n        yAxis: {\r\n          min: this.boxplotData.min,\r\n          title: {\r\n            text: unitLabel\r\n          }\r\n        },\r\n\r\n        plotOptions: {\r\n          boxplot: {\r\n            animation: false,\r\n            color: '#1e1e1e',\r\n            fillColor: '#cccccc',\r\n            medianColor: '#ff0000'\r\n          }\r\n        },\r\n\r\n        tooltip: {\r\n          followPointer: false,\r\n          formatter: function () {\r\n\r\n            let period = this.x;\r\n            var index = boxplotData.periods.indexOf(period);\r\n            let stats = boxplotData.statsFormatted[index];\r\n\r\n            var tooltipContent = [\r\n              '<b>', period, '</b><br/>',\r\n              '<b>', seriesName, '</b><br/>',\r\n              '95th Percentile: ', stats.P95, '<br/>',\r\n              '75th Percentile: ', stats.P75, '<br/>',\r\n              'Median: ', stats.Median, '<br/>',\r\n              '25th Percentile: ', stats.P25, '<br/>',\r\n              '5th Percentile: ', stats.P5, '<br/>'\r\n            ];\r\n\r\n            return tooltipContent.join('');\r\n          }\r\n        },\r\n\r\n        series: series\r\n      });\r\n  }\r\n\r\n  private getChartData(): number[][] {\r\n\r\n    let chartDataGrid: number[][] = [];\r\n\r\n    for (var stats of this.boxplotData.stats) {\r\n\r\n      let pointData: number[] = [];\r\n      pointData[0] = this.getValue(stats.P5);\r\n      pointData[1] = this.getValue(stats.P25);\r\n      pointData[2] = this.getValue(stats.Median);\r\n      pointData[3] = this.getValue(stats.P75);\r\n      pointData[4] = this.getValue(stats.P95);\r\n      chartDataGrid.push(pointData);\r\n    }\r\n    return chartDataGrid;\r\n  }\r\n\r\n  private getValue(i: number): number {\r\n    return i == null ? 0 : i;\r\n  }\r\n\r\n  private isAnyData(): boolean {\r\n    return this.boxplotData && this.boxplotData.isAnyData();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/boxplot/boxplot-chart/boxplot-chart.component.ts","module.exports = \".boxplot-table {\\r\\n    margin: 30px auto;\\r\\n}\\r\\n\\r\\n.boxplot-table table {\\r\\n    font-size: 13px;\\r\\n    min-width: 35% !important;\\r\\n    width: auto;\\r\\n    table-layout: auto !important;\\r\\n    border-width: 0 !important;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\n.boxplot-table th {\\r\\n    font-size: 11px;\\r\\n    text-align: right;\\r\\n    background-color: #f9f9f9;\\r\\n    border-bottom: 1px solid #eceeef;\\r\\n}\\r\\n\\r\\n.boxplot-table tr th:first-child {\\r\\n    min-width: 39px;\\r\\n}\\r\\n\\r\\n.boxplot-table tr td:first-child {\\r\\n    font-size: 11px;\\r\\n    font-style: normal;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/boxplot/boxplot-table/boxplot-table.component.css\n// module id = ./src/app/boxplot/boxplot-table/boxplot-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"boxplot-table\\\">\\r\\n    <table *ngIf=\\\"boxplotData\\\" class=\\\"bordered-table table-hover table \\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th></th>\\r\\n                <th *ngFor=\\\"let period of boxplotData.periods \\\">\\r\\n                    {{period}}\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr>\\r\\n                <td>Minimum</td>\\r\\n                <td *ngFor=\\\"let stats of boxplotData.statsFormatted \\\" class=\\\"numeric \\\">{{stats.Min}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>5th Percentile</td>\\r\\n                <td *ngFor=\\\"let stats of boxplotData.statsFormatted \\\" class=\\\"numeric \\\">{{stats.P5}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>25th Percentile</td>\\r\\n                <td *ngFor=\\\"let stats of boxplotData.statsFormatted \\\" class=\\\"numeric \\\">{{stats.P25}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>Median</td>\\r\\n                <td *ngFor=\\\"let stats of boxplotData.statsFormatted \\\" class=\\\"numeric \\\">{{stats.Median}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>75th Percentile</td>\\r\\n                <td *ngFor=\\\"let stats of boxplotData.statsFormatted \\\" class=\\\"numeric \\\">{{stats.P75}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>95th Percentile</td>\\r\\n                <td *ngFor=\\\"let stats of boxplotData.statsFormatted \\\" class=\\\"numeric \\\">{{stats.P95}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>Maximum</td>\\r\\n                <td *ngFor=\\\"let stats of boxplotData.statsFormatted \\\" class=\\\"numeric \\\">{{stats.Max}}</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/boxplot/boxplot-table/boxplot-table.component.html\n// module id = ./src/app/boxplot/boxplot-table/boxplot-table.component.html\n// module chunks = main","import { Component, Input } from '@angular/core';\r\nimport { BoxplotData } from '../boxplot';\r\n\r\n@Component({\r\n  selector: 'ft-boxplot-table',\r\n  templateUrl: './boxplot-table.component.html',\r\n  styleUrls: ['./boxplot-table.component.css']\r\n})\r\nexport class BoxplotTableComponent {\r\n\r\n  @Input() boxplotData: BoxplotData;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/boxplot/boxplot-table/boxplot-table.component.ts","module.exports = \"#boxplot-legend-img {\\r\\n    width: 143px;\\r\\n    height: 296px;\\r\\n    text-decoration: none;\\r\\n    border: 1px solid lightgrey;\\r\\n    float: right;\\r\\n    margin-top: 10px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/boxplot/boxplot.component.css\n// module id = ./src/app/boxplot/boxplot.component.css\n// module chunks = main","module.exports = \"<div id=\\\"boxplot-container\\\" style=\\\"display:none;\\\">\\r\\n    <!-- <div class=\\\"export-chart-box\\\" style=\\\"display:block;\\\">\\r\\n            <a class=\\\"export-link\\\" (click)=\\\"onExportClick($event)\\\"\\r\\n                >Export chart as image</a>\\r\\n        </div> -->\\r\\n    <div id=\\\"indicator-details-boxplot-data\\\" class=\\\"standard-width\\\">\\r\\n        <ft-indicator-header [header]=\\\"header\\\"></ft-indicator-header>\\r\\n        <div id=\\\"boxplot-legend-img\\\" *ngIf=\\\"isAnyData()\\\"></div>\\r\\n\\r\\n        <ft-boxplot-chart *ngIf=\\\"isAnyData()\\\" [boxplotData]=\\\"boxplotData\\\"></ft-boxplot-chart>\\r\\n\\r\\n        <ft-boxplot-table *ngIf=\\\"isAnyData()\\\" [boxplotData]=\\\"boxplotData\\\"></ft-boxplot-table>\\r\\n        <div id=\\\"boxplot-no-data\\\" class=\\\"no-indicator-data\\\" *ngIf=\\\"!isAnyData()\\\">No Data</div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/boxplot/boxplot.component.html\n// module id = ./src/app/boxplot/boxplot.component.html\n// module chunks = main","import { Component, HostListener } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport {\r\n  FTModel, FTRoot, GroupRoot, IndicatorMetadata, IndicatorStatsPercentilesFormatted,\r\n  IndicatorStats, TooltipManager, IndicatorStatsPercentiles\r\n} from '../typings/FT.d';\r\nimport { BoxplotData } from './boxplot';\r\nimport { FTHelperService } from '../shared/service/helper/ftHelper.service';\r\nimport { IndicatorService } from '../shared/service/api/indicator.service';\r\nimport { IndicatorHeader } from '../shared/component/indicator-header/indicator-header.component';\r\n\r\n@Component({\r\n  selector: 'ft-boxplot',\r\n  templateUrl: './boxplot.component.html',\r\n  styleUrls: ['./boxplot.component.css']\r\n})\r\nexport class BoxplotComponent {\r\n\r\n  public header: IndicatorHeader;\r\n  private boxplotData: BoxplotData;\r\n\r\n  constructor(private ftHelperService: FTHelperService, private indicatorService: IndicatorService) { }\r\n\r\n  @HostListener('window:BoxplotSelected', ['$event'])\r\n  public onOutsideEvent(event): void {\r\n\r\n    let ftHelper = this.ftHelperService;\r\n\r\n    let groupRoot: GroupRoot = this.ftHelperService.getCurrentGroupRoot();\r\n    let model = ftHelper.getFTModel();\r\n\r\n    // Get data\r\n    let groupRootsObservable = this.indicatorService.getLatestDataForAllIndicatorsInProfileGroupForChildAreas(model.groupId,\r\n      model.areaTypeId, model.parentCode, model.profileId);\r\n    let metadataObservable = this.indicatorService.getIndicatorMetadata(model.groupId);\r\n    let statsObservable = this.indicatorService.getIndicatorStatisticsTrendsForSingleIndicator(\r\n      groupRoot.IID, groupRoot.Sex.Id, groupRoot.Age.Id, model.areaTypeId,\r\n      this.ftHelperService.getCurrentComparator().Code);\r\n\r\n    Observable.forkJoin([groupRootsObservable, metadataObservable, statsObservable]).subscribe(results => {\r\n      let groupRoots: GroupRoot[] = results[0];\r\n      let metadataHash: Map<number, IndicatorMetadata> = results[1];\r\n      let statsArray: IndicatorStats[] = results[2];\r\n\r\n      this.displayBoxplot(metadataHash[groupRoot.IID], groupRoot, statsArray);\r\n\r\n      this.ftHelperService.showAndHidePageElements();\r\n      this.ftHelperService.unlock();\r\n    });\r\n  }\r\n\r\n  displayBoxplot(metadata: IndicatorMetadata, groupRoot: GroupRoot, statsArray: IndicatorStats[]) {\r\n\r\n    // Define header\r\n    this.displayHeader(metadata, groupRoot);\r\n\r\n    // Define data\r\n    var data = new BoxplotData(metadata, this.ftHelperService.getAreaTypeName(),\r\n      this.ftHelperService.getCurrentComparator().Name);\r\n    for (var i = 0; i < statsArray.length; i++) {\r\n      var indicatorStats = statsArray[i];\r\n      if (indicatorStats.Stats) {\r\n        data.addStats(indicatorStats);\r\n      }\r\n    }\r\n    this.boxplotData = data;\r\n  }\r\n\r\n  displayHeader(metadata: IndicatorMetadata, groupRoot: GroupRoot): void {\r\n    var unitLabel = metadata.Unit.Label;\r\n    if (unitLabel !== '') {\r\n      unitLabel = ' - ' + unitLabel;\r\n    }\r\n\r\n    var hasDataChangedRecently = groupRoot.DateChanges && groupRoot.DateChanges.HasDataChangedRecently;\r\n\r\n    this.header = new IndicatorHeader(metadata.Descriptive['Name'], hasDataChangedRecently, this.ftHelperService.getCurrentComparator().Name,\r\n      metadata.ValueType.Name, unitLabel, this.ftHelperService.getSexAndAgeLabel(groupRoot));\r\n  }\r\n\r\n  public isAnyData(): boolean {\r\n    return this.boxplotData && this.boxplotData.isAnyData();\r\n  }\r\n\r\n  onExportClick(event: MouseEvent) {\r\n    event.preventDefault();\r\n    let boxplotTable = $('.boxplot-table').hide();\r\n    let chart = $('#indicator-details-boxplot-data');\r\n    $('.highcharts-credits,.highcharts-contextbutton').hide();\r\n    this.ftHelperService.saveElementAsImage(chart, 'boxplot');\r\n    $(boxplotTable).show();\r\n    this.ftHelperService.logEvent('ExportImage', 'Boxplot');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/boxplot/boxplot.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { BoxplotComponent } from './boxplot.component';\r\nimport { BoxplotChartComponent } from './boxplot-chart/boxplot-chart.component';\r\nimport { BoxplotTableComponent } from './boxplot-table/boxplot-table.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        BoxplotComponent,\r\n        BoxplotChartComponent,\r\n        BoxplotTableComponent\r\n    ],\r\n    exports: [\r\n        BoxplotComponent\r\n    ]\r\n})\r\nexport class BoxplotModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/boxplot/boxplot.module.ts","import {\r\n  IndicatorMetadata, IndicatorStatsPercentilesFormatted,\r\n  IndicatorStats, IndicatorStatsPercentiles\r\n} from '../typings/FT.d';\r\n\r\nexport class BoxplotData {\r\n\r\n  stats: IndicatorStatsPercentiles[] = []\r\n  statsFormatted: IndicatorStatsPercentilesFormatted[] = [];\r\n  periods: string[] = [];\r\n  min: number = null;\r\n\r\n  constructor(public metadata: IndicatorMetadata, public areaTypeName: string,\r\n    public comparatorName: string) { }\r\n\r\n  addStats(indicatorStats: IndicatorStats): void {\r\n\r\n    // Chart data\r\n    this.stats.push(indicatorStats.Stats);\r\n\r\n    // Table data\r\n    this.statsFormatted.push(indicatorStats.StatsF);\r\n\r\n    // Time periods\r\n    this.periods.push(indicatorStats.Period);\r\n\r\n    // Set min limit if zero to prevent Y axis starting at negative number\r\n    if (indicatorStats.Limits.Min === 0) {\r\n      this.min = indicatorStats.Limits.Min;\r\n    }\r\n  }\r\n\r\n  isAnyData(): boolean {\r\n    return this.periods.length > 0;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/boxplot/boxplot.ts","module.exports = \"#england-table {\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n    background: #fff;\\r\\n    margin-bottom: 30px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/england/england.component.css\n// module id = ./src/app/england/england.component.css\n// module chunks = main","module.exports = \"<div id=\\\"england-container\\\" style=\\\"display:none;\\\">\\r\\n    <div class=\\\"export-chart-box\\\" style=\\\"display:block;\\\">\\r\\n        <a class=\\\"export-link\\\" (click)=\\\"onExportClick($event)\\\">Export table as image</a>\\r\\n    </div>\\r\\n    <div id=\\\"england-table\\\">\\r\\n        <table class=\\\"bordered-table table-hover\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th>Indicator</th>\\r\\n                    <th>Period</th>\\r\\n                    <th class=\\\"center\\\">England<br/>count</th>\\r\\n                    <th class=\\\"center\\\">England<br/>value</th>\\r\\n                    <th *ngIf=\\\"hasRecentTrends\\\" class=\\\"center\\\">Recent<br/>trend</th>\\r\\n                    <th *ngIf=\\\"isChangeFromPreviousPeriodShown\\\" class=\\\"center\\\">Change from<br/>previous time period</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let row of rows\\\">\\r\\n                    <td><button class=\\\"pLink\\\" href=\\\"#\\\" (click)=indicatorNameClicked(row)>{{row.indicatorName}}</button>\\r\\n                    <span  *ngIf=\\\"row.hasNewData\\\" style=\\\"margin-right: 8px;\\\" class=\\\"badge badge-success\\\">New data</span>\\r\\n                    </td>\\r\\n                    <td>{{row.period}}</td>\\r\\n                    <td class=\\\"numeric\\\" [innerHTML]=\\\"row.count\\\"></td>\\r\\n                    <td class=\\\"numeric\\\" (mouseover)=showValueNoteTooltip($event,row) (mouseout)=hideTooltip() (mousemove)=positionTooltip($event) [innerHTML]=\\\"row.value\\\"></td>\\r\\n                    <td *ngIf=\\\"hasRecentTrends\\\" class=\\\"center pointer\\\" (click)=recentTrendClicked(row) (mouseout)=hideTooltip() (mouseover)=showRecentTrendTooltip($event,row) (mousemove)=positionTooltip($event) [innerHTML]=\\\"row.recentTrendHtml\\\"></td>\\r\\n                    <td *ngIf=\\\"isChangeFromPreviousPeriodShown\\\" class=\\\"center\\\" [innerHTML]=\\\"row.changeFromPreviousHtml\\\"></td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/england/england.component.html\n// module id = ./src/app/england/england.component.html\n// module chunks = main","import { Component, HostListener } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport {\r\n  FTModel, FTRoot, GroupRoot, IndicatorMetadata, CoreDataSetInfo,\r\n  TrendMarkerResult, TrendMarker, TooltipManager\r\n} from '../typings/FT.d';\r\nimport { FTHelperService } from '../shared/service/helper/ftHelper.service';\r\nimport { TooltipHelper } from '../shared/shared';\r\nimport { IndicatorService } from '../shared/service/api/indicator.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'ft-england',\r\n  templateUrl: './england.component.html',\r\n  styleUrls: ['./england.component.css']\r\n})\r\nexport class EnglandComponent {\r\n\r\n  public isChangeFromPreviousPeriodShown: boolean = false;\r\n  public rows: Array<EnglandRow>;\r\n  public hasRecentTrends: boolean = false;\r\n  private tooltip: TooltipHelper;\r\n\r\n  constructor(private ftHelperService: FTHelperService, private indicatorService: IndicatorService) { }\r\n\r\n  @HostListener('window:EnglandSelected', ['$event'])\r\n  public onOutsideEvent(event) {\r\n\r\n    let ftHelper = this.ftHelperService;\r\n    let model = ftHelper.getFTModel();\r\n    let groupRootsObservable = this.indicatorService.getLatestDataForAllIndicatorsInProfileGroupForChildAreas(model.groupId, model.areaTypeId, model.parentCode, model.profileId);\r\n    let metadataObservable = this.indicatorService.getIndicatorMetadata(model.groupId);\r\n\r\n    Observable.forkJoin([groupRootsObservable, metadataObservable]).subscribe(results => {\r\n      let groupRoots: GroupRoot[] = results[0];\r\n      let metadataHash: Map<number, IndicatorMetadata> = results[1];\r\n\r\n      this.setConfig();\r\n      this.tooltip = new TooltipHelper(this.ftHelperService.newTooltipManager());\r\n\r\n      this.rows = [];\r\n      for (let rootIndex in groupRoots) {\r\n        let root = groupRoots[rootIndex];\r\n        let indicatorId = root.IID;\r\n        let metadata: IndicatorMetadata = metadataHash[indicatorId];\r\n        let unit = !!metadata ? metadata.Unit : null;\r\n\r\n        let row: EnglandRow = new EnglandRow();\r\n        this.rows.push(row)\r\n        row.rootIndex = rootIndex;\r\n        row.period = root.Grouping[0].Period;\r\n        row.indicatorName = metadata.Descriptive['Name'] + ftHelper.getSexAndAgeLabel(root);\r\n        row.hasNewData = root.DateChanges && root.DateChanges.HasDataChangedRecently;\r\n\r\n        // Data\r\n        let englandData = ftHelper.getNationalComparatorGrouping(root).ComparatorData;\r\n        let dataInfo = ftHelper.newCoreDataSetInfo(englandData);\r\n        row.value = ftHelper.newValueDisplayer(unit).byDataInfo(dataInfo);\r\n        row.count = ftHelper.formatCount(dataInfo);\r\n        row.hasValueNote = dataInfo.isNote();\r\n        row.noteId = englandData.NoteId;\r\n\r\n        // Recent trend\r\n        if (!!root.RecentTrends) {\r\n          this.setUpRecentTrendOnRow(row, root, englandData.AreaCode, dataInfo);\r\n        }\r\n      }\r\n\r\n      ftHelper.showAndHidePageElements();\r\n      ftHelper.unlock();\r\n    });\r\n  }\r\n\r\n  private setUpRecentTrendOnRow(row: EnglandRow, root: GroupRoot, areaCode: string, dataInfo: CoreDataSetInfo) {\r\n\r\n    let ftHelper = this.ftHelperService;\r\n    var polarityId = root.PolarityId;\r\n\r\n    if (dataInfo.isValue() && root.RecentTrends[areaCode]) {\r\n      ''\r\n      // Recent trend available\r\n      let recentTrend: TrendMarkerResult = root.RecentTrends[areaCode];\r\n      row.recentTrend = recentTrend;\r\n      row.recentTrendHtml = ftHelper.getTrendMarkerImage(recentTrend.Marker, polarityId);\r\n      row.changeFromPreviousHtml = ftHelper.getTrendMarkerImage(\r\n        recentTrend.MarkerForMostRecentValueComparedWithPreviousValue, polarityId);\r\n    } else {\r\n      // No trend image\r\n      row.recentTrendHtml = ftHelper.getTrendMarkerImage(0/*TrendMarker.CannotBeCalculated*/, polarityId);\r\n      row.changeFromPreviousHtml = row.recentTrendHtml;\r\n    }\r\n  }\r\n\r\n  private hideTooltip() {\r\n    this.tooltip.hide();\r\n  }\r\n\r\n  private indicatorNameClicked(row: EnglandRow) {\r\n    this.ftHelperService.goToMetadataPage(row.rootIndex);\r\n  }\r\n\r\n  private showValueNoteTooltip(event: MouseEvent, row: EnglandRow) {\r\n    if (row.hasValueNote) {\r\n      var tooltipProvider = this.ftHelperService.newValueNoteTooltipProvider();\r\n      this.tooltip.displayHtml(event, tooltipProvider.getHtmlFromNoteId(row.noteId));\r\n    }\r\n  }\r\n\r\n  private showRecentTrendTooltip(event: MouseEvent, row: EnglandRow) {\r\n    var tooltipProvider = this.ftHelperService.newRecentTrendsTooltip();\r\n    this.tooltip.displayHtml(event, tooltipProvider.getTooltipByData(row.recentTrend));\r\n  }\r\n\r\n  private positionTooltip(event: MouseEvent) {\r\n    this.tooltip.reposition(event);\r\n  }\r\n\r\n  private recentTrendClicked(row: EnglandRow) {\r\n    this.ftHelperService.recentTrendSelected().byGroupRoot(row.rootIndex)\r\n  }\r\n\r\n  private setConfig() {\r\n    var config = this.ftHelperService.getFTConfig();\r\n    this.hasRecentTrends = config.hasRecentTrends;\r\n    this.isChangeFromPreviousPeriodShown = config.isChangeFromPreviousPeriodShown;\r\n  }\r\n\r\n  onExportClick(event: MouseEvent) {\r\n    event.preventDefault();\r\n\r\n    // Prepare view\r\n    let $trendInfoIcon = $('.trend-info').hide();\r\n    let trendLegend = $('<div id=\"trend-legend\">'\r\n      + $('#trend-marker-legend').html() +\r\n      '</div>');\r\n    let table = $('#england-table');\r\n    table.prepend(trendLegend);\r\n\r\n    // Export image\r\n    this.ftHelperService.saveElementAsImage(table, 'england');\r\n\r\n    // Restore view\r\n    $('#trend-legend').remove();\r\n    $trendInfoIcon.show();\r\n\r\n    // Log event for analytics\r\n    this.ftHelperService.logEvent('ExportImage', 'England');\r\n  }\r\n}\r\n\r\nclass EnglandRow {\r\n  count: string;\r\n  indicatorName: string;\r\n  hasNewData: boolean;\r\n  hasValueNote: boolean;\r\n  noteId: number;\r\n  period: string;\r\n  rootIndex: string;\r\n  value: string;\r\n  recentTrend: TrendMarkerResult;\r\n  recentTrendHtml: string;\r\n  /** Change from the previous time point */\r\n  changeFromPreviousHtml: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/england/england.component.ts","module.exports = \".googleMapNg {\\r\\n    position: relative;\\r\\n    background-color: #fff;\\r\\n    border: 1px solid #CCC;\\r\\n    width: 500px;\\r\\n    height: 600px;\\r\\n    float: left;\\r\\n    margin-bottom: 10px;\\r\\n    margin-top: 10px;\\r\\n    clear: both;\\r\\n}\\r\\n\\r\\n#floating-panel {\\r\\n    position: absolute;\\r\\n    margin-top: 92px;\\r\\n    z-index: 5;\\r\\n    padding-left: 8px;\\r\\n    margin-left: 10px;\\r\\n}\\r\\n\\r\\n#wrapper {\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.map-control {\\r\\n    float: left;\\r\\n    clear: both;\\r\\n    position: relative;\\r\\n    z-index: 7;\\r\\n    pointer-events: auto;\\r\\n}\\r\\n\\r\\n.map-control-layers-toggle {\\r\\n    background-image: url(/images/layers.png);\\r\\n    background-repeat: no-repeat;\\r\\n    width: 28px;\\r\\n    height: 28px;\\r\\n    display: inline-block;\\r\\n    margin-right: 3px\\r\\n}\\r\\n\\r\\n.layerControl p {\\r\\n    margin-left: 5px;\\r\\n}\\r\\n\\r\\n.layerControl div.basemap {\\r\\n    margin: 3px 0;\\r\\n    padding-right: 3px;\\r\\n}\\r\\n\\r\\n.layerControl label.basemapLabel {\\r\\n    display: block;\\r\\n    margin-bottom: 0px;\\r\\n    height: 40px;\\r\\n}\\r\\n\\r\\n.layerControl div.basemap:hover,\\r\\n.layerControl div.opacity:hover {\\r\\n    background-color: rgba(220, 220, 220, .7);\\r\\n}\\r\\n\\r\\n.layerControl div:hover span {\\r\\n    border: 1px solid #666;\\r\\n}\\r\\n\\r\\n.layerControl div.selected span {\\r\\n    border: 1px solid #66F;\\r\\n}\\r\\n\\r\\n.layerControl div .layerControl label span {\\r\\n    border: 1px solid #CCC;\\r\\n    width: 70px;\\r\\n    height: 30px;\\r\\n    background: url(/images/basemaps.jpg) no-repeat;\\r\\n    display: inline-block;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n.layerControl div.basemap span {\\r\\n    margin: 0 5px;\\r\\n}\\r\\n\\r\\n.layerControl div.None span {\\r\\n    background: #FFF;\\r\\n}\\r\\n\\r\\n.layerControl div.Streets span {\\r\\n    background-position: -6px -113px;\\r\\n}\\r\\n\\r\\n.layerControl div#opacity {\\r\\n    margin-left: 5px;\\r\\n}\\r\\n\\r\\n.layerControl div.opacity {\\r\\n    display: inline-block;\\r\\n    width: 34px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.layerControl div.opacity span {\\r\\n    border: 1px solid #CCC;\\r\\n    display: inline-block;\\r\\n    width: 30px;\\r\\n    height: 25px;\\r\\n}\\r\\n\\r\\n.layerControl div.opacity:hover span,\\r\\n.layerControl div.opacity.selected span {\\r\\n    border-color: #666;\\r\\n}\\r\\n\\r\\n.layerControl div.opacity label {\\r\\n    font-size: .65em;\\r\\n}\\r\\n\\r\\n.layerControl div.opacity span {\\r\\n    background: url(/images/opacity.jpg) no-repeat;\\r\\n}\\r\\n\\r\\n.layerControl input {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.layerControl>label {\\r\\n    display: block;\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.info {\\r\\n    padding: 2px;\\r\\n    font: 14px/16px Arial, Helvetica, sans-serif;\\r\\n    background: white;\\r\\n    background: rgba(255, 255, 255, 0.8);\\r\\n    -webkit-box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);\\r\\n            box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.info h4 {\\r\\n    margin: 0;\\r\\n    color: #777;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.export-chart-box {\\r\\n    margin: 0;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/map/google-map/google-map.component.css\n// module id = ./src/app/map/google-map/google-map.component.css\n// module chunks = main","module.exports = \"<div class=\\\"export-chart-box\\\">\\r\\n    <a class=\\\"export-link\\\" (click)=\\\"onExportClick($event)\\\">Export map as image</a>\\r\\n</div>\\r\\n<div id=\\\"wrapper\\\">\\r\\n    <div [hidden]=\\\"isError\\\" id=\\\"google-map\\\" #googleMap class=\\\"googleMapNg\\\"></div>\\r\\n    <div *ngIf=\\\"isError\\\" id=\\\"polygonError\\\" class=\\\"googleMapNg\\\"> {{errorMessage}} </div>\\r\\n    <div [hidden]=\\\"isError\\\" id=\\\"floating-panel\\\" class=\\\"layerControl info map-control\\\">\\r\\n        <a class=\\\"map-control-layers-toggle\\\" href=\\\"#\\\" title=\\\"Layers\\\" *ngIf=\\\"!showOverlay\\\" (mouseover)=\\\"displayOverlay()\\\"></a>\\r\\n        <div id=\\\"mapOptions\\\" *ngIf=\\\"showOverlay\\\" (mouseleave)=\\\"hideOverlay()\\\">\\r\\n            <p>Background map</p>\\r\\n            <label *ngFor=\\\"let baseMap of baseMaps;let idx = index\\\" class=\\\"basemapLabel\\\">\\r\\n                    <div class=\\\"basemap {{baseMap.cssClass}}\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"baseMap\\\"  [value]=\\\"baseMap.val\\\" \\r\\n                    [checked]=\\\"(idx === 0)\\\" (click)= \\\"onOverlaySelectionChange(baseMap)\\\">\\r\\n                    <span></span>{{baseMap.name}}\\r\\n                    </div>\\r\\n                    <br/>\\r\\n                </label>\\r\\n            <p>Transparency</p>\\r\\n            <div class=\\\"opacity\\\" *ngFor=\\\"let opac of opacityArray;let idx = index;\\\" [attr.selected]=\\\"opac/100 == fillOpacity?true : null\\\">\\r\\n                <input type=\\\"radio\\\" name=\\\"opacity\\\" value=\\\"{{opac}}\\\" id=\\\"opacity_{{opac}}\\\" (click)=\\\"onOpacitySelectionChange(opac)\\\">\\r\\n                <label for=\\\"opacity_{{opac}}\\\">\\r\\n                    <span [ngStyle]=\\\"{\\r\\n                    'background-position':(opac * -4.1 + 37) + 'px 0px'}\\\"></span>\\r\\n                    {{opac}} %\\r\\n                    </label>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/map/google-map/google-map.component.html\n// module id = ./src/app/map/google-map/google-map.component.html\n// module chunks = main","import {\r\n    Component, OnInit, Input, Output, ElementRef,\r\n    ViewChild, EventEmitter, OnChanges, SimpleChanges, ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport 'rxjs/rx';\r\nimport { GoogleMapService } from '../googleMap.service';\r\nimport { IndicatorService } from '../../shared/service/api/indicator.service';\r\nimport { FTHelperService } from '../../shared/service/helper/ftHelper.service';\r\nimport { CoreDataHelperService } from '../../shared/service/helper/coreDataHelper.service';\r\nimport {\r\n    FTModel, FTRoot, Area, GroupRoot, CoreDataSet, CoreDataHelper, Unit,\r\n    IndicatorMetadataHash, IndicatorMetadata\r\n} from '../../typings/FT.d';\r\nimport { ComparatorIds } from '../../shared/shared';\r\nimport * as _ from 'underscore';\r\n\r\n@Component({\r\n    selector: 'ft-google-map',\r\n    templateUrl: './google-map.component.html',\r\n    styleUrls: ['./google-map.component.css'],\r\n    providers: [GoogleMapService]\r\n})\r\nexport class GoogleMapComponent implements OnChanges {\r\n    map: google.maps.Map;\r\n    @ViewChild('googleMap') mapEl: ElementRef;\r\n    @Output() mapInit = new EventEmitter();\r\n    @Output() hoverAreaCodeChanged = new EventEmitter();\r\n    @Output() selectedAreaChanged = new EventEmitter();\r\n    @Input() areaTypeId: number = null;\r\n    @Input() currentAreaCode: string = null;\r\n    @Input() areaCodeColour = null;\r\n    @Input() refreshColour;\r\n    @Input() isBoundaryNotSupported;\r\n    @Input() selectedAreaList;\r\n    @Input() sortedCoreData: Map<string, CoreDataSet> = null;\r\n    path: string = this.ftHelperService.getURL().img;\r\n    isError = false;\r\n    errorMessage: string;\r\n    showOverlay = false;\r\n    currentPolygons: google.maps.Polygon[] = [];\r\n    selectedPolygon: google.maps.Polygon = null;\r\n    boundry: geoBoundry.Boundry;\r\n    coreDataSet: CoreDataSet;\r\n    baseMaps: BaseMap[] = [\r\n        {\r\n            name: 'No background',\r\n            val: 0,\r\n            cssClass: 'None'\r\n        },\r\n        {\r\n            name: 'Streets',\r\n            val: 1,\r\n            cssClass: 'Streets'\r\n        }\r\n    ];\r\n    selectedbaseMap: BaseMap;\r\n    fillOpacity = 1.0;\r\n    opacityArray: number[] = [20, 40, 60, 80, 100];\r\n\r\n    /*purple boundry on polygon with bold border -represent that polygon is highlighted but not in a table */\r\n    purpleHighlightPolyOption: google.maps.PolygonOptions = { strokeColor: '#9D78D2', strokeWeight: 3 };\r\n    /*black boundry on polygon with bold border -represent that polygon is in table */\r\n    blackSelectedPolyOption: google.maps.PolygonOptions = { strokeColor: '#000000', strokeWeight: 3 };\r\n    /*black boundry on polygon with bolder border -represent that polygon is in table as well as highlighted */\r\n    blackHighlightPolyOption: google.maps.PolygonOptions = { strokeColor: '#000000', strokeWeight: 5 };\r\n    /* gray boundry on polygon with normal regular border */\r\n    grayPolyOption: google.maps.PolygonOptions = { strokeColor: '#333333', strokeWeight: 1 };\r\n    /*black boundry on polygon with bold border -represent that polygon is in table */\r\n    unselectedPolyOption: google.maps.PolygonOptions = { strokeColor: '#333333', strokeWeight: 1 };\r\n\r\n    constructor(private mapService: GoogleMapService,\r\n        private indicatorService: IndicatorService, private ftHelperService: FTHelperService,\r\n        private coreDataHelper: CoreDataHelperService\r\n    ) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['areaTypeId']) {\r\n            if (this.areaTypeId) {\r\n                this.loadMap();\r\n                this.loadPolygon(this.areaTypeId, this.path);\r\n            }\r\n        }\r\n        if (changes['currentAreaCode']) {\r\n            let areaCode = changes['currentAreaCode'].currentValue;\r\n            if (areaCode) {\r\n                this.highlightPolygon(this.currentAreaCode);\r\n            } else {\r\n                this.unhighlightSelectedPolygon();\r\n            }\r\n        }\r\n        if (changes['refreshColour']) {\r\n            let localRefreshColour = changes['refreshColour'].currentValue;\r\n            if (localRefreshColour !== undefined) {\r\n                if (this.areaCodeColour) {\r\n                    this.colourFillPolygon(false);\r\n                }\r\n            }\r\n        }\r\n        if (changes['selectedAreaList']) {\r\n            let localSelectedAreaList = changes['selectedAreaList'].currentValue;\r\n            if (localSelectedAreaList) {\r\n                this.removeSelectedPolygon();\r\n            }\r\n        }\r\n    }\r\n\r\n    unhighlightSelectedPolygon() {\r\n        if (this.selectedPolygon) {\r\n            this.selectedPolygon.setOptions(this.unselectedPolyOption);\r\n        }\r\n    }\r\n\r\n    removeSelectedPolygon() {\r\n        if (this.map) {\r\n            for (let i = 0; i < this.currentPolygons.length; i++) {\r\n                let areaCode = this.currentPolygons[i].get('areaCode');\r\n                if (!_.contains(this.selectedAreaList, areaCode)) {\r\n                    this.currentPolygons[i].setOptions(this.grayPolyOption);\r\n                } else {\r\n                    this.currentPolygons[i].setOptions(this.blackSelectedPolyOption);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    displayOverlay(): void {\r\n        this.showOverlay = true;\r\n    }\r\n\r\n    hideOverlay(): void {\r\n        this.showOverlay = false;\r\n    }\r\n\r\n    onOverlaySelectionChange(basemap): void {\r\n        this.selectedbaseMap = Object.assign({}, this.selectedbaseMap, basemap);\r\n        this.styleMap(this.selectedbaseMap);\r\n    }\r\n\r\n    onOpacitySelectionChange(opacity): void {\r\n        this.fillOpacity = opacity / 100;\r\n        this.loadPolygon(this.areaTypeId, this.path);\r\n    }\r\n\r\n    loadMap() {\r\n        if (!this.isBoundaryNotSupported) {\r\n            /// Load from GoogleMapService and style it \r\n            const mapOptions: google.maps.MapOptions = {\r\n                zoom: 6,\r\n                disableDoubleClickZoom: false,\r\n                mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                panControl: false,\r\n                zoomControl: true,\r\n                zoomControlOptions: { position: google.maps.ControlPosition.TOP_LEFT },\r\n                scaleControl: false,\r\n                streetViewControl: false,\r\n                mapTypeControl: false,\r\n                fullscreenControl: true,\r\n                backgroundColor: 'hsla(0, 0%, 0%, 0)',\r\n            };\r\n            let mapContainer = null;\r\n            if (this.mapEl && this.mapEl.nativeElement) {\r\n                mapContainer = this.mapEl.nativeElement;\r\n            }\r\n            this.map = this.mapService.loadMap(mapContainer, mapOptions);\r\n            this.selectedbaseMap = this.baseMaps[0];\r\n            if (this.baseMaps) { // No Backgroud at the time of load\r\n                this.onOverlaySelectionChange(this.baseMaps[0]);\r\n            }\r\n            if (this.areaTypeId) {\r\n                this.loadPolygon(this.areaTypeId, this.path);\r\n            }\r\n\r\n            this.mapInit.emit({\r\n                map: this.map,\r\n            });\r\n        }\r\n    }\r\n\r\n    styleMap(selectedbaseMap: BaseMap): void {\r\n        if (this.map) {\r\n            const noTiles = 'noTiles';\r\n            let styleArrayForNoBackground: any = [];\r\n            if (selectedbaseMap.val === 0) {\r\n                const visibilityOff: any = [{ visibility: 'off' }];\r\n                styleArrayForNoBackground = [\r\n                    {\r\n                        stylers: [\r\n                            {\r\n                                color: '#ffffff',\r\n                                fillOpacity: 0.0\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        featureType: 'road',\r\n                        elementType: 'geometry',\r\n                        stylers: visibilityOff\r\n                    }, {\r\n                        featureType: 'road',\r\n                        elementType: 'labels',\r\n                        stylers: visibilityOff\r\n                    }\r\n                ];\r\n            }\r\n            this.map.setOptions({ styles: styleArrayForNoBackground });\r\n            this.map.mapTypes.set(noTiles, new NoTileMapType());\r\n            this.setMapCenter();\r\n            google.maps.event.addListener(this.map, 'idle', event => {\r\n                let bounds = this.map.getCenter();\r\n                google.maps.event.trigger(this.map, 'resize');\r\n                this.map.setCenter(bounds);\r\n            });\r\n        }\r\n    }\r\n\r\n    setMapCenter() {\r\n        if (this.map) {\r\n            const bounds = new google.maps.LatLngBounds();\r\n            const position = new google.maps.LatLng(53.415649, -2.209015);\r\n            bounds.extend(position);\r\n            this.map.setCenter(bounds.getCenter());\r\n            this.map.setZoom(6);\r\n        }\r\n    }\r\n\r\n    loadPolygon(areaTypeId: number, path: string) {\r\n        if (this.map && this.areaTypeId && !this.isBoundaryNotSupported) {\r\n            this.mapService.loadBoundries(areaTypeId, path)\r\n                .subscribe(\r\n                data => {\r\n                    this.boundry = <geoBoundry.Boundry>data;\r\n                    this.isError = false;\r\n                    this.removePolygon();\r\n                    this.fillPolygon(this.boundry, this.fillOpacity);\r\n                    this.colourFillPolygon(true);\r\n                },\r\n                error => {\r\n                    this.isError = true;\r\n                    this.errorMessage = <any>error;\r\n                });\r\n        }\r\n    }\r\n\r\n    removePolygon(): void {\r\n        if (this.currentPolygons !== undefined) {\r\n            this.currentPolygons.forEach(element => {\r\n                element.setMap(null);\r\n            });\r\n            this.currentPolygons.length = 0;\r\n        }\r\n    }\r\n\r\n    getPolygonCoordinates(coordinates): Array<Array<google.maps.LatLng>> {\r\n\r\n        let coords: Array<Array<google.maps.LatLng>> = [];\r\n        for (let i = 0; i < coordinates.length; i++) {\r\n            for (let j = 0; j < coordinates[i].length; j++) {\r\n                let path: Array<google.maps.LatLng> = [];\r\n                for (let k = 0; k < coordinates[i][j].length; k++) {\r\n                    let coord = new google.maps.LatLng(coordinates[i][j][k][1], coordinates[i][j][k][0]);\r\n                    path.push(coord);\r\n                }\r\n                coords.push(path);\r\n            }\r\n        }\r\n        return coords;\r\n    }\r\n\r\n    fillPolygon(boundry: geoBoundry.Boundry, opacity: number): any {\r\n        if (boundry.features) {\r\n\r\n            // Variables to track most recent mouseover event\r\n            let overDate = null;\r\n            let overAreaCode = null;\r\n\r\n            let infoWindow: google.maps.InfoWindow = new google.maps.InfoWindow();\r\n\r\n            for (let x = 0; x < boundry.features.length; x++) {\r\n                let areaCode = boundry.features[x].properties.AreaCode;\r\n                let coordinates = boundry.features[x].geometry.coordinates;\r\n                let coords = this.getPolygonCoordinates(coordinates);\r\n\r\n                // Set polygon fill colour\r\n                let fillColour = '#B0B0B2';\r\n                if (this.areaCodeColour && this.areaCodeColour.length > 0) {\r\n                    fillColour = this.areaCodeColour.get(areaCode);\r\n                }\r\n\r\n                let polygon = new google.maps.Polygon({\r\n                    paths: coords,\r\n                    strokeColor: '#333333',\r\n                    strokeOpacity: 0.8,\r\n                    strokeWeight: 1,\r\n                    fillColor: fillColour,\r\n                    fillOpacity: opacity,\r\n                    clickable: true\r\n                });\r\n\r\n                polygon.set('areaCode', areaCode);\r\n                polygon.setMap(this.map);\r\n\r\n                google.maps.event.addListener(polygon, 'mouseover', (event) => {\r\n\r\n                    overAreaCode = areaCode;\r\n                    overDate = new Date();\r\n\r\n                    // Display tooltip\r\n                    let tooltip = this.getToolTipContent(areaCode);\r\n                    if (tooltip) {\r\n                        infoWindow.setContent(tooltip);\r\n                        this.setInfoWindowPosition(event, infoWindow);\r\n                        infoWindow.open(this.map);\r\n                    }\r\n\r\n                    this.setPolygonBorderColour(polygon);\r\n                });\r\n\r\n                google.maps.event.addListener(polygon, 'mousemove', (event) => {\r\n                    this.setInfoWindowPosition(event, infoWindow);\r\n                });\r\n\r\n                google.maps.event.addListener(polygon, 'mouseout', (event) => {\r\n\r\n                    // Wait in case immediate mouseover event and this mouseover event was\r\n                    // caused by mouse moving over the infowindow\r\n                    setTimeout(function () {\r\n                        var time = new Date().getTime();\r\n                        if (time - overDate.getTime() > 25 && areaCode == overAreaCode)\r\n                            infoWindow.close();\r\n                    }, 25);\r\n                    this.setPolygonBorderColour(polygon);\r\n                });\r\n\r\n                google.maps.event.addListener(polygon, 'click', (event) => {\r\n                    if (this.sortedCoreData[areaCode] && this.ftHelperService.isValuePresent(this.sortedCoreData[areaCode].ValF)) {\r\n                        polygon.setOptions(this.blackSelectedPolyOption);\r\n                        this.selectedAreaChanged.emit({ areaCode: areaCode });\r\n                    }\r\n                });\r\n\r\n                this.currentPolygons.push(polygon);\r\n            }\r\n        }\r\n    }\r\n\r\n    setPolygonBorderColour(polygon) {\r\n        let currentAreaCode = polygon.get('areaCode');\r\n        if (_.contains(this.selectedAreaList, currentAreaCode)) {\r\n            polygon.setOptions(this.blackSelectedPolyOption);\r\n        } else {\r\n            polygon.setOptions(this.grayPolyOption);\r\n        }\r\n    }\r\n\r\n    setInfoWindowPosition(event, infoWindow) {\r\n        let pos: google.maps.LatLng = event.latLng;\r\n        infoWindow.setPosition(new google.maps.LatLng(pos.lat() + 0.02, pos.lng()));\r\n    }\r\n\r\n    getToolTipContent(areaCode: string): string {\r\n        this.hoverAreaCodeChanged.emit({ areaCode: areaCode });\r\n        let currentGrpRoot: GroupRoot = this.ftHelperService.getCurrentGroupRoot();\r\n        let data: IndicatorMetadata = this.ftHelperService.getMetadata(currentGrpRoot.IID);\r\n        let unit = data.Unit;\r\n        let areaName = '';\r\n        if (areaCode) {\r\n            areaName = this.ftHelperService.getAreaName(areaCode);\r\n        }\r\n        let value = '';\r\n        if (unit !== undefined && this.sortedCoreData[areaCode] !== undefined\r\n            && this.ftHelperService.isValuePresent(this.sortedCoreData[areaCode].ValF)) {\r\n            value = this.sortedCoreData !== null ? '<br>' + this.coreDataHelper.valueWithUnit(unit).\r\n                getFullLabel(this.sortedCoreData[areaCode].ValF)\r\n                : '<br>-';\r\n        }\r\n        let toolTipcontent;\r\n        if (areaName !== '' || value !== '') {\r\n            toolTipcontent = '<b>' + areaName + '</b>' + value;\r\n        }\r\n        return toolTipcontent;\r\n    }\r\n\r\n    highlightPolygon(areaCode): void {\r\n        if (this.map) {\r\n            const polygon: google.maps.Polygon = _.where(this.currentPolygons, { areaCode: areaCode })[0];\r\n            if (this.selectedPolygon) {\r\n                let areaCode = this.selectedPolygon.get('areaCode');\r\n                this.selectedPolygon.setMap(null);\r\n                if (_.contains(this.selectedAreaList, areaCode)) {\r\n                    this.selectedPolygon.setOptions(this.blackSelectedPolyOption);\r\n                } else {\r\n                    this.selectedPolygon.setOptions(this.grayPolyOption);\r\n                }\r\n                this.selectedPolygon.setMap(this.map);\r\n            }\r\n\r\n            this.selectedPolygon = polygon;\r\n\r\n            if (polygon) {\r\n                polygon.setMap(null);\r\n                if (!_.contains(this.selectedAreaList, areaCode)) {\r\n                    polygon.setOptions(this.purpleHighlightPolyOption);\r\n                } else {\r\n                    polygon.setOptions(this.blackHighlightPolyOption);\r\n                }\r\n                polygon.setMap(this.map);\r\n            }\r\n        }\r\n    }\r\n\r\n    colourFillPolygon(center: boolean): void {\r\n        if (this.map) {\r\n            let regionPolygons: Array<google.maps.Polygon> = [];\r\n            const currentComparatorId = this.ftHelperService.getComparatorId();\r\n            for (let i = 0; i < (this.currentPolygons.length); i++) {\r\n                let polygon = this.currentPolygons[i];\r\n\r\n                // Set polygon fill colour             \r\n                polygon.setMap(null);\r\n                let areaCode = polygon.get('areaCode');\r\n                let color = this.areaCodeColour.get(areaCode);\r\n                if (color === undefined) {\r\n                    color = '#B0B0B2';\r\n                }\r\n                polygon.set('fillColor', color);\r\n                polygon.setMap(this.map);\r\n\r\n                if (currentComparatorId !== ComparatorIds.national) {\r\n                    let coreDataset = this.sortedCoreData[areaCode];\r\n                    if (coreDataset) {\r\n                        regionPolygons.push(polygon);\r\n                    }\r\n                }\r\n            }\r\n            /*if Benchmark is region, center and zoom in into that region */\r\n            if (center) {\r\n                if (regionPolygons.length > 0 && currentComparatorId !== ComparatorIds.national) {\r\n                    const bounds = new google.maps.LatLngBounds();\r\n                    for (let i = 0; i < regionPolygons.length; i++) {\r\n                        bounds.extend(this.getPolygonBounds(regionPolygons[i]).getCenter());\r\n                    }\r\n                    this.map.fitBounds(bounds);\r\n                    this.map.setCenter(bounds.getCenter());\r\n                    this.map.setZoom(7);\r\n                }\r\n                if (currentComparatorId === ComparatorIds.national) {\r\n                    this.setMapCenter();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getPolygonBounds(polygon: google.maps.Polygon) {\r\n        let bounds = new google.maps.LatLngBounds();\r\n        polygon.getPath().forEach(function (element, index) { bounds.extend(element); });\r\n        return bounds;\r\n    }\r\n\r\n    onExportClick(event: MouseEvent) {\r\n        event.preventDefault();\r\n        let chartTitle = this.buildChartTitle();\r\n        let root = this.ftHelperService.getCurrentGroupRoot();\r\n        let indicatorName = this.ftHelperService.getMetadataHash()[root.IID].Descriptive.Name +\r\n            this.ftHelperService.getSexAndAgeLabel(root);\r\n        let title = '<b>Map of ' + this.ftHelperService.getAreaTypeName() +\r\n            's in ' + this.ftHelperService.getCurrentComparator().Name +\r\n            ' for ' + indicatorName + '<br/> (' + chartTitle + ')</b>';\r\n        $('<div id=\"map-export-title\" style=\"text-align: center; font-family:Arial;\">' +\r\n            title + '</div>').appendTo(this.mapEl.nativeElement);\r\n        this.ftHelperService.saveElementAsImage(this.mapEl.nativeElement, 'Map');\r\n        $('#map-export-title').remove();\r\n\r\n        this.ftHelperService.logEvent('ExportImage', 'Map');\r\n    }\r\n\r\n    buildChartTitle(): string {\r\n        const currentGrpRoot: GroupRoot = this.ftHelperService.getCurrentGroupRoot();\r\n        const data: IndicatorMetadata = this.ftHelperService.getMetadata(currentGrpRoot.IID);\r\n        const unit = data.Unit;\r\n        const unitLabel = (typeof unit.Label !== 'undefined') ? unit.Label : '';\r\n        const period: string = currentGrpRoot.Grouping[0].Period;\r\n        return data.ValueType.Name + ' - ' + unitLabel + ' ' + period;\r\n    }\r\n}\r\n\r\nexport class NoTileMapType implements google.maps.MapType {\r\n    tileSize = new google.maps.Size(1024, 1024);\r\n    maxZoom = 20;\r\n    getTile(tileCoord: google.maps.Point, zoom: number, ownerDocument: Document): Element {\r\n        return ownerDocument.createElement('div');\r\n    }\r\n    releaseTile(tile: Element): void {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n}\r\n\r\nexport interface BaseMap {\r\n    name: string; val: number; cssClass: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/map/google-map/google-map.component.ts","import { Injectable, ElementRef, EventEmitter } from '@angular/core';\r\nimport {Http, Response} from '@angular/http';\r\nimport 'rxjs/rx';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {FTModel, FTRoot} from '../typings/FT.d';\r\nimport {FTHelperService} from '../shared/service/helper/ftHelper.service';\r\n\r\n\r\n@Injectable()\r\nexport class GoogleMapService {\r\n  isLoaded = new EventEmitter();\r\n  map: google.maps.Map;\r\n\r\n  constructor(private http: Http, private ftHelperservice: FTHelperService){ }\r\n\r\n  loadMap(mapDiv: Element, mapOptions: google.maps.MapOptions): google.maps.Map {\r\n      this.map = null;\r\n      if(mapDiv != null){\r\n        this.map = new google.maps.Map(mapDiv, mapOptions);\r\n      }\r\n      return this.map;\r\n  }\r\n  loadBoundries(areaTypeId: number, path: string): any {\r\n       const baseUrl: string = path + 'maps/' + areaTypeId + '/geojson/boundaries.js';\r\n       return this.http.get( baseUrl).map(res => res.json()).catch(this.handleError);\r\n  }\r\n  private handleError(error: any) {\r\n        const errorMessage: string = 'Unsupported map type. Maps are not available for this area type.';\r\n        return Observable.throw(errorMessage);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/map/googleMap.service.ts","module.exports = \".chartClass{\\r\\n    height: 242px;\\r\\n\\twidth: 490px;\\r\\n\\tmargin-left: 10px;\\r\\n    float: left;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/map/map-chart/map-chart.component.css\n// module id = ./src/app/map/map-chart/map-chart.component.css\n// module chunks = main","module.exports = \"<span class=\\\"export-chart-box\\\" style=\\\"margin-left: 11px;float: left\\\">\\r\\n    <a class=\\\"export-link\\\" (click)=\\\"onExportClick($event)\\\">Export chart as image</a>\\r\\n</span>\\r\\n<div #mapChart class=\\\"chartClass\\\"></div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/map/map-chart/map-chart.component.html\n// module id = ./src/app/map/map-chart/map-chart.component.html\n// module chunks = main","import { Component, ElementRef, ViewChild, Input, Output, SimpleChanges, OnChanges, EventEmitter } from '@angular/core';\r\nimport {\r\n    FTModel, FTRoot, Area, GroupRoot, CoreDataSet, CoreDataHelper, Unit, ValueWithUnit, ValueNote,\r\n    IndicatorMetadataHash, IndicatorMetadata\r\n} from '../../typings/FT.d';\r\nimport { FTHelperService } from '../../shared/service/helper/ftHelper.service';\r\nimport { CoreDataHelperService } from '../../shared/service/helper/coreDataHelper.service';\r\nimport { AreaCodes } from '../../shared/shared'\r\nimport * as Highcharts from 'highcharts';\r\nrequire('highcharts/modules/exporting')(Highcharts);\r\nrequire('highcharts/highcharts-more')(Highcharts);\r\nimport * as _ from 'underscore';\r\n\r\n@Component({\r\n    selector: 'ft-map-chart',\r\n    templateUrl: './map-chart.component.html',\r\n    styleUrls: ['./map-chart.component.css']\r\n})\r\nexport class MapChartComponent implements OnChanges {\r\n    @ViewChild('mapChart') public chartEl: ElementRef;\r\n    @Input() sortedCoreData: Map<string, CoreDataSet> = null;\r\n    @Input() areaTypeId: number = null;\r\n    @Input() currentAreaCode = null;\r\n    @Input() areaCodeColour = null;\r\n    @Input() isBoundaryNotSupported;\r\n    @Output() selectedAreaCodeChanged = new EventEmitter();\r\n    chart: Highcharts.ChartObject;\r\n    chartData: { color: String, x: number, key: string, y: number }[] = [];\r\n    @Output() hoverAreaCodeChanged = new EventEmitter();\r\n    constructor(private ftHelperService: FTHelperService,\r\n        private coreDataHelperService: CoreDataHelperService) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n        if (changes['isBoundaryNotSupported']) {\r\n            let localBoundryNotSupported = changes['isBoundaryNotSupported'].currentValue;\r\n            if (localBoundryNotSupported !== undefined) {\r\n                if (localBoundryNotSupported) {\r\n                    this.chartData = [];\r\n                }\r\n            }\r\n        }\r\n        if (changes['sortedCoreData']) {\r\n            let sortedataChange = changes['sortedCoreData'].currentValue;\r\n            if (sortedataChange) {\r\n                this.loadHighChart(sortedataChange);\r\n            }\r\n        }\r\n        if (changes['currentAreaCode']) {\r\n            let currentAreaCode = changes['currentAreaCode'].currentValue;\r\n            if (currentAreaCode) {\r\n                this.highlightArea(currentAreaCode);\r\n            }\r\n        }\r\n        if (changes['areaCodeColour']) {\r\n            let areaCodeColour = changes['areaCodeColour'].currentValue;\r\n            if (areaCodeColour) {\r\n                if (this.sortedCoreData) {\r\n                    this.loadHighChart(this.sortedCoreData);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    loadHighChart(sortedata: Map<string, CoreDataSet>) {\r\n\r\n        let xVal = 0;\r\n        let xAxisCategories: {\r\n            AreaName: String, ValF: string, LoCIF: string,\r\n            UpCIF: string, AreaCode: string, NoteId: number\r\n        }[] = [];\r\n        let errorData = [];\r\n        this.chartData = [];\r\n        let regionValues = [];\r\n        const x: number = 0;\r\n        let currentGrpRoot: GroupRoot = this.ftHelperService.getCurrentGroupRoot();\r\n        let unit = this.ftHelperService.getMetadata(currentGrpRoot.IID).Unit;\r\n        let valuesForBarChart: any[] = [];\r\n        let extraTooltip: string = '';\r\n\r\n        Object.keys(sortedata).forEach(key => {\r\n            let value: CoreDataSet = sortedata[key];\r\n            let colour = null;\r\n            if (this.areaCodeColour) {\r\n                colour = this.areaCodeColour.get(key);\r\n            }\r\n            if (value.ValF !== '-') {\r\n                valuesForBarChart.push({\r\n                    Colour: colour\r\n                    , AreaCode: value.AreaCode\r\n                    , Val: value.Val\r\n                    , LCI: value.LoCI\r\n                    , UCI: value.UpCI\r\n                    , ValF: value.ValF\r\n                    , LoCIF: value.LoCIF\r\n                    , UpCIF: value.UpCIF\r\n                    , NoteId: value.NoteId\r\n                });\r\n            }\r\n        });\r\n\r\n        valuesForBarChart.sort((leftside, righside): number => {\r\n            if (leftside.Val < righside.Val) { return -1; }\r\n            if (leftside.Val > righside.Val) { return 1; }\r\n            return 0;\r\n        });\r\n\r\n        for (let value of valuesForBarChart) {\r\n            this.chartData.push({ color: value.Colour, x: xVal, key: value.AreaCode, y: value.Val });\r\n            xVal++;\r\n\r\n            let areaName = this.ftHelperService.getAreaName(value.AreaCode);\r\n            xAxisCategories.push({\r\n                AreaName: areaName, ValF: value.ValF, LoCIF: value.LoCIF,\r\n                UpCIF: value.UpCIF, AreaCode: value.AreaCode, NoteId: value.NoteId\r\n            });\r\n\r\n            errorData.push([value.LoCI, value.UpCI]);\r\n        }\r\n        let series: any[] /*Highcharts.IndividualSeriesOptions[]*/ = [\r\n            {\r\n                type: 'column',\r\n                name: 'Value',\r\n                data: this.chartData\r\n            }\r\n            ,\r\n            {\r\n                type: 'errorbar',\r\n                name: 'My Errors',\r\n                data: errorData,\r\n                zIndex: 1000,\r\n                color: '#666666'\r\n            }\r\n        ];\r\n\r\n        const comparatorName: string = this.ftHelperService.getCurrentComparator().Name;\r\n        const valueWithUnit: ValueWithUnit = this.coreDataHelperService.valueWithUnit(unit);\r\n        for (let grouping of currentGrpRoot.Grouping) {\r\n\r\n            if (grouping.ComparatorData.ValF === '-') continue;\r\n            let valF = grouping.ComparatorData.ValF;\r\n            let val = grouping.ComparatorData.Val;\r\n\r\n            if (grouping.ComparatorId === 4 && grouping.ComparatorData.AreaCode === AreaCodes.England) {\r\n                // England data\r\n                regionValues[series.length] = valF;\r\n                series.push({\r\n                    type: 'line',\r\n                    name: 'England',\r\n                    color: '#333333',\r\n                    data: [[0, val], [xVal - 1, val]]\r\n                });\r\n                extraTooltip += '<br>England: ' + valueWithUnit.getFullLabel(valF);\r\n            } else if (grouping.ComparatorId !== 4 && grouping.ComparatorId === this.ftHelperService.getComparatorId()) {\r\n                // Subnational data\r\n                regionValues[series.length] = valF;\r\n                series.push({\r\n                    type: 'line',\r\n                    name: comparatorName,\r\n                    data: [[0, val], [xVal - 1, val]],\r\n                    color: '#0000FF'\r\n                });\r\n                extraTooltip += '<br>' + comparatorName + ': ' + valueWithUnit.getFullLabel(valF);\r\n            }\r\n        }\r\n        let yAxis = {\r\n            labels: {\r\n                formatter: function () {\r\n                    return this.value;\r\n                },\r\n                style: {\r\n                    color: '#999999'\r\n                }\r\n            },\r\n            title: {\r\n                text: ''\r\n            }\r\n        };\r\n        const chartTitle: string = this.buildChartTitle();\r\n        let valueNotes: Array<ValueNote> = [] = this.ftHelperService.getValueNotes();\r\n        let areaCodeChanged = this.hoverAreaCodeChanged;\r\n        let _thisLocal = this;\r\n\r\n        // Locals for events\r\n        let unhighlightArea = this.unhighlightArea;\r\n        let chartData = this.chartData;\r\n\r\n        const chartOptions: any /*Highcharts.Options*/ = {\r\n            title: {\r\n                text: chartTitle\r\n            },\r\n            credits: false,\r\n            legend: {\r\n                enabled: true,\r\n                layout: 'vertical',\r\n                borderWidth: 0\r\n            },\r\n            xAxis: {\r\n                labels: { enabled: false },\r\n                tickLength: 0\r\n            },\r\n            yAxis: yAxis,\r\n            tooltip: {\r\n                shared: false,\r\n                formatter: function () {\r\n                    if (this.series.type === 'line') {\r\n                        return '<b>' + this.series.name + '</b><br />'\r\n                            + valueWithUnit.getFullLabel(regionValues[this.series.index]);\r\n                    }\r\n                    let data = xAxisCategories[this.x];\r\n\r\n                    _thisLocal.hoverAreaCodeChanged.emit({ areaCode: data.AreaCode });\r\n                    let s = '<b>' + data.AreaName + '</b>';\r\n                    s += '<br>' + valueWithUnit.getFullLabel(data.ValF);\r\n\r\n                    if (data.NoteId !== undefined) {\r\n                        s += '<br><em>' + valueNotes[data.NoteId].Text + '</em>';\r\n                    }\r\n\r\n                    if (data.LoCIF !== undefined) {\r\n                        s += '<br>LCI: ' + valueWithUnit.getFullLabel(data.LoCIF);\r\n                    }\r\n                    if (data.UpCIF !== undefined) {\r\n                        s += '<br>UCI: ' + valueWithUnit.getFullLabel(data.UpCIF);\r\n                    }\r\n\r\n                    s += '<br>Rank: ' + (this.x + 1);\r\n\r\n                    s += extraTooltip;\r\n\r\n                    return s;\r\n                }\r\n            },\r\n            plotOptions: {\r\n                column: {\r\n                    pointPadding: 0,\r\n                    showInLegend: false,\r\n                    animation: false,\r\n                    borderWidth: 0,\r\n                    groupPadding: 0,\r\n                    pointWidth: 470 / this.chartData.length, // width calculated to avoid white lines in the chart\r\n                    shadow: false,\r\n                    states: {\r\n                        hover:\r\n                            {\r\n                                brightness: 0,\r\n                                color: '#000000',\r\n                            }\r\n                    },\r\n                    point: {\r\n                        events: {\r\n                            mouseOut: function (e) {\r\n                                let areaCode = this.options.key;\r\n                                _thisLocal.hoverAreaCodeChanged.emit({ areaCode: null });\r\n                                unhighlightArea(chart, chartData, areaCode);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                line: {\r\n                    animation: false,\r\n                    marker: {\r\n                        enabled: false,\r\n                    },\r\n                    states: {\r\n                        hover: {\r\n                            lineWidth: 0,\r\n                            marker:\r\n                                {\r\n                                    enabled: false,\r\n                                    symbol: 'x'\r\n                                }\r\n                        }\r\n                    }\r\n                },\r\n                errorbar: {\r\n                    animation: false\r\n                }\r\n            },\r\n            exporting: {\r\n                enabled: false,\r\n                chartOptions: {\r\n                    title: {\r\n                        text: ''\r\n                    }\r\n                }\r\n            },\r\n            series: series\r\n        };\r\n\r\n        let chartContainer = null;\r\n        if (this.chartEl && this.chartEl.nativeElement) {\r\n            chartContainer = this.chartEl.nativeElement;\r\n        }\r\n        this.chart = new Highcharts.Chart(chartContainer, chartOptions);\r\n        let chart = this.chart;\r\n    }\r\n\r\n    highlightArea(areaCode: string): void {\r\n        if (this.chart && this.chartData != null) {\r\n            let data = _.where(this.chartData, { key: areaCode })[0];\r\n            if (data !== undefined) {\r\n                this.chart.series[0].data[data.x].select(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    unhighlightArea(chart: Highcharts.ChartObject,\r\n        chartData: any, areaCode: string): void {\r\n        if (chart && chartData != null) {\r\n            let data = _.where(chartData, { key: areaCode })[0];\r\n            if (data !== undefined) {\r\n                chart.series[0].data[data['x']].select(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    onExportClick(event: MouseEvent) {\r\n        let title = this.buildChartTitle();\r\n        if (this.chart) {\r\n            this.chart.exportChart({ type: 'image/png' }, {\r\n                chart: {\r\n                    spacingTop: 70,\r\n                    height: 312,\r\n                    width: 490,\r\n                    events: {\r\n                        load: function () {\r\n                            this.renderer.text(title, 250, 15)\r\n                                .attr({\r\n                                    align: 'center'\r\n                                })\r\n                                .css({\r\n                                    color: '#333',\r\n                                    fontSize: '10px',\r\n                                    width: '450px'\r\n                                })\r\n                                .add();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.ftHelperService.logEvent('ExportImage', 'MapBarChart');\r\n        }\r\n    }\r\n    buildChartTitle(): string {\r\n        const currentGrpRoot: GroupRoot = this.ftHelperService.getCurrentGroupRoot();\r\n        const data: IndicatorMetadata = this.ftHelperService.getMetadata(currentGrpRoot.IID);\r\n        const unit = data.Unit;\r\n        const unitLabel = (typeof unit.Label !== 'undefined') ? unit.Label : '';\r\n        const period: string = currentGrpRoot.Grouping[0].Period;\r\n        return data.ValueType.Name + ' - ' + unitLabel + ' ' + period;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/map/map-chart/map-chart.component.ts","module.exports = \".asterisk {\\r\\n    font-size: 1.2em;\\r\\n    color: #333;\\r\\n    position: relative;\\r\\n    top: 4px;\\r\\n}\\r\\n\\r\\n.key-box {\\r\\n    display: block;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n#not-compared {\\r\\n    margin-left: 10px;\\r\\n}\\r\\n\\r\\n.key-container {\\r\\n    min-height: 25px;\\r\\n}\\r\\n\\r\\n.custom-key-table td {\\r\\n    width: 80px;\\r\\n    text-align: center;\\r\\n    padding: 2px;\\r\\n}\\r\\n\\r\\n.key-container {\\r\\n    float: left;\\r\\n    margin: 10px 0 20px 0;\\r\\n}\\r\\n\\r\\n#key-Quartiles,\\r\\n#key-Quintiles,\\r\\n#key-Continuous {\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.fl {\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.key-table {\\r\\n    font-size: 11px;\\r\\n    color: #777;\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.key-label {\\r\\n    font-style: italic;\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n.key-spacer {\\r\\n    width: 15px;\\r\\n}\\r\\n\\r\\ntd.better,\\r\\nspan.better {\\r\\n    background-color: #92d050;\\r\\n    color: #333;\\r\\n}\\r\\n\\r\\ntd.worse,\\r\\ntd.same,\\r\\ntd.better,\\r\\ntd.none,\\r\\n.bobLower,\\r\\n.bobHigher,\\r\\n.grade-quintile-1,\\r\\n.grade-quintile-2,\\r\\n.grade-quintile-3,\\r\\n.grade-quintile-4,\\r\\n.grade-quintile-5 {\\r\\n    margin: 0 0 0 0;\\r\\n    padding: 0 0 0 0;\\r\\n    text-align: center;\\r\\n    cursor: default;\\r\\n}\\r\\n\\r\\ntd.bobLower,\\r\\nspan.bobLower {\\r\\n    background-color: #5555e6;\\r\\n    color: #fff;\\r\\n}\\r\\n\\r\\ntd.bobHigher,\\r\\nspan.bobHigher,\\r\\ntd.overlapping-cis {\\r\\n    background-color: #bed2ff;\\r\\n}\\r\\n\\r\\ntd.grade-quintile-1,\\r\\nspan.grade-quintile-1 {\\r\\n    background-color: #ded3ec;\\r\\n    color: #000;\\r\\n}\\r\\n\\r\\ntd.grade-quintile-2,\\r\\nspan.grade-quintile-2 {\\r\\n    background-color: #bea7da;\\r\\n    color: #000;\\r\\n}\\r\\n\\r\\ntd.grade-quintile-3,\\r\\nspan.grade-quintile-3 {\\r\\n    background-color: #9e7cc8;\\r\\n    color: #fff;\\r\\n}\\r\\n\\r\\ntd.grade-quintile-4,\\r\\nspan.grade-quintile-4 {\\r\\n    background-color: #7e50b6;\\r\\n    color: #fff;\\r\\n}\\r\\n\\r\\ntd.grade-quintile-5,\\r\\nspan.grade-quintile-5 {\\r\\n    background-color: #5e25a4;\\r\\n    color: #fff;\\r\\n}\\r\\n\\r\\ntd.key-box-right {\\r\\n    border-right: 1px solid #eee;\\r\\n}\\r\\n\\r\\ntd.none {\\r\\n    background-color: #fff;\\r\\n}\\r\\n\\r\\n#value-note-legend {\\r\\n    float: right;\\r\\n    font-size: 11px;\\r\\n    color: #777;\\r\\n    text-align: right;\\r\\n    margin-top: 8px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/map/map-legend/map-legend.component.css\n// module id = ./src/app/map/map-legend/map-legend.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"key-container col-md-8\\\">\\r\\n        <table class=\\\"key-table\\\" cellspacing=\\\"0\\\" *ngIf=\\\"showRag()\\\">\\r\\n            <tr>\\r\\n                <td class=\\\"key-text key-label\\\">Compared with benchmark</td>\\r\\n                <td class=\\\"key-spacer\\\"></td>\\r\\n                <td class=\\\"better key\\\">\\r\\n                    <div class=\\\"tartan-box key-box\\\">\\r\\n                        <img class=\\\"tartan-fill print-only\\\" src=\\\"/images/better.png\\\" alt=\\\"\\\">\\r\\n                        <div class=\\\"tartan-text\\\">\\r\\n                            Better\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td class=\\\"same key\\\">\\r\\n                    <div class=\\\"tartan-box key-box\\\">\\r\\n                        <img class=\\\"tartan-fill print-only\\\" src=\\\"/images/same.png\\\" alt=\\\"\\\">\\r\\n                        <div class=\\\"tartan-text\\\">\\r\\n                            Similar\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td class=\\\"worse key\\\">\\r\\n                    <div class=\\\"tartan-box key-box\\\">\\r\\n                        <img class=\\\"tartan-fill print-only\\\" src=\\\"/images/red.png\\\" alt=\\\"\\\">\\r\\n                        <div class=\\\"tartan-text\\\">\\r\\n                            Worse\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n        <table class=\\\"key-table\\\" cellspacing=\\\"0\\\" *ngIf=\\\"showBob()\\\">\\r\\n            <tr>\\r\\n                <td class=\\\"key-text key-label\\\">Compared with benchmark</td>\\r\\n                <td class=\\\"key-spacer\\\"></td>\\r\\n                <td class=\\\"bobLower key\\\">\\r\\n                    <div class=\\\"tartan-box key-box\\\">\\r\\n                        <img class=\\\"tartan-fill print-only\\\" src=\\\"/images/bobLower.png\\\" alt=\\\"\\\">\\r\\n                        <div class=\\\"tartan-text\\\">\\r\\n                            Lower\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td class=\\\"same key\\\">\\r\\n                    <div class=\\\"tartan-box key-box\\\">\\r\\n                        <img class=\\\"tartan-fill print-only\\\" src=\\\"/images/same.png\\\" alt=\\\"\\\">\\r\\n                        <div class=\\\"tartan-text\\\">\\r\\n                            Similar\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td class=\\\"bobHigher key\\\">\\r\\n                    <div class=\\\"tartan-box key-box\\\">\\r\\n                        <img class=\\\"tartan-fill print-only\\\" src=\\\"/images/bobHigher.png\\\" alt=\\\"\\\">\\r\\n                        <div class=\\\"tartan-text\\\">\\r\\n                            Higher\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n        <table id=\\\"not-compared\\\" class=\\\"key-table\\\" cellspacing=\\\"0\\\" *ngIf=\\\"showBenchmark()\\\">\\r\\n            <tr>\\r\\n                <td id=\\\"map-key-part2\\\" class=\\\"none key key-box-right\\\" style=\\\"display: table-cell;\\\">\\r\\n                    <div class=\\\"tartan-box key-box\\\">\\r\\n                        Not compared\\r\\n                    </div>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n\\r\\n        <table class=\\\"key-table custom-key-table\\\" cellspacing=\\\"2\\\" *ngIf=\\\"showQuartiles()\\\">\\r\\n            <tbody>\\r\\n                <tr>\\r\\n                    <td class=\\\"key-text\\\">Quartiles:</td>\\r\\n                    <td style=\\\"background-color: #E8C7D1;\\\">Low</td>\\r\\n                    <td style=\\\"background-color: #B74D6D;\\\" class=\\\"whiteText\\\">&nbsp;</td>\\r\\n                    <td style=\\\"background-color: #98002E;\\\" class=\\\"whiteText\\\">&nbsp;</td>\\r\\n                    <td style=\\\"background-color: #700023;\\\" class=\\\"whiteText\\\">High</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n\\r\\n        <table class=\\\"key-table custom-key-table\\\" cellspacing=\\\"2\\\" *ngIf=\\\"showQuintiles()\\\">\\r\\n            <tr>\\r\\n                <td class=\\\"key-text\\\">Quintiles:</td>\\r\\n                <td style=\\\"background-color: #DED3EC;\\\">Low</td>\\r\\n                <td style=\\\"background-color: #BEA7DA;\\\">&nbsp;</td>\\r\\n                <td style=\\\"background-color: #9E7CC8;\\\" class=\\\"whiteText\\\">&nbsp;</td>\\r\\n                <td style=\\\"background-color: #7E50B6;\\\" class=\\\"whiteText\\\">&nbsp;</td>\\r\\n                <td style=\\\"background-color: #5E25A4;\\\" class=\\\"whiteText\\\">High</td>\\r\\n            </tr>\\r\\n        </table>\\r\\n\\r\\n        <table class=\\\"key-table custom-key-table\\\" cellspacing=\\\"0\\\" *ngIf=\\\"showContinuous()\\\">\\r\\n            <tr>\\r\\n                <td class=\\\"key-text\\\">Continuous:</td>\\r\\n                <td style=\\\"background-color: #FFE97F;\\\">Lowest</td>\\r\\n                <td class=\\\"continual_range whiteText\\\">&nbsp;</td>\\r\\n                <td style=\\\"background-color: #151C55;\\\" class=\\\"whiteText\\\">Highest</td>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </div>\\r\\n    <div id=\\\"value-note-legend\\\" class=\\\"col-md-4 pull-right\\\">\\r\\n        <span class=\\\"asterisk\\\">*</span> a note is attached to the value, hover over to see more details\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/map/map-legend/map-legend.component.html\n// module id = ./src/app/map/map-legend/map-legend.component.html\n// module chunks = main","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ft-map-legend',\r\n  templateUrl: './map-legend.component.html',\r\n  styleUrls: ['./map-legend.component.css']\r\n})\r\nexport class MapLegendComponent {\r\n  @Input() legendDisplay: number = LegendDisplay.NoLegendRequired;\r\n\r\n  showBenchmark() {\r\n    return this.legendDisplay === LegendDisplay.RAG ||\r\n      this.legendDisplay === LegendDisplay.BOB ||\r\n      this.legendDisplay === LegendDisplay.NotCompared;\r\n  }\r\n\r\n  showRag() {\r\n    return this.legendDisplay === LegendDisplay.RAG;\r\n  }\r\n\r\n  showBob() {\r\n    return this.legendDisplay === LegendDisplay.BOB;\r\n  }\r\n\r\n  showQuartiles() {\r\n    return this.legendDisplay === LegendDisplay.Quartiles;\r\n  }\r\n\r\n  showQuintiles() {\r\n    return this.legendDisplay === LegendDisplay.Quintiles;\r\n  }\r\n\r\n  showContinuous() {\r\n    return this.legendDisplay === LegendDisplay.Continuous;\r\n  }\r\n}\r\n\r\nexport class LegendDisplay {\r\n  public static readonly NoLegendRequired = 1;\r\n  public static readonly RAG = 2;\r\n  public static readonly BOB = 3;\r\n  public static readonly NotCompared = 4;\r\n  public static readonly Quintiles = 5;\r\n  public static readonly Quartiles = 6;\r\n  public static readonly Continuous = 7;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/map/map-legend/map-legend.component.ts","module.exports = \"table {\\r\\n    width: 100%;\\r\\n    border: 1px solid #ccc;\\r\\n    padding: 0;\\r\\n    border-collapse: separate;\\r\\n    background-color: transparent;\\r\\n}\\r\\n\\r\\n\\r\\n/* Table header */\\r\\n\\r\\n\\r\\nth {\\r\\n    font-weight: normal;\\r\\n    text-align: right;\\r\\n    padding-right: 10px;\\r\\n    background-color: #EEEEEE;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n\\r\\ntr th:first-child {\\r\\n    text-align: left;\\r\\n    padding-left: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n/* Table body */\\r\\n\\r\\n\\r\\ntd {\\r\\n    font-weight: normal;\\r\\n    color: #999;\\r\\n    padding-right: 10px;\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n\\r\\ntd.value-note-symbol {\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n    display: block;\\r\\n    cursor: default;\\r\\n}\\r\\n\\r\\n\\r\\ntr td:first-child {\\r\\n    padding-left: 5px;\\r\\n    border-left-width: 5px;\\r\\n    border-left-style: solid;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n\\r\\ntr.hover td:first-child {\\r\\n    border-left-style: solid;\\r\\n}\\r\\n\\r\\n\\r\\ntr.selected td {\\r\\n    background-color: aliceblue;\\r\\n    font-weight: bold;\\r\\n    font-style: italic;\\r\\n    cursor: pointer;\\r\\n    border: 1px solid gainsboro;\\r\\n}\\r\\n\\r\\n\\r\\n.rowHover {\\r\\n    background-color: lavender;\\r\\n    cursor: pointer;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/map/map-table/map-table.component.css\n// module id = ./src/app/map/map-table/map-table.component.css\n// module chunks = main","module.exports = \"<table *ngIf=\\\"selectedCoreData?.length > 0\\\" #maptable>\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th (click)=\\\"sortByAreaName()\\\" style=\\\"text-align:left\\\">Area</th>\\r\\n            <th (click)=\\\"sortByCount()\\\">Count</th>\\r\\n            <th (click)=\\\"sortByValue()\\\">Value</th>\\r\\n            <th>LCI</th>\\r\\n            <th>UCI</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of selectedCoreData\\\" (mouseover)=\\\"rowMouseHovered = true;onRowMouseOver($event)\\\" (mouseout)=\\\"rowMouseHovered = false;onRowMouseLeave($event)\\\" [attr.areaCode]=\\\"item.areaCode\\\" [class.rowHover]=\\\"rowMouseHovered\\\" (click)=\\\"onRowClick($event)\\\">\\r\\n            <td [ngStyle]=\\\"{'border-left-color': item.colour}\\\">{{item.areaName}}</td>\\r\\n            <td>{{item.formattedCount}}</td>\\r\\n            <td [ngClass]=\\\"{'hasNote value-note-symbol': item.isNote}\\\" [attr.data-NoteId]=\\\"item.isNote?item.noteId:null\\\" (mouseenter)=\\\"onMouseEnter($event)\\\" (mousemove)=\\\"onMouseMove($event)\\\" (mouseleave)=\\\"onMouseLeave($event)\\\" innerHTML=\\\"{{item.formattedValue}}\\\">\\r\\n                <div style=\\\"display:inline\\\" *ngIf=\\\"item.isNote\\\">*</div>\\r\\n            </td>\\r\\n            <td>\\r\\n                <div innerHTML=\\\"{{item.loCI}}\\\"></div>\\r\\n            </td>\\r\\n            <td>\\r\\n                <div innerHTML=\\\"{{item.upCI}}\\\"></div>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/map/map-table/map-table.component.html\n// module id = ./src/app/map/map-table/map-table.component.html\n// module chunks = main","import {\r\n  Component, OnInit, Input, Output, SimpleChanges, OnChanges,\r\n  EventEmitter, DoCheck, KeyValueDiffers, ChangeDetectorRef, ChangeDetectionStrategy, AfterViewChecked\r\n  , ViewChild, ElementRef, AfterViewInit\r\n} from '@angular/core';\r\nimport {\r\n  FTModel, FTRoot, Area, GroupRoot, CoreDataSet, CoreDataHelper, Unit, ValueWithUnit, ValueNote, ValueDisplayer,\r\n  IndicatorMetadataHash, IndicatorMetadata, CoreDataSetInfo,\r\n  ValueNoteTooltipProvider, TooltipManager\r\n} from '../../typings/FT.d';\r\nimport { FTHelperService } from '../../shared/service/helper/ftHelper.service';\r\nimport * as _ from 'underscore';\r\ndeclare var $: JQueryStatic;\r\n\r\n@Component({\r\n  selector: 'ft-map-table',\r\n  templateUrl: './map-table.component.html',\r\n  styleUrls: ['./map-table.component.css']\r\n})\r\nexport class MapTableComponent {\r\n  @ViewChild('maptable') el: ElementRef;\r\n  @Input() sortedCoreData: Map<string, CoreDataSet> = null;\r\n  @Input() areaTypeId: number = null;\r\n  @Input() selectedAreaList;\r\n  @Input() areaCodeColour = null;\r\n  @Input() isBoundaryNotSupported;\r\n  @Output() hoverAreaCodeChanged = new EventEmitter();\r\n  @Output() selectedAreaChanged = new EventEmitter();\r\n  tooltip: TooltipManager;\r\n  selectedCoreData: {\r\n    val: string, count: any, countNum: number, upCI: string, loCI: string,\r\n    isNote: boolean, noteId: number, areaName: string, areaCode: string, colour: string\r\n  }[] = [];\r\n  currentAreaList: Array<Area> = [];\r\n\r\n  constructor(private ftHelperService: FTHelperService, private ref: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n\r\n    if (changes['isBoundaryNotSupported']) {\r\n      let localBoundryNotSupported = changes['isBoundaryNotSupported'].currentValue;\r\n      if (localBoundryNotSupported !== undefined) {\r\n        if (localBoundryNotSupported) {\r\n          this.selectedCoreData = [];\r\n        }\r\n      }\r\n    }\r\n    if (changes['areaTypeId'] || changes['selectedAreaList'] || changes['areaCodeColour']) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  onMouseEnter(event: MouseEvent): void {\r\n    let noteId = event.srcElement.attributes.getNamedItem('data-NoteId');\r\n    if (noteId) {\r\n      let tooltipPrvdr: ValueNoteTooltipProvider = this.ftHelperService.newValueNoteTooltipProvider();\r\n      let html = tooltipPrvdr.getHtmlFromNoteId(noteId.value);\r\n      this.tooltip = this.ftHelperService.newTooltipManager();\r\n      this.tooltip.setHtml(html);\r\n      this.tooltip.positionXY(event.pageX + 10, event.pageY + 15);\r\n      this.tooltip.showOnly();\r\n    }\r\n  }\r\n\r\n  onMouseMove(event: MouseEvent): void {\r\n    if (!_.isUndefined(this.tooltip)) {\r\n      this.tooltip.positionXY(event.pageX + 10, event.pageY + 15);\r\n    }\r\n  }\r\n\r\n  onMouseLeave(event: MouseEvent): void {\r\n    if (!_.isUndefined(this.tooltip)) {\r\n      this.tooltip.hide();\r\n    }\r\n  }\r\n\r\n  onRowMouseOver(event: MouseEvent): void {\r\n    let areaCode = this.getAreaCode(event);\r\n    this.hoverAreaCodeChanged.emit({ areaCode: areaCode });\r\n    let row = this.getRow(event.srcElement);\r\n    this.clearRowHovers();\r\n    $(row).addClass('rowHover');\r\n  }\r\n\r\n  onRowMouseLeave(event: MouseEvent): void {\r\n    this.clearRowHovers();\r\n  }\r\n\r\n  onRowClick(event: MouseEvent): void {\r\n    let areaCode = this.getAreaCode(event);\r\n    if (areaCode !== null) {\r\n      // Remove core data\r\n      for (let i = 0; i < this.selectedCoreData.length; i++) {\r\n        if (this.selectedCoreData[i].areaCode === areaCode) {\r\n          this.selectedCoreData.splice(i, 1);\r\n        }\r\n      }\r\n      this.selectedCoreData = this.selectedCoreData.slice();\r\n      this.selectedAreaChanged.emit({ areaCode: areaCode });\r\n      this.ref.detectChanges();\r\n      this.clearRowHovers();\r\n    }\r\n  }\r\n\r\n  getRow(element: Element) {\r\n    while (element.tagName !== 'TR') {\r\n      element = element.parentElement;\r\n    }\r\n    return element;\r\n  }\r\n\r\n  clearRowHovers(): void {\r\n    $('.rowHover').removeClass('rowHover');\r\n  }\r\n\r\n  getAreaCode(event: MouseEvent): string {\r\n    let areaCodeProp = 'areaCode';\r\n    let areaCode = event.srcElement.attributes.getNamedItem(areaCodeProp);\r\n    if (areaCode === null) {\r\n      areaCode = event.srcElement.parentElement.attributes.getNamedItem(areaCodeProp);\r\n      if (areaCode === null) {\r\n        areaCode = event.srcElement.parentElement.parentElement.attributes.getNamedItem(areaCodeProp);\r\n      }\r\n    }\r\n    return areaCode != null ? areaCode.value : null;\r\n  }\r\n\r\n  loadData() {\r\n\r\n    let newData = [];\r\n\r\n    this.selectedAreaList.forEach(areaCode => {\r\n\r\n      let valueDisplayer: ValueDisplayer = this.ftHelperService.newValueDisplayer(null);\r\n      let coreDataSet: CoreDataSet = this.sortedCoreData[areaCode];\r\n      let coreDatasetInfo: CoreDataSetInfo = this.ftHelperService.newCoreDataSetInfo(coreDataSet);\r\n\r\n      // Set up data view model\r\n      let areaName = this.ftHelperService.getAreaName(areaCode);\r\n      let isNote: boolean = coreDatasetInfo.isNote();\r\n      let noteId: number = coreDatasetInfo.getNoteId();\r\n      let formattedCount = coreDatasetInfo.isCount() ? this.ftHelperService.newCommaNumber(coreDataSet.Count).rounded() : '-';\r\n      let formattedValue: string = valueDisplayer.byNumberString(coreDataSet.ValF);\r\n      let loCI = valueDisplayer.byNumberString(coreDataSet.LoCIF);\r\n      let upCI = valueDisplayer.byNumberString(coreDataSet.UpCIF);\r\n      let colour = this.areaCodeColour ? this.areaCodeColour.get(areaCode) : '#B0B0B2';\r\n\r\n      newData.push({\r\n        areaName: areaName, areaCode: areaCode,\r\n        isNote: isNote,\r\n        val: coreDataSet.Val,\r\n        formattedValue: formattedValue,\r\n        count: coreDataSet.Count,\r\n        formattedCount: formattedCount,\r\n        loCI: loCI, upCI: upCI,\r\n        noteId: noteId, colour: colour\r\n      });\r\n    });\r\n\r\n    this.selectedCoreData = newData;\r\n  }\r\n\r\n  sortByCount() {\r\n    this.sort('count');\r\n  }\r\n\r\n  sortByValue() {\r\n    this.sort('val');\r\n  }\r\n\r\n  sortByAreaName() {\r\n    this.sort('areaName');\r\n  }\r\n\r\n  sort(prop) {\r\n    this.selectedCoreData = _.sortBy(this.selectedCoreData, prop);\r\n    this.ref.detectChanges();\r\n  }\r\n\r\n  loadAreaList() {\r\n    this.currentAreaList = [];\r\n    this.currentAreaList = this.ftHelperService.getAreaList();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/map/map-table/map-table.component.ts","module.exports = \"#maps_info {\\r\\n    margin-left: 10px;\\r\\n    margin-bottom: 10px;\\r\\n    width: 490px;\\r\\n    height: 350px;\\r\\n    float: left;\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\n#key-ad-hoc {\\r\\n    position: relative;\\r\\n    height: 50px;\\r\\n}\\r\\n\\r\\n#map_colour_box {\\r\\n    border: 1px solid #CCC;\\r\\n    background-color: #EEE;\\r\\n    padding: 5px 10px;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/map/map.component.css\n// module id = ./src/app/map/map.component.css\n// module chunks = main","module.exports = \"<div id=\\\"map-container\\\" class=\\\"standard-width clearfix\\\" [style.display]=\\\"searchMode ? 'block' : 'none'\\\">\\r\\n    <div [hidden]=\\\"isBoundaryNotSupported\\\">\\r\\n        <div *ngIf=\\\"isInitialised\\\">\\r\\n            <div *ngIf=\\\"!IsPracticeAreaType\\\">\\r\\n                <div id=\\\"key-ad-hoc\\\" class=\\\"key-container\\\" *ngIf=\\\"showAdhocKey\\\" [innerHtml]=\\\"htmlAdhocKey\\\" style=\\\"display: block;overflow: hidden;\\\"></div>\\r\\n                <ft-map-legend [legendDisplay]=\\\"legendDisplay\\\"></ft-map-legend>\\r\\n                <br>\\r\\n                <ft-google-map (mapInit)=\\\"onMapInit($event)\\\" [areaTypeId]=\\\"areaTypeId\\\" [sortedCoreData]=\\\"sortedCoreData\\\" [currentAreaCode]=\\\"currentAreaCode\\\" [areaCodeColour]=\\\"areaCodeColour\\\" [refreshColour]=\\\"refreshColour\\\" (hoverAreaCodeChanged)=\\\"onhoverAreaCodeChangedMap($event)\\\"\\r\\n                    (selectedAreaChanged)=\\\"onSelectedAreaChanged($event)\\\" [isBoundaryNotSupported]=\\\"isBoundaryNotSupported\\\" [selectedAreaList]=\\\"selectedAreaList\\\">\\r\\n                </ft-google-map>\\r\\n                <div id=\\\"maps_info\\\">\\r\\n                    <div id='map_colour_box'>Map colour&nbsp;\\r\\n                        <select id='map_colour' (change)=\\\"onMapColourBoxChange($event.target.value)\\\" [(ngModel)]=\\\"mapColourSelectedValue\\\">\\r\\n                            <option value='benchmark'>Comparison to benchmark</option>\\r\\n                            <option value='quartile'>Quartiles</option>\\r\\n                            <option value='quintile'>Quintiles</option>\\r\\n                            <option value='continuous'>Continuous</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                    <ft-map-table [areaTypeId]=\\\"areaTypeId\\\" [sortedCoreData]=\\\"sortedCoreData\\\" [selectedAreaList]=\\\"selectedAreaList\\\" [areaCodeColour]=\\\"areaCodeColour\\\" [isBoundaryNotSupported]=\\\"isBoundaryNotSupported\\\" (hoverAreaCodeChanged)=\\\"onhoverAreaCodeChangedData($event)\\\"\\r\\n                        (selectedAreaChanged)=\\\"onSelectedAreaChanged($event)\\\"></ft-map-table>\\r\\n                </div>\\r\\n                <ft-map-chart [areaTypeId]=\\\"areaTypeId\\\" [sortedCoreData]=\\\"sortedCoreData\\\" [currentAreaCode]=\\\"currentAreaCode\\\" [isBoundaryNotSupported]=\\\"isBoundaryNotSupported\\\" [areaCodeColour]=\\\"areaCodeColour\\\" (selectedAreaCodeChanged)=\\\"onSelectedAreaCodeChanged($event)\\\"\\r\\n                    (hoverAreaCodeChanged)=\\\"onhoverAreaCodeChangedChart($event)\\\"></ft-map-chart>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"IsPracticeAreaType\\\">\\r\\n                <ft-practice-search [IsMapUpdateRequired]=\\\"updateMap\\\" [searchMode]=\\\"searchMode\\\" #practiceSearch></ft-practice-search>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div [hidden]=\\\"!isBoundaryNotSupported\\\" style=\\\"width:100%; height:400px; padding-top:190px; text-align:center\\\" id=\\\"boundryNotSupported\\\">\\r\\n        Maps are not available for this area type\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/map/map.component.html\n// module id = ./src/app/map/map.component.html\n// module chunks = main","import {\r\n  Component,\r\n  OnInit,\r\n  HostListener,\r\n  ViewChild,\r\n  ChangeDetectorRef,\r\n  ChangeDetectionStrategy,\r\n  AfterViewInit,\r\n  Inject\r\n} from \"@angular/core\";\r\nimport { FTHelperService } from \"../shared/service/helper/ftHelper.service\";\r\nimport { IndicatorService } from \"../shared/service/api/indicator.service\";\r\nimport { CoreDataHelperService } from \"../shared/service/helper/coreDataHelper.service\";\r\nimport { AreaService } from \"../shared/service/api/area.service\";\r\nimport { MapChartComponent } from \"../map/map-chart/map-chart.component\";\r\nimport { MapTableComponent } from \"../map/map-table/map-table.component\";\r\nimport { LegendDisplay } from \"../map/map-legend/map-legend.component\";\r\n\r\nimport {\r\n  Colour,\r\n  AreaCodes,\r\n  AreaTypeIds,\r\n  CategoryTypeIds,\r\n  ProfileIds,\r\n  ComparatorMethodIds,\r\n  PolarityIds\r\n} from \"../shared/shared\";\r\nimport {\r\n  FTModel,\r\n  FTRoot,\r\n  Area,\r\n  GroupRoot,\r\n  CoreDataSet,\r\n  CoreDataHelper,\r\n  Unit,\r\n  IndicatorMetadataHash,\r\n  IndicatorMetadata,\r\n  ComparisonConfig,\r\n  ParentAreaType\r\n} from \"../typings/FT.d\";\r\nimport * as _ from \"underscore\";\r\nimport { PracticeSearchComponent } from \"app/map/practice-search/practice-search.component\";\r\n\r\n@Component({\r\n  selector: \"ft-map\",\r\n  templateUrl: \"./map.component.html\",\r\n  styleUrls: [\"./map.component.css\"]\r\n})\r\nexport class MapComponent {\r\n  isInitialised: boolean = false;\r\n  map: google.maps.Map;\r\n  areaTypeId: number = null;\r\n  coreDataSet: CoreDataSet;\r\n  sortedCoreData: Map<string, CoreDataSet>;\r\n  currentAreaCode: string;\r\n  counter: number;\r\n\r\n  // Legend display flags\r\n  legendDisplay: number = LegendDisplay.NoLegendRequired;\r\n  showAdhocKey: boolean = false;\r\n\r\n  selectedAreaList: Array<string> = new Array<string>();\r\n  areaCodeSignificance: Map<string, number> = new Map();\r\n  nationalArea: Map<string, Area> = new Map();\r\n  comparisonConfig: ComparisonConfig;\r\n  areaCodeColour: Map<string, string> = new Map();\r\n  areaCodeColourValue: Map<string, MapColourData> = new Map();\r\n  refreshColour: number = 0;\r\n  htmlAdhocKey: string = \"\";\r\n  IsPracticeAreaType: boolean = false;\r\n  isBoundaryNotSupported: boolean = false;\r\n  mapColourSelectedValue: string = \"benchmark\";\r\n  updateMap: boolean;\r\n  searchMode: boolean;\r\n  searchModeNoDisplay: boolean;\r\n  profileId: number;\r\n\r\n  constructor(\r\n    private ftHelperService: FTHelperService,\r\n    private indicatorService: IndicatorService,\r\n    private coreDataHelper: CoreDataHelperService,\r\n    private ref: ChangeDetectorRef,\r\n    private areaService: AreaService\r\n  ) {\r\n    this.profileId = this.ftHelperService.getFTModel().profileId;\r\n  }\r\n\r\n  @HostListener(\"window:MapEnvReady-Event\", [\r\n    \"$event\",\r\n    \"$event.detail.searchMode\"\r\n  ])\r\n\r\n  public onOutsideEvent(event, searchMode) {\r\n\r\n    // Determine new area type and whether search mode\r\n    this.searchModeNoDisplay = false;\r\n    this.searchMode = false;\r\n    let newAreaTypeId;\r\n    if (searchMode !== undefined && searchMode) {\r\n      // In search mode\r\n      if (this.profileId === ProfileIds.PracticeProfile) {\r\n        // Practice profiles search\r\n        this.searchMode = true;\r\n      } else {\r\n        //HOW can get here???\r\n        this.searchModeNoDisplay = true;\r\n      }\r\n      newAreaTypeId = AreaTypeIds.Practice;\r\n    } else {\r\n      // Not in search mode\r\n      newAreaTypeId = this.ftHelperService.getFTModel().areaTypeId;\r\n    }\r\n\r\n    this.areaService.getParentAreas(this.profileId).subscribe((result: any) => {\r\n\r\n      // Determine whether current area type can be shown on map\r\n      let parentAreaTypes = <ParentAreaType[]>result;\r\n      if (parentAreaTypes != null) {\r\n        for (let areaType of parentAreaTypes) {\r\n          if (areaType.Id === newAreaTypeId) {\r\n            this.isBoundaryNotSupported = !areaType.CanBeDisplayedOnMap;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.initMap(newAreaTypeId);\r\n    });\r\n  }\r\n\r\n  initMap(newAreaTypeId: number): void {\r\n\r\n    this.isInitialised = true;\r\n    this.updateMap = true;\r\n    this.ref.detectChanges();\r\n\r\n    // Clear area list of area type changes\r\n    if (this.areaTypeId !== newAreaTypeId) {\r\n      this.selectedAreaList = new Array<string>();\r\n    }\r\n\r\n    this.areaTypeId = newAreaTypeId;\r\n    this.IsPracticeAreaType = newAreaTypeId === AreaTypeIds.Practice;\r\n    if (!this.isBoundaryNotSupported) {\r\n      // Have boundaries so can load data\r\n      this.loadData();\r\n    } else {\r\n      // No boundaries for current area type\r\n      this.ftHelperService.showAndHidePageElements();\r\n      this.ftHelperService.unlock();\r\n      this.ref.detectChanges();\r\n    }\r\n\r\n    this.updateMap = false;\r\n  }\r\n\r\n  loadData(): void {\r\n    if (this.IsPracticeAreaType) {\r\n      // Don't need to display any data for practices\r\n      if (!this.searchMode && !this.searchModeNoDisplay) {\r\n        this.showElementsAndUnlock();\r\n      }\r\n    } else {\r\n      // Get data for all other area types\r\n      const currentGrpRoot: GroupRoot = this.ftHelperService.getCurrentGroupRoot();\r\n      const currentComparator: Area = this.ftHelperService.getCurrentComparator();\r\n      const ftModel: FTModel = this.ftHelperService.getFTModel();\r\n      const comparatorId = this.ftHelperService.getComparatorId();\r\n\r\n      this.indicatorService\r\n        .getSingleIndicatorForAllArea(\r\n          currentGrpRoot.Grouping[0].GroupId,\r\n          ftModel.areaTypeId,\r\n          currentComparator.Code,\r\n          ftModel.profileId,\r\n          comparatorId,\r\n          currentGrpRoot.IID,\r\n          currentGrpRoot.Sex.Id,\r\n          currentGrpRoot.Age.Id\r\n        )\r\n        .subscribe(\r\n          data => {\r\n            this.coreDataSet = <CoreDataSet>data;\r\n            this.sortedCoreData = this.coreDataHelper.addOrderandPercentilesToData(\r\n              this.coreDataSet\r\n            );\r\n            this.loadColourData();\r\n            this.onMapColourBoxChange(this.mapColourSelectedValue);\r\n            this.ref.detectChanges();\r\n            this.showElementsAndUnlock();\r\n          },\r\n          error => { }\r\n        );\r\n    }\r\n  }\r\n\r\n  showElementsAndUnlock() {\r\n    this.ftHelperService.showAndHidePageElements();\r\n    this.ftHelperService.showTargetBenchmarkOption(\r\n      this.ftHelperService.getAllGroupRoots()\r\n    );\r\n    this.ftHelperService.unlock();\r\n  }\r\n\r\n  loadColourData(): void {\r\n    let areaOrder = [];\r\n    Object.keys(this.sortedCoreData).forEach(key => {\r\n      let value: CoreDataSet = this.sortedCoreData[key];\r\n      areaOrder.push({ AreaCode: key, Val: value.Val, ValF: value.ValF });\r\n    });\r\n    areaOrder\r\n      .sort(\r\n        (leftside, righside): number => {\r\n          if (leftside.Val < righside.Val) {\r\n            return -1;\r\n          }\r\n          if (leftside.Val > righside.Val) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        }\r\n      )\r\n      .reverse();\r\n    let numAreas = 0;\r\n    $.each(areaOrder, function (i, coreData) {\r\n      if (coreData.ValF !== \"-\") {\r\n        numAreas++;\r\n      }\r\n    });\r\n    let j = 0;\r\n    let sortedCoreData = this.sortedCoreData;\r\n    let localAreaCodeColourValue: Map<string, MapColourData> = new Map();\r\n    $.each(areaOrder, function (i, coreData) {\r\n      var data = sortedCoreData[coreData.AreaCode];\r\n      if (coreData.ValF === \"-\") {\r\n        let colourData: MapColourData = new MapColourData();\r\n        colourData.order = -1;\r\n        colourData.orderFrac = -1;\r\n        localAreaCodeColourValue.set(coreData.AreaCode, colourData);\r\n      } else {\r\n        let colourData: MapColourData = new MapColourData();\r\n        colourData.order = numAreas - j;\r\n        colourData.orderFrac = 1 - j / numAreas;\r\n        let position = numAreas + 1 - j + 1;\r\n        colourData.quartile = Math.ceil(position / (numAreas / 4));\r\n        colourData.quintile = Math.ceil(position / (numAreas / 5));\r\n        j++;\r\n        localAreaCodeColourValue.set(coreData.AreaCode, colourData);\r\n      }\r\n    });\r\n    this.areaCodeColourValue = localAreaCodeColourValue;\r\n  }\r\n\r\n  showHideAdHocKey(): void {\r\n    const currentGrpRoot: GroupRoot = this.ftHelperService.getCurrentGroupRoot();\r\n    const indicatorMetadata: IndicatorMetadata = this.ftHelperService.getMetadata(\r\n      currentGrpRoot.IID\r\n    );\r\n\r\n    this.comparisonConfig = this.ftHelperService.newComparisonConfig(\r\n      currentGrpRoot,\r\n      indicatorMetadata\r\n    );\r\n    if (this.comparisonConfig) {\r\n      if (this.comparisonConfig.useTarget) {\r\n        this.legendDisplay = LegendDisplay.NoLegendRequired;\r\n        let targetLegend = this.ftHelperService.getTargetLegendHtml(\r\n          this.comparisonConfig,\r\n          indicatorMetadata\r\n        );\r\n        this.htmlAdhocKey =\r\n          '<div><table class=\"key-table\" style=\"width: 85%;height:50px;\"><tr><td class=\"key-text\">Benchmarked against goal:</td><td class=\"key-spacer\"></td><td>' +\r\n          targetLegend +\r\n          \"</td></tr></table></div>\";\r\n        this.showAdhocKey = true;\r\n      } else {\r\n        this.showAdhocKey = false;\r\n        this.setBenchmarkLegendDisplay(currentGrpRoot);\r\n      }\r\n    }\r\n  }\r\n\r\n  onMapInit(mapInfo: { map: google.maps.Map }) {\r\n    this.map = mapInfo.map;\r\n  }\r\n  onhoverAreaCodeChangedMap(eventDetail: { areaCode: string }) {\r\n    this.currentAreaCode = eventDetail.areaCode;\r\n    this.ref.detectChanges();\r\n  }\r\n  onSelectedAreaCodeChanged(eventDetail: { areaCode: string }) { }\r\n  onhoverAreaCodeChangedChart(eventDetail: { areaCode: string }) {\r\n    this.currentAreaCode = eventDetail.areaCode;\r\n    this.ref.detectChanges();\r\n  }\r\n  onhoverAreaCodeChangedData(eventDetail: { areaCode: string }) {\r\n    this.currentAreaCode = eventDetail.areaCode;\r\n    this.ref.detectChanges();\r\n  }\r\n\r\n  onBoundaryNotSupported(eventDetail) {\r\n    this.isBoundaryNotSupported = true;\r\n    this.ref.detectChanges();\r\n  }\r\n\r\n  onSelectedAreaChanged(eventDetail: { areaCode: string }) {\r\n    let index = this.selectedAreaList.indexOf(eventDetail.areaCode);\r\n\r\n    if (index > -1) {\r\n      this.selectedAreaList.splice(index, 1);\r\n    } else {\r\n      this.selectedAreaList.push(eventDetail.areaCode);\r\n    }\r\n    this.selectedAreaList = this.selectedAreaList.slice();\r\n\r\n    this.ref.detectChanges();\r\n  }\r\n\r\n  onMapColourBoxChange(selectedColour): void {\r\n    switch (selectedColour) {\r\n      case \"quartile\": {\r\n        this.legendDisplay = LegendDisplay.Quartiles;\r\n        this.showAdhocKey = false;\r\n        this.getQuartileColorData();\r\n        break;\r\n      }\r\n      case \"quintile\": {\r\n        this.legendDisplay = LegendDisplay.Quintiles;\r\n        this.showAdhocKey = false;\r\n        this.getQuintileColorData();\r\n        break;\r\n      }\r\n      case \"continuous\": {\r\n        this.legendDisplay = LegendDisplay.Continuous;\r\n        this.showAdhocKey = false;\r\n        this.getContinuousColorData();\r\n        break;\r\n      }\r\n      case \"benchmark\": {\r\n        let root = this.ftHelperService.getCurrentGroupRoot();\r\n        this.setBenchmarkLegendDisplay(root);\r\n        this.showHideAdHocKey();\r\n        this.getBenchMarkColorData();\r\n        break;\r\n      }\r\n      default: {\r\n        break;\r\n      }\r\n    }\r\n    this.refreshColour++;\r\n    this.ref.detectChanges();\r\n  }\r\n\r\n  setBenchmarkLegendDisplay(root: GroupRoot) {\r\n    if (root.ComparatorMethodId === ComparatorMethodIds.Quintiles) {\r\n      this.legendDisplay = LegendDisplay.Quintiles;\r\n    } else {\r\n      this.setLegendDisplayByPolarity(root.PolarityId);\r\n    }\r\n  }\r\n\r\n  setLegendDisplayByPolarity(polarityId): void {\r\n    switch (polarityId) {\r\n      case PolarityIds.BlueOrangeBlue:\r\n        this.legendDisplay = LegendDisplay.BOB;\r\n        break;\r\n      case PolarityIds.RAGHighIsGood:\r\n        this.legendDisplay = LegendDisplay.RAG;\r\n        break;\r\n      case PolarityIds.RAGLowIsGood:\r\n        this.legendDisplay = LegendDisplay.RAG;\r\n        break;\r\n      default:\r\n        this.legendDisplay = LegendDisplay.NotCompared;\r\n    }\r\n  }\r\n\r\n  getBenchMarkColorData(): void {\r\n    const currentGrpRoot: GroupRoot = this.ftHelperService.getCurrentGroupRoot();\r\n    const indicatorMetadata: IndicatorMetadata = this.ftHelperService.getMetadata(\r\n      currentGrpRoot.IID\r\n    );\r\n    this.comparisonConfig = this.ftHelperService.newComparisonConfig(\r\n      currentGrpRoot,\r\n      indicatorMetadata\r\n    );\r\n\r\n    const globalComparatorId = this.ftHelperService.getComparatorId();\r\n    this.areaCodeSignificance = new Map();\r\n\r\n    Object.keys(this.sortedCoreData).forEach(key => {\r\n      let value: CoreDataSet = this.sortedCoreData[key];\r\n      if (this.comparisonConfig !== undefined) {\r\n        this.areaCodeSignificance[key] =\r\n          value.Sig[this.comparisonConfig.comparatorId];\r\n      } else {\r\n        this.areaCodeSignificance[key] = value.Sig[globalComparatorId];\r\n      }\r\n    });\r\n\r\n    let localAreaCodeColour: Map<string, string> = new Map();\r\n    Object.keys(this.areaCodeSignificance).forEach(key => {\r\n      let value: number = this.areaCodeSignificance[key];\r\n      let colour: string;\r\n      let selectedGroupRoot: GroupRoot;\r\n      // If the use target is clicked change the\r\n      // polarity of currentGroup to target polarity\r\n      if (this.comparisonConfig.useTarget) {\r\n        selectedGroupRoot = Object.create(currentGrpRoot);\r\n        selectedGroupRoot.PolarityId = indicatorMetadata.Target.PolarityId;\r\n      } else {\r\n        selectedGroupRoot = currentGrpRoot;\r\n      }\r\n\r\n      colour = Colour.getSignificanceColorForBenchmark(\r\n        selectedGroupRoot,\r\n        this.comparisonConfig,\r\n        value\r\n      );\r\n\r\n      localAreaCodeColour.set(key, colour);\r\n    });\r\n    this.areaCodeColour = localAreaCodeColour;\r\n  }\r\n  getContinuousColorData(): void {\r\n    let localAreaCodeColour: Map<string, string> = new Map();\r\n    for (let key of Array.from(this.areaCodeColourValue.keys())) {\r\n      let value: MapColourData = this.areaCodeColourValue.get(key);\r\n      let colour = Colour.getColorForContinuous(value.orderFrac);\r\n      localAreaCodeColour.set(key, colour);\r\n    }\r\n    this.areaCodeColour = localAreaCodeColour;\r\n  }\r\n  getQuintileColorData(): void {\r\n    let localAreaCodeColour: Map<string, string> = new Map();\r\n    for (let key of Array.from(this.areaCodeColourValue.keys())) {\r\n      let value: MapColourData = this.areaCodeColourValue.get(key);\r\n      let colour = Colour.getColorForQuintile(value.quintile);\r\n      localAreaCodeColour.set(key, colour);\r\n    }\r\n    this.areaCodeColour = localAreaCodeColour;\r\n  }\r\n  getQuartileColorData(): void {\r\n    let localAreaCodeColour: Map<string, string> = new Map();\r\n    for (let key of Array.from(this.areaCodeColourValue.keys())) {\r\n      let value: MapColourData = this.areaCodeColourValue.get(key);\r\n      let colour = Colour.getColorForQuartile(value.quartile);\r\n      localAreaCodeColour.set(key, colour);\r\n    }\r\n    this.areaCodeColour = localAreaCodeColour;\r\n  }\r\n}\r\n\r\nclass MapColourData {\r\n  quartile: number;\r\n  quintile: number;\r\n  orderFrac: number;\r\n  order: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/map/map.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GoogleMapComponent } from './google-map/google-map.component';\r\nimport { MapComponent } from './map.component';\r\nimport { GoogleMapService } from './googleMap.service';\r\nimport { IndicatorService } from '../shared/service/api/indicator.service';\r\nimport { AreaService } from '../shared/service/api/area.service';\r\nimport { MapChartComponent } from './map-chart/map-chart.component';\r\nimport { ScriptLoaderService } from '../shared/service/helper/script.service';\r\nimport { MapTableComponent } from './map-table/map-table.component';\r\nimport { PracticeSearchComponent } from './practice-search/practice-search.component';\r\nimport { TypeaheadModule } from 'ngx-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CoreDataHelperService } from '../shared/service/helper/coreDataHelper.service';\r\nimport { FTHelperService } from '../shared/service/helper/ftHelper.service';\r\nimport { MapLegendComponent } from './map-legend/map-legend.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TypeaheadModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    GoogleMapComponent,\r\n    MapComponent,\r\n    MapChartComponent,\r\n    MapTableComponent,\r\n    PracticeSearchComponent,\r\n    MapLegendComponent\r\n  ],\r\n  exports: [\r\n    GoogleMapComponent,\r\n    MapComponent\r\n  ],\r\n  providers: [\r\n    GoogleMapService,\r\n    IndicatorService,\r\n    ScriptLoaderService,\r\n    AreaService,\r\n    CoreDataHelperService,\r\n    FTHelperService\r\n  ]\r\n})\r\nexport class MapModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/map/map.module.ts","module.exports = \".glyphicon {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.googleMapNg {\\r\\n    position: relative;\\r\\n    background-color: #fff;\\r\\n    border: 1px solid #CCC;\\r\\n    width: 550px;\\r\\n    height: 600px;\\r\\n    margin-bottom: 10px;\\r\\n    margin-top: 10px;\\r\\n    clear: both;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n#default_search_header {\\r\\n    width: 400px;\\r\\n    padding-top: 10px;\\r\\n    position: absolute;\\r\\n}\\r\\n\\r\\n#practice-list-info {\\r\\n    min-height: 30px;\\r\\n}\\r\\n\\r\\n#practice-list-info input {\\r\\n    max-width: 450px;\\r\\n}\\r\\n\\r\\n#practice-list-info h3 {\\r\\n    font-size: 1.4em;\\r\\n    margin-top: 10px;\\r\\n}\\r\\n\\r\\n.practice-header {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.nearby-practices-map {\\r\\n    float: right;\\r\\n    width: 550px;\\r\\n    height: 0px;\\r\\n    margin-top: -10px;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.nearby-practices-map #google-map {\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n#table-container {\\r\\n    height: 600px;\\r\\n    overflow-y: scroll;\\r\\n}\\r\\n\\r\\n.nearby-practices-table {\\r\\n    float: left;\\r\\n    width: 45%;\\r\\n}\\r\\n\\r\\n.nearby-practices-table table {\\r\\n    width: 100%;\\r\\n    border-collapse: collapse;\\r\\n}\\r\\n\\r\\n.nearby-practices-table .header {\\r\\n    position: relative;\\r\\n    background-color: #02ae94;\\r\\n    padding: 10px;\\r\\n    color: #fff;\\r\\n}\\r\\n\\r\\n.nearby-practices-table td,\\r\\n.nearby-practices-table th {\\r\\n    padding: 0;\\r\\n    font-weight: normal;\\r\\n    text-align: left;\\r\\n    vertical-align: top;\\r\\n    font-size: 16px;\\r\\n}\\r\\n\\r\\n#show-all-practices {\\r\\n    padding: 23px 0 18px 0;\\r\\n}\\r\\n\\r\\n#show-all-practices a,\\r\\na:visited,\\r\\na:active,\\r\\na:hover {\\r\\n    color: #1d1dae;\\r\\n}\\r\\n\\r\\n#show-all-practices a,\\r\\na:visited,\\r\\na:active,\\r\\na:hover {\\r\\n    color: #2e3191;\\r\\n    text-decoration: underline;\\r\\n    font-size: 16px;\\r\\n}\\r\\n\\r\\n#show-all-practices a {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.highlight-address {\\r\\n    background-color: #e6e6e6\\r\\n}\\r\\n\\r\\n.highlight-header {\\r\\n    background-color: #525252;\\r\\n    position: relative;\\r\\n    padding: 10px;\\r\\n    color: #fff;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/map/practice-search/practice-search.component.css\n// module id = ./src/app/map/practice-search/practice-search.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" style=\\\"margin-left:-15px;\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div *ngIf=\\\"searchMode\\\" class=\\\"col-md-8\\\">\\r\\n            <h2>Find your practice</h2>\\r\\n        </div>\\r\\n        <div id=\\\"practice-list-info\\\" class=\\\"col-md-6\\\">\\r\\n            <h3>Search for a practice by postcode or place name:</h3>\\r\\n            <input [(ngModel)]=\\\"placeNameText\\\" [typeahead]=\\\"dataSource\\\" (typeaheadLoading)=\\\"changeTypeaheadLoading($event)\\\" (typeaheadNoResults)=\\\"changeTypeaheadNoResults($event)\\\" (typeaheadOnSelect)=\\\"typeaheadOnSelect($event)\\\" typeaheadOptionsLimit=\\\"7\\\" typeaheadOptionField=\\\"displayName\\\"\\r\\n                placeholder=\\\"\\\" [typeaheadWaitMs]=\\\"200\\\" [typeaheadMinLength]=\\\"3\\\" class=\\\"form-control\\\" id=\\\"gp-practice-search-text\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div id=\\\"show-all-practices\\\" [hidden]=\\\"!displayCCGPracticeLink\\\">\\r\\n                <a id=\\\"all_ccg_practices\\\" (click)=\\\"onShowAllPracticeinCCGClick()\\\" title=\\\"Display all practices within CCG on the map\\\">\\r\\n                            Show all practices in CCG</a>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"typeaheadNoResults===true\\\" class=\\\"\\\">\\r\\n                No Results Found\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div id=\\\"practice-list-info\\\" class=\\\"row col-md-12\\\">\\r\\n        <h3 *ngIf=\\\"nearByPractices?.length > 0 \\\" id=\\\"practice-count-info\\\">{{practiceCountText}}</h3>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"nearby-practices-table\\\" *ngIf=\\\"nearByPractices?.length >0\\\">\\r\\n    <div class=\\\"table-data\\\" id=\\\"mortality-rankings\\\">\\r\\n        <div id=\\\"table-container\\\" #scrollPracticeTable>\\r\\n            <table id=\\\"search-table\\\">\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of nearByPractices\\\" id=\\\"practice-header\\\">\\r\\n                        <table>\\r\\n                            <tr [attr.id]=\\\"item.areaCode\\\">\\r\\n                                <td colspan=\\\"2\\\">\\r\\n                                    <div class=\\\"practice-header clearfix\\\" [ngClass]=\\\"{'highlight-header': item.selected,'header': item.selected==false}\\\" (click)=\\\"onSelectPracticeClick(item.areaCode)\\\">\\r\\n                                        {{item.areaCode}} - {{item.areaName}}\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr [ngClass]=\\\"{'highlight-address': item.selected}\\\">\\r\\n                                <td style=\\\"width:70%\\\">\\r\\n                                    <div>{{item.addressLine1}}</div>\\r\\n                                    <div>{{item.addressLine2}}</div>\\r\\n                                    <div>{{item.postcode}}</div>\\r\\n                                </td>\\r\\n                                <td style=\\\"width:30%\\\">\\r\\n                                    <div *ngIf=\\\"!showCcgPractices\\\" class=\\\"center-text\\\">{{item.distanceValF}} miles</div>\\r\\n                                    <div>\\r\\n                                        <a (click)=\\\"onSelectPracticeClick(item.areaCode)\\\" style=\\\"color: #2e3191;text-decoration: underline;\\\" id=\\\"select-practice\\\">\\r\\n                                         Select\\r\\n                                       </a>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div [style.height]=\\\"height + 'px'\\\" class=\\\"nearby-practices-map\\\">\\r\\n    <div id=\\\"google-map\\\" #googleMapNew class=\\\"googleMapNg\\\">\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/map/practice-search/practice-search.component.html\n// module id = ./src/app/map/practice-search/practice-search.component.html\n// module chunks = main","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, AfterViewChecked, ChangeDetectorRef, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FTHelperService } from '../../shared/service/helper/ftHelper.service';\r\nimport { AreaService } from '../../shared/service/api/area.service';\r\nimport { AreaCodes, AreaTypeIds, CategoryTypeIds } from '../../shared/shared';\r\nimport { AreaTextSearchResult, NearByAreas, LatitudeLongitude, AreaAddress } from '../../typings/FT.d';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\r\nimport { autoCompleteResult, Practice } from './practice-search';\r\nimport * as _ from 'underscore';\r\n@Component({\r\n    selector: 'ft-practice-search',\r\n    templateUrl: './practice-search.component.html',\r\n    styleUrls: ['./practice-search.component.css']\r\n})\r\nexport class PracticeSearchComponent implements OnInit, OnChanges {\r\n\r\n    @ViewChild('scrollPracticeTable') practiceTable: ElementRef;\r\n    @ViewChild('googleMapNew') mapEl: ElementRef;;\r\n    @Input() IsMapUpdateRequired: boolean = false;\r\n    @Input() searchMode: boolean = false;\r\n\r\n    // Instance equivalent of searchMode which is more reliable\r\n    localSearchMode: boolean;\r\n\r\n    public placeNameText: string;\r\n    public typeaheadLoading: boolean;\r\n    public typeaheadNoResults: boolean;\r\n    public dataSource: Observable<any>;\r\n    public height: number = 0;\r\n\r\n    practiceMap: google.maps.Map;\r\n    isVisible: boolean = false;\r\n    searchResults: AreaTextSearchResult[] = [];\r\n    selectedArea: AreaTextSearchResult;\r\n    nearByPractices: Practice[] = [];\r\n    practiceCountText: string;\r\n    showCcgPractices: boolean = false;\r\n    displayCCGPracticeLink: boolean;\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (this.IsMapUpdateRequired && this.showCcgPractices) {\r\n            this.onShowAllPracticeinCCGClick();\r\n        }\r\n        if (changes['searchMode']) {\r\n            let displyCCGLink = changes['searchMode'].currentValue;\r\n            if (displyCCGLink !== undefined) {\r\n                if (displyCCGLink) {\r\n                    this.localSearchMode = true;\r\n                    this.displayCCGPracticeLink = false;\r\n                }\r\n            } else {\r\n                this.localSearchMode = false;\r\n                this.displayCCGPracticeLink = true;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    constructor(private ftHelperService: FTHelperService,\r\n        private areaService: AreaService,\r\n        private ref: ChangeDetectorRef) {\r\n\r\n        this.localSearchMode = false;\r\n        this.displayCCGPracticeLink = true;\r\n        this.dataSource = Observable.create((observer: any) => {\r\n            this.areaService.getAreaSearchByText(this.placeNameText, AreaTypeIds.CcgPreApr2017, true, true)\r\n                .subscribe((result: any) => {\r\n                    this.searchResults = <AreaTextSearchResult[]>result;\r\n                    let newResult = _.map(this.searchResults, function (result) {\r\n                        return new autoCompleteResult(result.PolygonAreaCode, result.PlaceName,\r\n                            result.PolygonAreaName);\r\n                    });\r\n                    observer.next(newResult);\r\n                });\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.isVisible = this.ftHelperService.getFTModel().areaTypeId === AreaTypeIds.Practice;\r\n        if (!this.practiceMap) {\r\n            this.loadMap();\r\n        }\r\n    }\r\n\r\n    loadMap() {\r\n        const mapOptions: google.maps.MapOptions = {\r\n            zoom: 6,\r\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n            panControl: false,\r\n            zoomControl: true,\r\n            zoomControlOptions: { position: google.maps.ControlPosition.TOP_LEFT },\r\n            scaleControl: false,\r\n            streetViewControl: false,\r\n            mapTypeControl: false,\r\n            fullscreenControl: false,\r\n        };\r\n        let mapContainer = null;\r\n        if (this.mapEl && this.mapEl.nativeElement) {\r\n            mapContainer = this.mapEl.nativeElement;\r\n        }\r\n        if (mapContainer != null) {\r\n            this.practiceMap = new google.maps.Map(mapContainer, mapOptions);\r\n        }\r\n\r\n        if (this.practiceMap) {\r\n            const bounds = new google.maps.LatLngBounds();\r\n            const position = new google.maps.LatLng(53.415649, -2.209015);\r\n            bounds.extend(position);\r\n            this.practiceMap.setCenter(bounds.getCenter());\r\n            let thisCom = this;\r\n            //This is needed as on initial load map was not visible\r\n            google.maps.event.addListener(this.practiceMap, 'idle', function () {\r\n                let bound = thisCom.practiceMap.getCenter();\r\n                google.maps.event.trigger(thisCom.practiceMap, 'resize');\r\n                thisCom.practiceMap.setCenter(bound);\r\n            });\r\n        }\r\n    }\r\n    public changeTypeaheadLoading(e: boolean): void {\r\n        this.typeaheadLoading = e;\r\n    }\r\n\r\n    public changeTypeaheadNoResults(e: boolean): void {\r\n        this.typeaheadNoResults = e;\r\n    }\r\n\r\n    public typeaheadOnSelect(e: TypeaheadMatch): void {\r\n        let polygonAreaCode = (<autoCompleteResult>e.item).polygonAreaCode;\r\n        this.selectedArea = _.find(this.searchResults, function (obj) { return obj.PolygonAreaCode === polygonAreaCode; });\r\n        this.areaService.getAreaSearchByProximity(this.selectedArea.Easting, this.selectedArea.Northing, AreaTypeIds.Practice)\r\n            .subscribe((result: any) => {\r\n                let nearByAreas = <NearByAreas[]>result;\r\n                this.nearByPractices = _.map(nearByAreas, function (area) {\r\n                    return new Practice(area.AreaName, area.AreaCode,\r\n                        area.AddressLine1, area.AddressLine2, area.Postcode,\r\n                        area.DistanceValF, area.LatLng);\r\n                });\r\n                this.displayNumberOfPracticesFound(this.nearByPractices.length, false);\r\n                this.displayMarkersOnMap();\r\n                this.showCcgPractices = false;\r\n            });\r\n    }\r\n    displayNumberOfPracticesFound(practiceCount, IsCCG: boolean): void {\r\n        let placeName: string = '';\r\n        if (IsCCG) {\r\n            placeName = ' in ' + this.ftHelperService.getParentArea().Name;\r\n        }\r\n        else {\r\n            placeName = ' within 5 miles of ' + this.selectedArea.PlaceName;\r\n        }\r\n        let html: string;\r\n        if (practiceCount === 0) {\r\n            html = 'are no practices';\r\n        } else if (practiceCount === 1) {\r\n            html = 'is 1 practice';\r\n        } else {\r\n            html = 'are ' + practiceCount + ' practices';\r\n        }\r\n        this.practiceCountText = 'There ' + html + placeName;\r\n    }\r\n\r\n    onShowAllPracticeinCCGClick(): void {\r\n        this.areaService.getAreaAddressesByParentAreaCode(this.ftHelperService.getFTModel().parentCode,\r\n            this.ftHelperService.getFTModel().areaTypeId)\r\n            .subscribe((result: any) => {\r\n                let areaAddresses = <AreaAddress[]>result;\r\n                this.nearByPractices = _.map(areaAddresses, function (area) {\r\n                    return new Practice(area.Name, area.Code,\r\n                        area.A1, area.A2, area.Postcode, '', area.Pos);\r\n                });\r\n                this.displayNumberOfPracticesFound(this.nearByPractices.length, true);\r\n                this.displayMarkersOnMap();\r\n                this.showCcgPractices = true;\r\n                this.placeNameText = '';\r\n            });\r\n    }\r\n\r\n    displayMarkersOnMap(): void {\r\n        let bounds = new google.maps.LatLngBounds();\r\n        const infoWindow = new google.maps.InfoWindow({});\r\n        let linkList = [];\r\n        for (let i = 0; i < this.nearByPractices.length; i++) {\r\n            let position = new google.maps.LatLng(this.nearByPractices[i].lat, this.nearByPractices[i].lng);\r\n            bounds.extend(position);\r\n\r\n            // Create marker\r\n            let marker = new google.maps.Marker({\r\n                position: position,\r\n                map: this.practiceMap\r\n            });\r\n            marker.set('marker_id', this.nearByPractices[i].areaCode);\r\n\r\n            // Create pop up text\r\n            let boxText = document.createElement(\"a\");\r\n            boxText.id = i.toString();\r\n            boxText.className = \"select-area-link\";\r\n            boxText.style.cssText = \"color: #2e3191; text-decoration: underline; font-size:16px;\";\r\n            boxText.innerHTML = this.nearByPractices[i].areaName;\r\n            linkList.push(boxText);\r\n\r\n            // Map marker click\r\n            google.maps.event.addListener(marker, 'click', (event) => {\r\n                let areaCode = marker.get('marker_id');\r\n                infoWindow.setContent(linkList[i]);\r\n                infoWindow.open(this.practiceMap, marker);\r\n\r\n                let $practiceHeader = $('#' + areaCode);\r\n\r\n                // Deselect last selected one if any\r\n                let lastSelectedPracticeIndex = _.findIndex(this.nearByPractices, x => x.selected === true);\r\n                if (lastSelectedPracticeIndex !== -1) {\r\n                    const lastSelectedPractice = this.nearByPractices[lastSelectedPracticeIndex];\r\n                    lastSelectedPractice.selected = false;\r\n                    if (lastSelectedPracticeIndex !== -1) {\r\n                        this.nearByPractices.splice(lastSelectedPracticeIndex, 1, lastSelectedPractice);\r\n                    }\r\n                    this.nearByPractices = this.nearByPractices.slice();\r\n                }\r\n\r\n                // Select-Highlight the current practice on table\r\n                const currentPracticeIndex = _.findIndex(this.nearByPractices, x => x.areaCode === areaCode);\r\n                const currentPractice = this.nearByPractices[currentPracticeIndex];\r\n                currentPractice.selected = true;\r\n                if (currentPracticeIndex !== -1) {\r\n                    this.nearByPractices.splice(currentPracticeIndex, 1, currentPractice);\r\n                }\r\n                this.nearByPractices = this.nearByPractices.slice();\r\n\r\n                // Scroll table so selected practice is at the top\r\n                const scrollTop = $practiceHeader.offset().top -\r\n                    this.practiceTable.nativeElement.offsetTop +\r\n                    this.practiceTable.nativeElement.scrollTop;\r\n                this.practiceTable.nativeElement.scrollTop = scrollTop;\r\n\r\n                this.ref.detectChanges();\r\n            });\r\n\r\n            // Practice pop up link click\r\n            google.maps.event.addDomListener(linkList[i], 'click', (event) => {\r\n                let areaCode = marker.get('marker_id');\r\n                this.onSelectPracticeClick(areaCode);\r\n            });\r\n        }\r\n        this.fitMapToPracticeResults(bounds);\r\n\r\n        this.height = 610;\r\n    }\r\n\r\n    fitMapToPracticeResults(bounds: google.maps.LatLngBounds) {\r\n        this.practiceMap.fitBounds(bounds);\r\n        let googleMapsEvent = google.maps.event;\r\n        // Add bounds changed listener\r\n        let thisCom = this;\r\n        let zoomChangeBoundsListener =\r\n            googleMapsEvent.addListenerOnce(this.practiceMap, 'bounds_changed', function () {\r\n                const maximumZoom = 13;\r\n                // Zoom out if to close\r\n                if (thisCom.practiceMap.getZoom() > maximumZoom) {\r\n                    thisCom.practiceMap.setZoom(maximumZoom);\r\n                }\r\n                googleMapsEvent.removeListener(zoomChangeBoundsListener);\r\n            });\r\n    }\r\n\r\n    onSelectPracticeClick(areaCode: string): void {\r\n        this.ftHelperService.lock();\r\n        if (this.localSearchMode) {\r\n            window.location.href = '/profile/general-practice/data#page/12/ati/' +\r\n                AreaTypeIds.Practice + '/are/' + areaCode;\r\n        } else {\r\n            this.ftHelperService.setAreaCode(areaCode);\r\n            this.ftHelperService.redirectToPopulationPage();\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/map/practice-search/practice-search.component.ts","import { LatitudeLongitude } from '../../typings/FT.d';\r\n\r\nexport class autoCompleteResult {\r\n    polygonAreaCode: string;\r\n    displayName: string;\r\n    constructor(polygonAreaCode: string, name: string, parentAreaName: string) {\r\n        this.polygonAreaCode = polygonAreaCode;\r\n        this.displayName = name + \", \" + parentAreaName.replace('NHS ', '')\r\n    }\r\n};\r\n\r\nexport class Practice {\r\n    lat: number;\r\n    lng: number;\r\n    selected: boolean;\r\n    constructor(public areaName: string, public areaCode: string, public addressLine1: string,\r\n        public addressLine2: string, public postcode: string, public distanceValF: string,\r\n        pos: LatitudeLongitude) {\r\n        this.lat = pos.Lat;\r\n        this.lng = pos.Lng;\r\n        this.selected = false;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/map/practice-search/practice-search.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/metadata/metadata-table/metadata-table.component.css\n// module id = ./src/app/metadata/metadata-table/metadata-table.component.css\n// module chunks = main","module.exports = \"<div #table class=\\\"definition-table\\\">\\r\\n    <h2>Indicator Definitions and Supporting Information</h2>\\r\\n    <tbody>\\r\\n        <table class=\\\"bordered-table\\\" cellspacing=\\\"0\\\">\\r\\n            <tr *ngFor=\\\"let row of rows\\\">\\r\\n                <td class=\\\"header\\\" [innerHTML]=\\\"row.header\\\"></td>\\r\\n                <td [innerHTML]=\\\"row.text\\\"></td>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </tbody>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/metadata/metadata-table/metadata-table.component.html\n// module id = ./src/app/metadata/metadata-table/metadata-table.component.html\n// module chunks = main","import {\r\n  Component, HostListener, Input, ViewChild, ElementRef, Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport {\r\n  FTModel, FTRoot, GroupRoot, IndicatorMetadata, TooltipManager, IndicatorMetadataTextProperty,\r\n  KeyValuePair, ComparatorMethod\r\n} from '../../typings/FT.d';\r\nimport { FTHelperService } from '../../shared/service/helper/ftHelper.service';\r\nimport { TooltipHelper } from '../../shared/shared';\r\nimport { IndicatorService } from '../../shared/service/api/indicator.service';\r\nimport * as _ from 'underscore';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'ft-metadata-table',\r\n  templateUrl: './metadata-table.component.html',\r\n  styleUrls: ['./metadata-table.component.css']\r\n})\r\nexport class MetadataTableComponent {\r\n\r\n  @Output() isReady = new EventEmitter<boolean>();\r\n  @ViewChild('table') table: ElementRef;\r\n\r\n  public rows: MetadataRow[];\r\n  private tempRows: MetadataRow[];\r\n  private showDataQuality: boolean;\r\n  private readonly NotApplicable: string = 'n/a';\r\n  private metadataProperties: IndicatorMetadataTextProperty[]\r\n\r\n  constructor(private ftHelperService: FTHelperService, private indicatorService: IndicatorService) {\r\n    this.showDataQuality = ftHelperService.getFTConfig().showDataQuality;\r\n  }\r\n\r\n  public showInLightbox() {\r\n    this.ftHelperService.showIndicatorMetadataInLightbox(this.table.nativeElement);\r\n  }\r\n\r\n  public displayMetadataForGroupRoot(root: GroupRoot): void {\r\n\r\n    this.isReady.emit(false);\r\n\r\n    // Get data by AJAX\r\n    let metadataPropertiesObservable = this.indicatorService.getIndicatorMetadataProperties();\r\n    let metadataObservable = this.indicatorService.getIndicatorMetadata(root.Grouping[0].GroupId);\r\n\r\n    Observable.forkJoin([metadataPropertiesObservable, metadataObservable]).subscribe(results => {\r\n\r\n      this.metadataProperties = results[0];\r\n      let metadataHash: Map<number, IndicatorMetadata> = results[1];\r\n\r\n      var indicatorMetadata = metadataHash[root.IID];\r\n      this.displayMetadata(indicatorMetadata, root);\r\n\r\n      this.ftHelperService.showAndHidePageElements();\r\n      this.ftHelperService.unlock();\r\n      this.isReady.emit(true);\r\n    });\r\n  }\r\n\r\n  public displayMetadataForIndicator(indicatorId: number, restrictToProfileIds: number[]): void {\r\n\r\n    this.isReady.emit(false);\r\n\r\n    // Get data by AJAX\r\n    let metadataPropertiesObservable = this.indicatorService.getIndicatorMetadataProperties();\r\n    let metadataObservable = this.indicatorService.getIndicatorMetadataByIndicatorId(indicatorId, restrictToProfileIds);\r\n\r\n    Observable.forkJoin([metadataPropertiesObservable, metadataObservable]).subscribe(results => {\r\n\r\n      this.metadataProperties = results[0];\r\n      let metadataHash: Map<number, IndicatorMetadata> = results[1];\r\n\r\n      var indicatorMetadata = metadataHash[indicatorId];\r\n      this.displayMetadata(indicatorMetadata);\r\n      this.isReady.emit(true);\r\n    });\r\n  }\r\n\r\n  private displayMetadata(indicatorMetadata: IndicatorMetadata, root?: GroupRoot): void {\r\n\r\n    this.tempRows = new Array<MetadataRow>();\r\n\r\n    // Assign key variables\r\n    let descriptive = indicatorMetadata.Descriptive;\r\n\r\n    // Define IDs\r\n    let propertyIndex, benchmarkingMethodId, benchmarkingSigLevel;\r\n    if (root) {\r\n      benchmarkingMethodId = root.ComparatorMethodId;\r\n      benchmarkingSigLevel = root.Grouping[0].SigLevel;\r\n    } else {\r\n      benchmarkingMethodId = benchmarkingSigLevel = null;\r\n    }\r\n\r\n    this.addMetadataRow('Indicator ID', indicatorMetadata.IID);\r\n\r\n   if(root){\r\n      if (root.DateChanges && root.DateChanges.DateOfLastChange && root.DateChanges.DateOfLastChange !== '') {\r\n        let dateOfLastChange = new DatePipe('en-GB').transform(root.DateChanges.DateOfLastChange, 'dd MMM yyyy')\r\n        if (root.DateChanges.HasDataChangedRecently) {\r\n          dateOfLastChange = dateOfLastChange + ' <span class=\"badge badge-success\">New data</span>';\r\n        }\r\n        this.addMetadataRow('Date updated', dateOfLastChange);\r\n      }\r\n   }\r\n\r\n    // Initial indicator text properties\r\n    for (propertyIndex = 0; propertyIndex < this.metadataProperties.length; propertyIndex++) {\r\n      var property = this.metadataProperties[propertyIndex];\r\n      if (property.Order > 59) {\r\n        break;\r\n      }\r\n\r\n      // Do not dislay name as full name is displayed\r\n      if ((property.ColumnName !== 'Name')) {\r\n        this.addMetadataRowByProperty(descriptive, property);\r\n      }\r\n    }\r\n\r\n    // Value type\r\n    this.addMetadataRow('Value type', indicatorMetadata.ValueType.Name);\r\n\r\n    // Text - Methodology\r\n    this.addMetadataRowByProperty(descriptive, this.metadataProperties[propertyIndex++]);\r\n\r\n    // Unit\r\n    var unit = indicatorMetadata.Unit.Label;\r\n    if (unit) {\r\n      this.addMetadataRow('Unit', indicatorMetadata.Unit.Label);\r\n    }\r\n\r\n    // Text - Standard population\r\n    this.addMetadataRowByProperty(descriptive, this.metadataProperties[propertyIndex++]);\r\n\r\n    if (root) {\r\n      // Age\r\n      this.addMetadataRow('Age', root.Age.Name);\r\n\r\n      // Sex\r\n      this.addMetadataRow('Sex', root.Sex.Name);\r\n    }\r\n\r\n    // Year type\r\n    this.addMetadataRow('Year type', indicatorMetadata.YearType.Name);\r\n\r\n    // Frequency\r\n    this.addMetadataRowByProperty(descriptive, this.metadataProperties[propertyIndex++]);\r\n\r\n    // Benchmarking method\r\n    if (benchmarkingMethodId) {\r\n      let row = new MetadataRow('Benchmarking method', '');\r\n      this.tempRows.push(row);\r\n      this.assignBenchmarkingMethod(row, benchmarkingMethodId);\r\n    }\r\n\r\n    // Benchmarking significance level\r\n    if (benchmarkingSigLevel) {\r\n      let text = (benchmarkingSigLevel <= 0) ?\r\n        this.NotApplicable :\r\n        benchmarkingSigLevel + '%';\r\n      this.addMetadataRow('Benchmarking significance level', text);\r\n    }\r\n\r\n    // Confidence interval method\r\n    var ciMethod = indicatorMetadata.ConfidenceIntervalMethod;\r\n    if (ciMethod) {\r\n\r\n      this.addMetadataRow('Confidence interval method', ciMethod.Name);\r\n\r\n      // Display CI method description\r\n      var cimDescription = ciMethod.Description;\r\n      if (cimDescription) {\r\n        this.addMetadataRow('Confidence interval methodology', cimDescription);\r\n      }\r\n    }\r\n\r\n    // Confidence level\r\n    var confidenceLevel = indicatorMetadata.ConfidenceLevel;\r\n    if (confidenceLevel > -1) {\r\n      this.addMetadataRow('Confidence level', confidenceLevel + '%');\r\n    }\r\n\r\n    // Display all remaining properties\r\n    while (propertyIndex < this.metadataProperties.length) {\r\n      this.addMetadataRowByProperty(descriptive, this.metadataProperties[propertyIndex]);\r\n      propertyIndex++;\r\n    }\r\n\r\n    // Trigger view refresh\r\n    this.rows = this.tempRows;\r\n  }\r\n\r\n  private addMetadataRow(header: string, text: string | number): void {\r\n    this.tempRows.push(new MetadataRow(header, text));\r\n  }\r\n\r\n  private addMetadataRowByProperty(textMetadata: KeyValuePair<string, string>[], property: IndicatorMetadataTextProperty): void {\r\n\r\n    var columnName = property.ColumnName;\r\n\r\n    if (textMetadata !== null && textMetadata.hasOwnProperty(columnName)) {\r\n      var text = textMetadata[columnName];\r\n\r\n      if (!_.isUndefined(text) && text !== '') {\r\n\r\n        if ((columnName === 'DataQuality') && this.showDataQuality) {\r\n          // Add data quality flags instead of number\r\n          var dataQualityCount = parseInt(text);\r\n          var displayText = this.ftHelperService.getIndicatorDataQualityHtml(text) + ' ' +\r\n            this.ftHelperService.getIndicatorDataQualityTooltipText(dataQualityCount);\r\n        } else {\r\n          displayText = text;\r\n        }\r\n\r\n        let row = new MetadataRow(property.DisplayName, displayText);\r\n        this.tempRows.push(row);\r\n      }\r\n    }\r\n  }\r\n\r\n  private assignBenchmarkingMethod(row: MetadataRow, benchmarkingMethodId: number) {\r\n    let metadataObservable = this.indicatorService.getBenchmarkingMethod(benchmarkingMethodId).subscribe(\r\n      data => {\r\n        let method = <ComparatorMethod>data;\r\n        row.text = method.Name;\r\n      },\r\n      error => { });\r\n  }\r\n}\r\n\r\nclass MetadataRow {\r\n  constructor(public header: string, public text: string | number) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/metadata/metadata-table/metadata-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/metadata/metadata.component.css\n// module id = ./src/app/metadata/metadata.component.css\n// module chunks = main","module.exports = \"<div id=\\\"metadata-container\\\" class=\\\"container\\\" style=\\\"display:none;\\\">\\r\\n    <ft-metadata-table #table></ft-metadata-table>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/metadata/metadata.component.html\n// module id = ./src/app/metadata/metadata.component.html\n// module chunks = main","import { Component, HostListener, ViewChild } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/Rx';\r\nimport { FTHelperService } from '../shared/service/helper/ftHelper.service';\r\nimport {\r\n  GroupRoot\r\n} from '../typings/FT.d';\r\n\r\n@Component({\r\n  selector: 'ft-metadata',\r\n  templateUrl: './metadata.component.html',\r\n  styleUrls: ['./metadata.component.css']\r\n})\r\nexport class MetadataComponent {\r\n  @ViewChild('table') table;\r\n\r\n  constructor(private ftHelperService: FTHelperService, ) { }\r\n\r\n  @HostListener('window:MetadataSelected', ['$event'])\r\n  public onOutsideEvent(event): void {\r\n    let root: GroupRoot = this.ftHelperService.getCurrentGroupRoot();\r\n    var grouping = root.Grouping[0];\r\n    this.table.displayMetadataForGroupRoot(root);\r\n  }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/metadata/metadata.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {MetadataComponent} from './metadata.component';\r\nimport {MetadataTableComponent} from './metadata-table/metadata-table.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    MetadataComponent,\r\n    MetadataTableComponent\r\n  ],\r\n  exports: [\r\n    MetadataComponent,\r\n    MetadataTableComponent\r\n  ],\r\n})\r\nexport class MetadataModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/metadata/metadata.module.ts","module.exports = \"#population-chart {\\r\\n    float: left;\\r\\n    clear: both;\\r\\n    width: 600px;\\r\\n    height: 600px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/population/population-chart/population-chart.component.css\n// module id = ./src/app/population/population-chart/population-chart.component.css\n// module chunks = main","module.exports = \"<div style=\\\"float: left;width: 600px;\\\">\\r\\n    <div class=\\\"export-chart-box\\\">\\r\\n        <button class=\\\"export-link\\\" (click)=\\\"exportChart()\\\">Export chart as image</button>\\r\\n    </div>\\r\\n</div>\\r\\n<div id=\\\"population-chart\\\" #chart>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/population/population-chart/population-chart.component.html\n// module id = ./src/app/population/population-chart/population-chart.component.html\n// module chunks = main","import { Component, Input, ViewChild, SimpleChanges, ElementRef } from '@angular/core';\r\nimport { Populations, PopulationMaxFinder } from '../population';\r\nimport { FTHelperService } from '../../shared/service/helper/ftHelper.service';\r\nimport { AreaCodes, SexIds, HC, Colour } from '../../shared/shared';\r\nimport {\r\n  FTModel, Population\r\n} from '../../typings/FT.d';\r\nimport * as _ from 'underscore';\r\n\r\nimport * as Highcharts from 'highcharts';\r\nrequire('highcharts/modules/exporting')(Highcharts);\r\nrequire('highcharts/highcharts-more')(Highcharts);\r\n\r\n@Component({\r\n  selector: 'ft-population-chart',\r\n  templateUrl: './population-chart.component.html',\r\n  styleUrls: ['./population-chart.component.css']\r\n})\r\nexport class PopulationChartComponent {\r\n\r\n  @Input() populations: Populations;\r\n  private chartTitle: string;\r\n  private chartColours = {\r\n    label: '#333',\r\n    bar: '#76B3B3',\r\n    pink: '#FF66FC'\r\n  }\r\n  private chartTextStyle;\r\n\r\n  @ViewChild('chart') public chartEl: ElementRef;\r\n  chart: Highcharts.ChartObject;\r\n\r\n  constructor(private ftHelperService: FTHelperService) {\r\n    this.chartTextStyle = {\r\n      color: this.chartColours.label,\r\n      fontWeight: 'normal',\r\n      fontFamily: 'Verdana'\r\n    };\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.isAnyData()) {\r\n      let chartContainer = null;\r\n      if (this.chartEl && this.chartEl.nativeElement) {\r\n        chartContainer = this.chartEl.nativeElement;\r\n        this.chart = new Highcharts.Chart(chartContainer, this.getChartOptions());\r\n      }\r\n    }\r\n  }\r\n\r\n  private isAnyData(): boolean {\r\n    return !_.isUndefined(this.populations);\r\n  }\r\n\r\n  private getChartOptions(): any /*Highcharts.Options*/ {\r\n    var model: FTModel = this.ftHelperService.getFTModel();\r\n    let max = new PopulationMaxFinder().getMaximumValue(this.populations);\r\n\r\n    // Populations\r\n    let areaPopulation = this.populations.areaPopulation;\r\n    let areaParentPopulation = this.populations.areaParentPopulation;\r\n    let nationalPopulation = this.populations.nationalPopulation;\r\n\r\n    // Labels\r\n    let subtitle = nationalPopulation.IndicatorName + \" \" + nationalPopulation.Period;\r\n    let maleString = ' (Male)';\r\n    let femaleString = ' (Female)';\r\n    this.chartTitle = '<div style=\"text-align:center;\">Age Profile<br><span style=\"font-size:12px;\">' + subtitle + '</span></div>';\r\n\r\n    let series = [];\r\n\r\n    // Area series\r\n    var areaName = this.ftHelperService.getAreaName(model.areaCode);\r\n    series.push(\r\n      {\r\n        name: areaName + maleString,\r\n        data: areaPopulation.Values[SexIds.Male],\r\n        type: 'bar',\r\n        color: Colour.bobLower\r\n      }, {\r\n        name: areaName + femaleString,\r\n        data: areaPopulation.Values[SexIds.Female],\r\n        type: 'bar',\r\n        color: Colour.bobHigher\r\n      }\r\n    );\r\n\r\n    // Parent area series\r\n    var isParentNotEngland = model.parentCode.toUpperCase() !== AreaCodes.England;\r\n    if (isParentNotEngland) {\r\n      var parentAreaName = this.ftHelperService.getParentArea().Name;\r\n      let parentColour = this.chartColours.pink;\r\n      series.push({\r\n        name: parentAreaName,\r\n        data: areaParentPopulation.Values[SexIds.Male],\r\n        color: parentColour,\r\n      },\r\n        {\r\n          name: parentAreaName + femaleString,\r\n          data: areaParentPopulation.Values[SexIds.Female],\r\n          color: parentColour,\r\n          showInLegend: false\r\n        });\r\n    }\r\n\r\n    // England series\r\n    series.push(\r\n      {\r\n        name: 'England',\r\n        data: nationalPopulation.Values[SexIds.Male],\r\n        color: Colour.comparator\r\n      },\r\n      {\r\n        name: 'England' + femaleString,\r\n        data: nationalPopulation.Values[SexIds.Female],\r\n        color: Colour.comparator,\r\n        showInLegend: false\r\n      }\r\n    );\r\n\r\n    return (\r\n      {\r\n        chart: {\r\n          defaultSeriesType: 'line',\r\n          margin: [60, 55, 150, 55],\r\n          /* margins must be set explicitly to avoid labels being positioned outside visible chart area */\r\n          width: 600,\r\n          height: 550\r\n        },\r\n        title: {\r\n          text: this.chartTitle,\r\n          style: this.chartTextStyle,\r\n          useHTML: true\r\n        },\r\n        xAxis: [{\r\n          categories: nationalPopulation.Labels,\r\n          reversed: false\r\n        }, { // mirror axis on right side\r\n          opposite: true,\r\n          reversed: false,\r\n          categories: nationalPopulation.Labels,\r\n          linkedTo: 0\r\n        }\r\n        ],\r\n        yAxis: [{\r\n          min: -max,\r\n          max: max,\r\n          title: {\r\n            text: '% of total population',\r\n            style: this.chartTextStyle\r\n          },\r\n          labels: {\r\n            formatter: function () {\r\n              return Math.abs(this.value);\r\n            }\r\n          }\r\n        }],\r\n        plotOptions: {\r\n          series: {\r\n            events: {\r\n              legendItemClick: function () {\r\n                return false;\r\n              }\r\n            }\r\n          },\r\n          bar: {\r\n            borderWidth: 0,\r\n            pointPadding: 0,\r\n            stacking: 'normal',\r\n            animation: false\r\n          },\r\n          line: {\r\n            // The symbol is a non-valid option here to work round a bug\r\n            // in highcharts where only half of the markers appear on hover\r\n            marker: HC.noLineMarker,\r\n            animation: false,\r\n            states: {\r\n              hover: {\r\n                marker: HC.noLineMarker\r\n              }\r\n            }\r\n          }\r\n        },\r\n        legend: {\r\n          enabled: true,\r\n          layout: 'vertical',\r\n          align: 'center',\r\n          verticalAlign: 'bottom',\r\n          itemStyle: {\r\n            fontWeight: 'normal'\r\n          }\r\n        },\r\n        tooltip: {\r\n          formatter: function () {\r\n\r\n            // Get series name\r\n            let name = this.series.name;\r\n            let alreadyHasSexLabel = new RegExp(/e[\\)]$/);\r\n            if (!alreadyHasSexLabel.test(name)) {\r\n              name += maleString;\r\n            }\r\n\r\n            return '<b>' + name + '<br>Age: ' +\r\n              this.point.category + '</b><br/>' +\r\n              'Population: ' + Math.abs(this.point.y) + '%';\r\n          }\r\n        },\r\n        credits: HC.credits,\r\n        exporting: {\r\n          enabled: false\r\n        },\r\n        series: series\r\n      });\r\n  }\r\n\r\n  public exportChart() {\r\n\r\n    let chartTitle = this.chartTitle;\r\n    this.chart.exportChart({ type: 'image/png' }, {\r\n      chart: {\r\n        spacingTop: 70,\r\n        events: {\r\n          load: function () {\r\n            this.renderer.text(chartTitle, 300, 15)\r\n              .attr({\r\n                align: 'center'\r\n              })\r\n              .css({\r\n                fontSize: '14px',\r\n                width: '600px'\r\n              })\r\n              .add();\r\n          }\r\n        }\r\n      },\r\n      title: {\r\n        text: '',\r\n        style: this.chartTextStyle\r\n      }\r\n    });\r\n\r\n    this.ftHelperService.logEvent('ExportImage', 'Population');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/population/population-chart/population-chart.component.ts","module.exports = \":host /deep/ #population-info,\\r\\n#registered-persons {\\r\\n    width: 355px;\\r\\n    float: left;\\r\\n    margin-top: 6px;\\r\\n}\\r\\n\\r\\n:host /deep/ #population-info .bordered-table {\\r\\n    margin-bottom: 15px;\\r\\n    width: 100%;\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n:host /deep/ #registered-persons td.header,\\r\\n#further-info-table td.header {\\r\\n    width: 200px;\\r\\n    background: #fafafa;\\r\\n    padding: 3px 3px 3px 0;\\r\\n    vertical-align: top;\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n#population-info #decile-key {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.practice-label {\\r\\n    width: 100%;\\r\\n    float: left;\\r\\n    text-align: center;\\r\\n    font-size: 14px;\\r\\n}\\r\\n\\r\\n#decile-key td {\\r\\n    height: 9px;\\r\\n    width: 30px;\\r\\n    border: 1px solid white;\\r\\n    border-top: 2px solid white;\\r\\n    border-bottom: none;\\r\\n}\\r\\n\\r\\n#deprivation-table,\\r\\n#ethnicity-table {\\r\\n    margin-top: 15px;\\r\\n}\\r\\n\\r\\n#deprivation {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.deprivation-label {\\r\\n    font-size: 10px;\\r\\n    line-height: 10px;\\r\\n    color: #666;\\r\\n    margin-bottom: 3px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/population/population-summary/population-summary.component.css\n// module id = ./src/app/population/population-summary/population-summary.component.css\n// module chunks = main","module.exports = \"<div id=\\\"population-info\\\" style=\\\"float: right; width: 360px;\\\" *ngIf=\\\"shouldDisplay()\\\">\\r\\n    <ft-metadata-table #metadata style=\\\"display:none;\\\" (isReady)=\\\"metadataIsReady($event)\\\"></ft-metadata-table>\\r\\n    <ft-registered-persons-table [registeredPersons]=\\\"registeredPersons\\\" (metadataToShow)=\\\"showMetadata($event)\\\"></ft-registered-persons-table>\\r\\n    <div class=\\\"practice-label\\\">{{practiceLabel}}</div>\\r\\n    <table id=\\\"further-info-table\\\" class=\\\"bordered-table\\\" cellspacing=\\\"0\\\">\\r\\n        <tr *ngFor=\\\"let row of adHocIndicatorRows\\\">\\r\\n            <td class=\\\"header\\\">\\r\\n                <div class=\\\"fl info-tooltip\\\" (click)=\\\"showMetadata(row.indicatorId)\\\"></div>\\r\\n                {{row.indicatorName}}\\r\\n            </td>\\r\\n            <td [innerHTML]=\\\"row.valueText\\\"></td>\\r\\n        </tr>\\r\\n    </table>\\r\\n    <table id=\\\"deprivation-table\\\" class=\\\"bordered-table\\\" cellspacing=\\\"0\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>\\r\\n                    <div class=\\\"w100\\\" style=\\\"position: relative;\\\">\\r\\n                        Deprivation\\r\\n                        <div class=\\\"right-tooltip-icon info-tooltip\\\" (click)=\\\"showDeprivationMetadata()\\\"></div>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr>\\r\\n                <td id=\\\"deprivation\\\" style=\\\"border-bottom: none;\\\" [innerHtml]=\\\"decileLabel\\\"></td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td style=\\\"border-top: none;\\\">\\r\\n                    <table id=\\\"decile-key\\\" cellspacing=\\\"0\\\">\\r\\n                        <tr>\\r\\n                            <td *ngFor=\\\"let decile of decileLabels\\\" [innerHtml]=\\\"decile.text\\\"></td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td *ngFor=\\\"let decile of decileLabels\\\" [class]=\\\"decile.getClass()\\\"></td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                    <div class=\\\"fl deprivation-label\\\">More deprived</div>\\r\\n                    <div class=\\\"fr deprivation-label\\\">Less deprived</div>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n    <table id=\\\"ethnicity-table\\\" class=\\\"bordered-table\\\" cellspacing=\\\"0\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>\\r\\n                    <div class=\\\"w100\\\" style=\\\"position: relative;\\\">\\r\\n                        Ethnicity Estimate\\r\\n                        <div class=\\\"right-tooltip-icon info-tooltip\\\" (click)=\\\"showEthnicityMetadata()\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr>\\r\\n                <td [innerHtml]=\\\"ethnicityLabel\\\"></td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/population/population-summary/population-summary.component.html\n// module id = ./src/app/population/population-summary/population-summary.component.html\n// module chunks = main","import { Component, Input, SimpleChanges, OnChanges, ViewChild, ElementRef } from '@angular/core';\r\nimport {\r\n  AllPopulationData, RegisteredPersons\r\n} from '../population';\r\nimport { FTHelperService } from '../../shared/service/helper/ftHelper.service';\r\nimport {\r\n  FTModel, Population, ValueData\r\n} from '../../typings/FT.d';\r\nimport { CommaNumber, AreaTypeIds, NumberHelper, IndicatorIds, ProfileIds } from '../../shared/shared';\r\nimport * as _ from 'underscore';\r\nimport { MetadataTableComponent } from '../../metadata/metadata-table/metadata-table.component';\r\n\r\n@Component({\r\n  selector: 'ft-population-summary',\r\n  templateUrl: './population-summary.component.html',\r\n  styleUrls: ['./population-summary.component.css']\r\n})\r\nexport class PopulationSummaryComponent implements OnChanges {\r\n\r\n  private noData = '<div class=\"no-data\">-</div>';\r\n\r\n  @Input() allPopulationData: AllPopulationData;\r\n  @ViewChild('metadata') metadata: MetadataTableComponent;\r\n\r\n  registeredPersons: RegisteredPersons[];\r\n  ethnicityLabel: string;\r\n  practiceLabel: string;\r\n  decileLabel: string;\r\n  decileLabels: DecileLabel[];\r\n  adHocIndicatorRows: AdHocIndicatorRow[];\r\n\r\n  constructor(private ftHelperService: FTHelperService) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.allPopulationData) {\r\n      let model = this.ftHelperService.getFTModel();\r\n      let areaName = this.ftHelperService.getAreaName(model.areaCode);\r\n\r\n      this.defineRegisteredPersons(areaName);\r\n      this.practiceLabel = model.areaCode + ' - ' + areaName;\r\n      this.defineAdHocIndicatorRows();\r\n      this.defineDeprivationDecile();\r\n      this.defineEthnicityLabel();\r\n    }\r\n  }\r\n\r\n  private defineDeprivationDecile() {\r\n\r\n    // Decile label\r\n    var decileNumber = this.allPopulationData.populationSummary.GpDeprivationDecile;\r\n    if (_.isUndefined(decileNumber)) {\r\n      this.decileLabel = '<i>Data not available for current practice</i>';\r\n    } else {\r\n      let deciles = this.allPopulationData.deprivationDeciles;\r\n      this.decileLabel = _.find(deciles, function (decile) { return decile.Id === decileNumber; }).Name;\r\n    }\r\n\r\n    // Decile blocks\r\n    let decileLabels: DecileLabel[] = [];\r\n    for (let i = 1; i <= 10; i++) {\r\n      decileLabels.push(new DecileLabel(i));\r\n    }\r\n\r\n    decileLabels[decileNumber - 1].text = '<div class=\"decile decile' +\r\n      decileNumber + '\" >' + decileNumber + '</div>';\r\n\r\n    this.decileLabels = decileLabels;\r\n  }\r\n\r\n  private defineAdHocIndicatorRows() {\r\n\r\n    let rows = [];\r\n    let values = this.allPopulationData.populationSummary.AdHocValues;\r\n\r\n    // QOF achievement\r\n    var qof = values.Qof;\r\n    var text = _.isUndefined(qof)\r\n      ? this.noData\r\n      : NumberHelper.roundNumber(qof.Count, 1) + ' (out of ' + qof.Denom + ')';\r\n    rows.push(new AdHocIndicatorRow(IndicatorIds.QofPoints, 'QOF achievement', text));\r\n\r\n    // Life expectancy\r\n    rows.push(this.getLifeExpectancy('Male', values.LifeExpectancyMale));\r\n    rows.push(this.getLifeExpectancy('Female', values.LifeExpectancyFemale));\r\n\r\n    // Patients that recommend practice\r\n    var recommend = values.Recommend;\r\n    text = _.isUndefined(recommend) ?\r\n      this.noData\r\n      : recommend.ValF + '%';\r\n    rows.push(new AdHocIndicatorRow(IndicatorIds.WouldRecommendPractice,\r\n      '% of patients that would recommend their practice', text));\r\n\r\n    this.adHocIndicatorRows = rows;\r\n  }\r\n\r\n  private getLifeExpectancy(sex: string, data: ValueData): AdHocIndicatorRow {\r\n    let text = _.isUndefined(data)\r\n      ? this.noData\r\n      : data.ValF + ' years';\r\n    return new AdHocIndicatorRow(IndicatorIds.LifeExpectancy, 'Life expectancy (' + sex + ')', text);\r\n  }\r\n\r\n  private defineEthnicityLabel() {\r\n    let ethnicity = this.allPopulationData.populationSummary.Ethnicity;\r\n    this.ethnicityLabel = _.isUndefined(ethnicity)\r\n      ? '<i>Insufficient data to provide accurate summary</i>'\r\n      : ethnicity;\r\n  }\r\n\r\n  public shouldDisplay(): boolean {\r\n    return this.ftHelperService.getFTModel().areaTypeId === AreaTypeIds.Practice;\r\n  }\r\n\r\n  private defineRegisteredPersons(areaName: string) {\r\n    let populations = this.allPopulationData.populations;\r\n    let parentAreaName = this.ftHelperService.getParentArea().Name;\r\n\r\n    this.registeredPersons = [\r\n      this.getRegisteredPersons(areaName, false, populations.areaPopulation),\r\n      this.getRegisteredPersons(parentAreaName, true, populations.areaParentPopulation),\r\n      this.getRegisteredPersons('ENGLAND', true, populations.nationalPopulation)\r\n    ];\r\n  }\r\n\r\n  private getRegisteredPersons(areaName: string, isAverage: boolean, population: Population): RegisteredPersons {\r\n    let persons = new RegisteredPersons();\r\n    persons.isAverage = isAverage;\r\n    persons.areaName = areaName;\r\n    persons.personCount = this.formatListSize(population.ListSize);\r\n    return persons;\r\n  }\r\n\r\n  private formatListSize(listSize: ValueData): string {\r\n    return listSize && listSize.Val > 0\r\n      ? new CommaNumber(listSize.Val).rounded()\r\n      : null;\r\n  }\r\n\r\n  private showDeprivationMetadata() {\r\n    this.showMetadata(IndicatorIds.DeprivationScore);\r\n  }\r\n\r\n  private showEthnicityMetadata() {\r\n    this.showMetadata(IndicatorIds.EthnicityEstimates);\r\n  }\r\n\r\n  private showMetadata(indicatorId: number) {\r\n    this.metadata.displayMetadataForIndicator(indicatorId, [ProfileIds.PracticeProfileSupportingIndicators]);\r\n  }\r\n\r\n  private metadataIsReady(isReady: boolean) {\r\n    if (isReady) {\r\n      let metadata = this.metadata;\r\n      // Set timeout so metadata table view will have finished rendering\r\n      setTimeout(function () { metadata.showInLightbox(); });\r\n    }\r\n  }\r\n}\r\n\r\nclass AdHocIndicatorRow {\r\n  constructor(public indicatorId: number,\r\n    public indicatorName: string,\r\n    public valueText: string) { }\r\n}\r\n\r\nclass DecileLabel {\r\n  constructor(public num: number) { }\r\n  public text: string = '';\r\n  public getClass(): string {\r\n    return 'decile' + this.num;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/population/population-summary/population-summary.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/population/population.component.css\n// module id = ./src/app/population/population.component.css\n// module chunks = main","module.exports = \"<div id=\\\"population-container\\\" style=\\\"display:none;\\\">\\r\\n    <div class=\\\"standard-width\\\">\\r\\n        <ft-population-chart [populations]=\\\"populations\\\" *ngIf=\\\"isAnyData()\\\"></ft-population-chart>\\r\\n        <ft-population-summary *ngIf=\\\"showSummary\\\" [allPopulationData]=\\\"allPopulationData\\\"></ft-population-summary>\\r\\n        <div class=\\\"no-indicator-data\\\" *ngIf=\\\"!isAnyData()\\\">\\r\\n            No population data available for current area type\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/population/population.component.html\n// module id = ./src/app/population/population.component.html\n// module chunks = main","import { Component, HostListener } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport {\r\n  FTModel, FTRoot, GroupRoot, Population, Category, PopulationSummary\r\n} from '../typings/FT.d';\r\nimport { FTHelperService } from '../shared/service/helper/ftHelper.service';\r\nimport { IndicatorService } from '../shared/service/api/indicator.service';\r\nimport { AreaCodes, AreaTypeIds, CategoryTypeIds } from '../shared/shared';\r\nimport { Populations, PopulationModifier, AllPopulationData } from './population';\r\n\r\n@Component({\r\n  selector: 'ft-population',\r\n  templateUrl: './population.component.html',\r\n  styleUrls: ['./population.component.css']\r\n})\r\nexport class PopulationComponent {\r\n\r\n  populations: Populations = null;\r\n  allPopulationData: AllPopulationData;\r\n  showSummary: boolean;\r\n\r\n  constructor(private ftHelperService: FTHelperService, private indicatorService: IndicatorService) { }\r\n\r\n  @HostListener('window:PopulationSelected', ['$event'])\r\n  public onOutsideEvent(event): void {\r\n\r\n    let model = this.ftHelperService.getFTModel();\r\n    this.showSummary = model.areaTypeId === AreaTypeIds.Practice;\r\n\r\n    // Get populations\r\n    let observables = [];\r\n    observables.push(\r\n      this.indicatorService.getPopulation(model.areaCode, model.areaTypeId),\r\n      this.indicatorService.getPopulation(model.parentCode, model.areaTypeId),\r\n      this.indicatorService.getPopulation(AreaCodes.England, model.areaTypeId)\r\n    );\r\n\r\n    // Get summary data\r\n    if (this.showSummary) {\r\n      observables.push(\r\n        this.indicatorService.getPopulationSummary(model.areaCode, model.areaTypeId),\r\n        this.indicatorService.getCategories(CategoryTypeIds.DeprivationDecileGp2015)\r\n      );\r\n    }\r\n\r\n    Observable.forkJoin(observables).subscribe(results => {\r\n\r\n      // Init populations\r\n      var populations = new Populations();\r\n      populations.areaPopulation = <Population>results[0];\r\n      populations.areaParentPopulation = <Population>results[1];\r\n      populations.nationalPopulation = <Population>results[2];\r\n      new PopulationModifier(populations).makeMalePopulationsNegative();\r\n      this.populations = populations;\r\n\r\n      // Summary\r\n      if (this.showSummary) {\r\n        let deprivationDeciles = <Category[]>results[4];\r\n        let populationSummary = <PopulationSummary>results[3];\r\n        this.allPopulationData = new AllPopulationData(this.populations,\r\n          populationSummary, deprivationDeciles);\r\n      }\r\n\r\n      this.ftHelperService.showAndHidePageElements();\r\n      this.ftHelperService.unlock();\r\n    });\r\n  }\r\n\r\n  public isAnyData(): boolean {\r\n    return this.populations &&\r\n      this.populations.nationalPopulation.IndicatorName !== null;\r\n  }\r\n}\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/population/population.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { PopulationComponent } from './population.component';\r\nimport { PopulationChartComponent } from './population-chart/population-chart.component';\r\nimport { PopulationSummaryComponent } from './population-summary/population-summary.component';\r\nimport { RegisteredPersonsTableComponent } from './registered-persons-table/registered-persons-table.component';\r\nimport { MetadataModule } from '../metadata/metadata.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule,\r\n        MetadataModule\r\n    ],\r\n    declarations: [\r\n        PopulationComponent,\r\n        PopulationChartComponent,\r\n        PopulationSummaryComponent,\r\n        RegisteredPersonsTableComponent\r\n    ],\r\n    exports: [\r\n        PopulationComponent\r\n    ]\r\n})\r\nexport class PopulationModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/population/population.module.ts","import { Population, PopulationSummary, Category } from '../typings/FT.d';\r\nimport { AreaCodes, SexIds } from '../shared/shared';\r\nimport * as _ from 'underscore';\r\n\r\nexport class Populations {\r\n    public areaPopulation: Population;\r\n    public areaParentPopulation: Population;\r\n    public nationalPopulation: Population;\r\n}\r\n\r\nexport class AllPopulationData {\r\n    constructor(public populations: Populations,\r\n        public populationSummary: PopulationSummary,\r\n        public deprivationDeciles: Category[]) { }\r\n}\r\n\r\nexport class RegisteredPersons {\r\n    areaName: string;\r\n    personCount: string;\r\n    isAverage: boolean;\r\n    public hasPersonCount(): boolean {\r\n        return this.personCount !== null;\r\n    }\r\n}\r\n\r\nexport class PopulationModifier {\r\n\r\n    constructor(private populations: Populations) { }\r\n\r\n    /** Make male population percentages -ve so they are displayed on the opposite side of the axis\r\n     * to female values\r\n     */\r\n    public makeMalePopulationsNegative() {\r\n        this.makeMaleValuesNegative(this.populations.areaPopulation);\r\n        this.makeMaleValuesNegative(this.populations.areaParentPopulation);\r\n        this.makeMaleValuesNegative(this.populations.nationalPopulation);\r\n    }\r\n\r\n    private makeMaleValuesNegative(population: Population) {\r\n        let values = population.Values;\r\n        if (!_.isUndefined(values[SexIds.Male]) || !_.isUndefined(SexIds.Female)) {\r\n            let maleValues = values[SexIds.Male];\r\n            for (var i in maleValues) {\r\n                maleValues[i] = -Math.abs(maleValues[i]);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class PopulationMaxFinder {\r\n\r\n    /** Finds the maximum population value to enable equal axis limits to be \r\n     * set on both the male and female sides\r\n     */\r\n    getMaximumValue(populations: Populations): number {\r\n        return this.getPopulationMax([\r\n            populations.areaPopulation,\r\n            populations.areaParentPopulation,\r\n            populations.nationalPopulation\r\n        ]);\r\n    }\r\n\r\n    private getPopulationMax(populations: Population[]): number {\r\n        var max = 5;\r\n        var min = -max;\r\n        for (var i in populations) {\r\n            if (populations[i] != null) {\r\n                min = _.min([min, _.min(populations[i].Values[SexIds.Male])]);\r\n                max = _.max([max, _.max(populations[i].Values[SexIds.Female])]);\r\n            }\r\n        }\r\n        return Math.ceil(_.max([max, -min]));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/population/population.ts","module.exports = \".population-heading {\\r\\n    margin-top: 15px;\\r\\n    float: left;\\r\\n    text-align: center;\\r\\n    width: 100%;\\r\\n    font-weight: bold;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.average {\\r\\n    font-size: 9px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/population/registered-persons-table/registered-persons-table.component.css\n// module id = ./src/app/population/registered-persons-table/registered-persons-table.component.css\n// module chunks = main","module.exports = \"<div id=\\\"registered-persons\\\">\\r\\n    <div class=\\\"population-heading\\\">\\r\\n        <div class=\\\"right-tooltip-icon info-tooltip\\\" (click)=\\\"showMetadata()\\\">\\r\\n        </div>\\r\\n        <div>Registered Persons</div>\\r\\n    </div>\\r\\n    <table class=\\\"bordered-table\\\" cellspacing=\\\"0\\\">\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let row of registeredPersons\\\">\\r\\n                <td class=\\\"header\\\">\\r\\n                    {{row.areaName}}\\r\\n                </td>\\r\\n                <td>{{row.personCount}}\\r\\n                    <div *ngIf=\\\"!row.hasPersonCount()\\\" class=\\\"no-data\\\">-</div>\\r\\n                    <span *ngIf=\\\"row.isAverage\\\" class=\\\"average\\\">(average)</span>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/population/registered-persons-table/registered-persons-table.component.html\n// module id = ./src/app/population/registered-persons-table/registered-persons-table.component.html\n// module chunks = main","import { Component, Input, EventEmitter, Output } from '@angular/core';\r\nimport {\r\n  RegisteredPersons\r\n} from '../population';\r\nimport {\r\n  IndicatorIds\r\n} from '../../shared/shared';\r\n\r\n@Component({\r\n  selector: 'ft-registered-persons-table',\r\n  templateUrl: './registered-persons-table.component.html',\r\n  styleUrls: ['./registered-persons-table.component.css']\r\n})\r\nexport class RegisteredPersonsTableComponent {\r\n\r\n  @Input() registeredPersons: RegisteredPersons[];\r\n  @Output() metadataToShow = new EventEmitter<number>();\r\n\r\n  public showMetadata() {\r\n    this.metadataToShow.emit(IndicatorIds.QofListSize);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/population/registered-persons-table/registered-persons-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/component/indicator-header/indicator-header.component.css\n// module id = ./src/app/shared/component/indicator-header/indicator-header.component.css\n// module chunks = main","module.exports = \"<div id=\\\"indicator-details-header\\\" *ngIf=\\\"header\\\">\\r\\n    <div class=\\\"trend-header\\\">\\r\\n        <div class=\\\"trend-title\\\">\\r\\n            <a class=\\\"trend-link\\\" title=\\\"More about this indicator\\\" href=\\\"javascript:goToMetadataPage(rootIndex);\\\">\\r\\n               {{header.indicatorName}} {{header.ageSexLabel}} </a><span *ngIf=\\\"header.hasNewData\\\" style=\\\"margin-right: 8px;\\\" class=\\\"badge badge-success\\\">New data</span>\\r\\n            <span class=\\\"benchmark-name\\\">{{header.comparatorName}}</span></div>\\r\\n        <div class=\\\"trend-unit\\\"><span> {{header.valueType}} {{header.unit}} </span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/component/indicator-header/indicator-header.component.html\n// module id = ./src/app/shared/component/indicator-header/indicator-header.component.html\n// module chunks = main","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ft-indicator-header',\r\n  templateUrl: './indicator-header.component.html',\r\n  styleUrls: ['./indicator-header.component.css']\r\n})\r\nexport class IndicatorHeaderComponent {\r\n\r\n  @Input() header: IndicatorHeader;\r\n}\r\n\r\nexport class IndicatorHeader {\r\n  constructor(public indicatorName: string,\r\n    public hasNewData: boolean,\r\n    public comparatorName: string,\r\n    public valueType: string,\r\n    public unit: string,\r\n    public ageSexLabel: string) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/component/indicator-header/indicator-header.component.ts","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  Http,\r\n  Response,\r\n  RequestOptions,\r\n  URLSearchParams,\r\n  Headers\r\n} from \"@angular/http\";\r\nimport \"rxjs/rx\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport {\r\n  FTRoot,\r\n  AreaTextSearchResult,\r\n  NearByAreas,\r\n  AreaAddress,\r\n  ParentAreaType\r\n} from \"../../../typings/FT.d\";\r\nimport { FTHelperService } from \"../../service/helper/ftHelper.service\";\r\nimport { Parameters } from \"./parameters\";\r\n@Injectable()\r\nexport class AreaService {\r\n\r\n  /** Observables for calls that have previously been made */\r\n  private observables: any = {};\r\n\r\n  private baseUrl: string = this.ftHelperService.getURL().bridge;\r\n  private version: string = this.ftHelperService.version();\r\n\r\n  constructor(private http: Http, private ftHelperService: FTHelperService) { }\r\n\r\n  getAreaSearchByText(\r\n    text: string,\r\n    areaTypeId: number,\r\n    shouldSearchRetreiveCoordinates: boolean,\r\n    parentAreasToIncludeInResults: boolean\r\n  ): Observable<AreaTextSearchResult> {\r\n    let params = new Parameters(this.version);\r\n    params.addPolygonAreaTypeId(areaTypeId);\r\n    params.addNoCache(true);\r\n    params.addIncludeCoordinates(shouldSearchRetreiveCoordinates);\r\n    params.addParentAreasToIncludeInResults(parentAreasToIncludeInResults);\r\n    params.addSearchText(text);\r\n\r\n    return this.getObservable(\"api/area_search_by_text\", params);\r\n  }\r\n\r\n  getAreaSearchByProximity(\r\n    easting: number,\r\n    northing: number,\r\n    areaTypeId: number\r\n  ): Observable<NearByAreas> {\r\n    let params = new Parameters(this.version);\r\n    params.addAreaTypeId(areaTypeId);\r\n    params.addEasting(easting);\r\n    params.addNorhing(northing);\r\n\r\n    return this.getObservable(\"api/area_search_by_proximity\", params);\r\n  }\r\n\r\n  getAreaAddressesByParentAreaCode(\r\n    parentAreaCode: string,\r\n    areaTypeId: number\r\n  ): Observable<AreaAddress> {\r\n    let params = new Parameters(this.version);\r\n    params.addAreaTypeId(areaTypeId);\r\n    params.addParentAreaCode(parentAreaCode);\r\n\r\n    return this.getObservable(\"api/area_addresses/by_parent_area_code\", params);\r\n  }\r\n\r\n  getParentAreas(profileId: number): Observable<ParentAreaType[]> {\r\n    let params = new Parameters(this.version);\r\n    params.addProfileId(profileId);\r\n\r\n    return this.getObservable(\"api/area_types/parent_area_types\", params);\r\n  }\r\n\r\n  private getObservable(serviceUrl: string, params?: Parameters): Observable<any> {\r\n\r\n    // Ensure paramaters is defined\r\n    if (!params) {\r\n      params = new Parameters(this.version);\r\n    }\r\n\r\n    // Check whether call has already been made and cached observable is available\r\n    let parameterString = params.getParameterString();\r\n    let serviceKey = serviceUrl + parameterString;\r\n    if (this.observables[serviceKey]) {\r\n      return this.observables[serviceKey];\r\n    }\r\n\r\n    let observable = this.http.get(this.baseUrl + serviceUrl, params.getRequestOptions())\r\n      .publishReplay(1).refCount() // Call once then use same response for repeats\r\n      .map(res => res.json())\r\n      .catch(this.handleError);\r\n\r\n    this.observables[serviceKey] = observable;\r\n    return observable;\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    console.error(error);\r\n    const errorMessage = \"AJAX call failed\";\r\n    return Observable.throw(errorMessage);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/service/api/area.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, RequestOptions, URLSearchParams, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/publishReplay';\r\nimport 'rxjs/add/operator/catch';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport {\r\n    FTRoot, CoreDataSet, IndicatorMetadata, GroupRoot, FTIndicatorSearch,\r\n    IndicatorMetadataTextProperty, ComparatorMethod, IndicatorStats, Population, Category,\r\n    PopulationSummary\r\n} from '../../../typings/FT.d';\r\nimport { Parameters } from './parameters';\r\nimport { FTHelperService } from '../../service/helper/ftHelper.service';\r\n\r\n@Injectable()\r\nexport class IndicatorService {\r\n\r\n    /** Observables for calls that have previously been made */\r\n    private observables: any = {};\r\n\r\n    private baseUrl: string = this.ftHelperService.getURL().bridge;\r\n\r\n    /** The version number of the static assets, e.g. JS */\r\n    private version: string = this.ftHelperService.version();\r\n    private search = this.ftHelperService.getSearch();\r\n\r\n    constructor(private http: Http, private ftHelperService: FTHelperService) { }\r\n\r\n    getSingleIndicatorForAllArea(groupId: number, areaTypeId: number, parentAreaCode: string,\r\n        profileId: number, comparatorId: number, indicatorId: number, sexId: number,\r\n        ageId: number): Observable<CoreDataSet> {\r\n\r\n        let params = new Parameters(this.version);\r\n        params.addGroupId(groupId);\r\n        params.addAreaTypeId(areaTypeId);\r\n        params.addParentAreaCode(parentAreaCode);\r\n        params.addProfileId(profileId);\r\n        params.addComparatorId(comparatorId);\r\n        params.addIndicatorId(indicatorId);\r\n        params.addSexId(sexId);\r\n        params.addAgeId(ageId);\r\n\r\n        return this.getObservable('api/latest_data/single_indicator_for_all_areas', params);\r\n    }\r\n\r\n    getCategories(categoryTypeId: number): Observable<Category[]> {\r\n\r\n        let params = new Parameters(this.version);\r\n        params.addCategoryTypeId(categoryTypeId);\r\n\r\n        return this.getObservable('api/categories', params);\r\n    }\r\n\r\n    getPopulationSummary(areaCode: string, areaTypeId): Observable<PopulationSummary> {\r\n\r\n        let params = new Parameters(this.version);\r\n        params.addAreaCode(areaCode);\r\n        params.addAreaTypeId(areaTypeId);\r\n\r\n        return this.getObservable('api/quinary_population_summary', params);\r\n    }\r\n\r\n    getPopulation(areaCode: string, areaTypeId: number): Observable<Population> {\r\n\r\n        let params = new Parameters(this.version);\r\n        params.addAreaCode(areaCode);\r\n        params.addAreaTypeId(areaTypeId);\r\n\r\n        return this.getObservable('api/quinary_population', params);\r\n    }\r\n\r\n    getBenchmarkingMethod(benchmarkingMethodId: number): Observable<ComparatorMethod> {\r\n\r\n        let params = new Parameters(this.version);\r\n        params.addId(benchmarkingMethodId);\r\n\r\n        return this.getObservable('api/comparator_method', params);\r\n    }\r\n\r\n    getIndicatorMetadataProperties(): Observable<IndicatorMetadataTextProperty[]> {\r\n        return this.getObservable('api/indicator_metadata_text_properties');\r\n    }\r\n\r\n    getIndicatorStatisticsTrendsForSingleIndicator(indicatorId: number, sexId: number, ageId: number,\r\n        childAreaTypeId: number, parentAreaCode: string): Observable<IndicatorStats> {\r\n\r\n        let params = new Parameters(this.version);\r\n        params.addIndicatorId(indicatorId);\r\n        params.addSexId(sexId);\r\n        params.addAgeId(ageId);\r\n        params.addChildAreaTypeId(childAreaTypeId);\r\n        params.addParentAreaCode(parentAreaCode);\r\n\r\n        return this.getObservable('api/indicator_statistics/trends_for_single_indicator', params);\r\n    }\r\n\r\n    getIndicatorMetadata(groupId: number): Observable<Map<number, IndicatorMetadata>> {\r\n\r\n        let params = new Parameters(this.version);\r\n        params.addIncludeSystemContent('no');\r\n        params.addIncludeDefinition('yes');\r\n\r\n        let method: string;\r\n        if (this.search.isInSearchMode()) {\r\n            method = 'by_indicator_id';\r\n            this.addSearchParameters(params);\r\n        } else {\r\n            method = 'by_group_id';\r\n            params.addGroupIds(groupId);\r\n        }\r\n\r\n        const serviceURL = 'api/indicator_metadata/' + method;\r\n        return this.getObservable(serviceURL, params);\r\n    }\r\n\r\n    getIndicatorMetadataByIndicatorId(indicatorId: number, restrictToProfileIds: number[]): Observable<Map<number, IndicatorMetadata>> {\r\n        let params = new Parameters(this.version);\r\n        params.addIncludeSystemContent('no');\r\n        params.addIncludeDefinition('yes');\r\n        params.addIndicatorIds([indicatorId]);\r\n        params.addRestrictToProfileIds(restrictToProfileIds);\r\n        return this.getObservable('api/indicator_metadata/by_indicator_id', params);\r\n    }\r\n\r\n    getLatestDataForAllIndicatorsInProfileGroupForChildAreas(groupId: number, areaTypeId: number,\r\n        parentAreaCode: string, profileId: number): Observable<Array<GroupRoot>> {\r\n\r\n        let params = new Parameters(this.version);\r\n        params.addAreaTypeId(areaTypeId);\r\n        params.addParentAreaCode(parentAreaCode);\r\n        params.addProfileId(profileId);\r\n\r\n        let method: string;\r\n        if (this.search.isInSearchMode()) {\r\n            if (this.search.isIndicatorList()) {\r\n                params.addIndicatorListId(this.search.getIndicatorListId());\r\n                method = 'indicator_list_for_child_areas'\r\n            } else {\r\n                this.addSearchParameters(params);\r\n                method = 'specific_indicators_for_child_areas'\r\n            }\r\n        } else {\r\n            params.addGroupId(groupId);\r\n            method = 'all_indicators_in_profile_group_for_child_areas'\r\n        }\r\n\r\n        const serviceURL = 'api/latest_data/' + method;\r\n        return this.getObservable(serviceURL, params);\r\n    }\r\n\r\n    private getObservable(serviceUrl: string, params?: Parameters): Observable<any> {\r\n\r\n        // Ensure paramaters is defined\r\n        if (!params) {\r\n            params = new Parameters(this.version);\r\n        }\r\n\r\n        // Check whether call has already been made and cached observable is available\r\n        let parameterString = params.getParameterString();\r\n        let serviceKey = serviceUrl + parameterString;\r\n        if (this.observables[serviceKey]) {\r\n            return this.observables[serviceKey];\r\n        }\r\n\r\n        let observable = this.http.get(this.baseUrl + serviceUrl, params.getRequestOptions())\r\n            .publishReplay(1).refCount() // Call once then use same response for repeats\r\n            .map(res => res.json())\r\n            .catch(this.handleError);\r\n\r\n        this.observables[serviceKey] = observable;\r\n        return observable;\r\n    }\r\n\r\n    private addSearchParameters(params: Parameters) {\r\n        params.addIndicatorIds(this.search.getIndicatorIdList().getAllIds());\r\n        params.addRestrictToProfileIds(this.search.getProfileIdsForSearch());\r\n    }\r\n\r\n    private handleError(error: any) {\r\n        console.error(error);\r\n        const errorMessage = 'AJAX call failed';\r\n        return Observable.throw(errorMessage);\r\n    }\r\n\r\n    private handleBoundariesError(error: any) {\r\n        console.error(error);\r\n        const errorMessage = 'Unsupported map type. Maps are not available for ' +\r\n            this.ftHelperService.getAreaTypeName();\r\n        return Observable.throw(errorMessage);\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/service/api/indicator.service.ts","import { Http, Response, RequestOptions, URLSearchParams, Headers } from '@angular/http';\r\nexport class Parameters {\r\n\r\n    private params: URLSearchParams = new URLSearchParams();\r\n\r\n    constructor(version: string) {\r\n        // Version included for cache busting between deployments\r\n        this.params.set('v', version);\r\n    }\r\n\r\n    getRequestOptions(): RequestOptions {\r\n        let requestOptions: RequestOptions = new RequestOptions({\r\n            headers: new Headers({ 'Content-Type': 'application/json' })\r\n        });\r\n        requestOptions.search = this.params;\r\n        return requestOptions;\r\n    }\r\n\r\n    /** Returns a concaternated string of the URL parameters */\r\n    getParameterString() {\r\n        return this.params.toString();\r\n    }\r\n\r\n    addId(id: number): void {\r\n        this.params.set('id', id.toString());\r\n    }\r\n\r\n    addGroupId(groupId: number): void {\r\n        this.params.set('group_id', groupId.toString());\r\n    }\r\n\r\n    addGroupIds(groupId: number): void {\r\n        this.params.set('group_ids', groupId.toString());\r\n    }\r\n\r\n    addProfileId(profileId: number): void {\r\n        this.params.set('profile_id', profileId.toString());\r\n    }\r\n\r\n    addAreaTypeId(areaTypeId: number): void {\r\n        this.params.set('area_type_id', areaTypeId.toString());\r\n    }\r\n\r\n    addChildAreaTypeId(childAreaTypeId: number) {\r\n        this.params.set('child_area_type_id', childAreaTypeId.toString());\r\n    }\r\n\r\n    addParentAreaCode(areaCode: string): void {\r\n        this.params.set('parent_area_code', areaCode);\r\n    }\r\n\r\n    addAreaCode(areaCode: string): void {\r\n        this.params.set('area_code', areaCode);\r\n    }\r\n\r\n    addComparatorId(comparatorId: number): void {\r\n        this.params.set('comparator_id', comparatorId.toString());\r\n    }\r\n\r\n    addIndicatorId(indicatorId: number): void {\r\n        this.params.set('indicator_id', indicatorId.toString());\r\n    }\r\n\r\n    addCategoryTypeId(categoryTypeId: number): void {\r\n        this.params.set('category_type_id', categoryTypeId.toString());\r\n    }\r\n\r\n    addSexId(sexId: number): void {\r\n        this.params.set('sex_id', sexId.toString());\r\n    }\r\n\r\n    addAgeId(ageId: number): void {\r\n        this.params.set('age_id', ageId.toString());\r\n    }\r\n\r\n    addIndicatorListId(indicatorListId: any): void {\r\n        this.params.set('indicator_list_id', indicatorListId.toString());\r\n    }\r\n\r\n    addIncludeSystemContent(yesOrNo: string): void {\r\n        this.params.set('include_system_content', yesOrNo);\r\n    }\r\n\r\n    addIncludeDefinition(yesOrNo: string): void {\r\n        this.params.set('include_definition', yesOrNo);\r\n    }\r\n\r\n    addRestrictToProfileIds(profileIds: Array<number>): void {\r\n        this.params.set('restrict_to_profile_ids', profileIds.join(','));\r\n    }\r\n\r\n    addIndicatorIds(indicatorIds: Array<number>): void {\r\n        this.params.set('indicator_ids', indicatorIds.join(','));\r\n    }\r\n    addSearchText(searchText: string): void {\r\n        this.params.set('search_text', searchText);\r\n    }\r\n    addNoCache(noCache: Boolean): void {\r\n        this.params.set('no_cache', noCache.toString());\r\n    }\r\n    addIncludeCoordinates(includeCoordinates: Boolean): void {\r\n        this.params.set('include_coordinates', includeCoordinates.toString());\r\n    }\r\n    addParentAreasToIncludeInResults(parentAreasToIncludeInResults: Boolean): void {\r\n        this.params.set('parent_areas_to_include_in_results', parentAreasToIncludeInResults.toString());\r\n    }\r\n    addPolygonAreaTypeId(polygonAreaTypeId: number): void {\r\n        this.params.set('polygon_area_type_id', polygonAreaTypeId.toString());\r\n    }\r\n    addEasting(easting: number): void {\r\n        this.params.set('easting', easting.toString());\r\n    }\r\n    addNorhing(northing: number): void {\r\n        this.params.set('northing', northing.toString());\r\n    }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/service/api/parameters.ts","import { Injectable } from '@angular/core';\r\nimport { FTRoot, CoreDataSet, Unit, ValueWithUnit } from '../../../typings/FT.d';\r\ndeclare var FTWrapper: FTRoot;\r\n\r\n@Injectable()\r\nexport class CoreDataHelperService {\r\n    addOrderandPercentilesToData(coreDataSet: CoreDataSet) {\r\n        return FTWrapper.coreDataHelper.addOrderandPercentilesToData(coreDataSet);\r\n    }\r\n    valueWithUnit(unit: Unit): ValueWithUnit {\r\n        return FTWrapper.coreDataHelper.valueWithUnit(unit);\r\n    }\r\n    getFullLabel(value: string, options?: any): string {\r\n        return FTWrapper.valueWithUnit.getFullLabel(value, options);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/service/helper/coreDataHelper.service.ts","import { Injectable, ElementRef } from '@angular/core';\r\nimport {\r\n    FTRoot, Area, GroupRoot, FTConfig, FTModel, IndicatorMetadata, Url, ValueNote,\r\n    FTDisplay, CoreDataSet, FTIndicatorSearch, Grouping, CoreDataSetInfo, Unit,\r\n    ValueNoteTooltipProvider, TooltipManager, TrendMarker, CommaNumber, ValueDisplayer,\r\n    RecentTrendsTooltip, RecentTrendSelected, ComparisonConfig, ParentAreaType\r\n} from '../../../typings/FT.d';\r\ndeclare var FTWrapper: FTRoot;\r\n\r\n@Injectable()\r\nexport class FTHelperService {\r\n    getAreaName(areaCode: string): string {\r\n        return FTWrapper.display.getAreaName(areaCode);\r\n    }\r\n    getAreaTypeName(): string {\r\n        return FTWrapper.display.getAreaTypeName();\r\n    }\r\n    getAreaList(): Array<Area> {\r\n        return FTWrapper.display.getAreaList();\r\n    }\r\n    getComparatorId(): number {\r\n        return FTWrapper.display.getComparatorId();\r\n    }\r\n    getCurrentComparator(): Area {\r\n        return FTWrapper.bridgeDataHelper.getCurrentComparator();\r\n    }\r\n    getCurrentGroupRoot(): GroupRoot {\r\n        return FTWrapper.bridgeDataHelper.getGroopRoot();\r\n    }\r\n    getAllGroupRoots(): GroupRoot[] {\r\n        return FTWrapper.bridgeDataHelper.getAllGroupRoots();\r\n    }\r\n    getValueNotes(): Array<ValueNote> {\r\n        return FTWrapper.display.getValueNotes();\r\n    }\r\n    getValueNoteById(id: number): ValueNote {\r\n        return FTWrapper.display.getValueNoteById(id);\r\n    }\r\n    formatCount(dataInfo: CoreDataSetInfo): string {\r\n        return FTWrapper.formatCount(dataInfo);\r\n    }\r\n    newCoreDataSetInfo(data: CoreDataSet): CoreDataSetInfo {\r\n        return FTWrapper.newCoreDataSetInfo(data);\r\n    }\r\n    newValueDisplayer(unit: Unit): ValueDisplayer {\r\n        return FTWrapper.newValueDisplayer(unit);\r\n    }\r\n    newCommaNumber(n: number): CommaNumber {\r\n        return FTWrapper.newCommaNumber(n);\r\n    }\r\n    newValueNoteTooltipProvider(): ValueNoteTooltipProvider {\r\n        return FTWrapper.newValueNoteTooltipProvider();\r\n    }\r\n    newTooltipManager(): TooltipManager {\r\n        return FTWrapper.newTooltipManager();\r\n    }\r\n    newRecentTrendsTooltip(): RecentTrendsTooltip {\r\n        return FTWrapper.newRecentTrendsTooltip();\r\n    }\r\n    newComparisonConfig(groupRoot: GroupRoot, indicatorMetadata: IndicatorMetadata): ComparisonConfig {\r\n        return FTWrapper.newComparisonConfig(groupRoot, indicatorMetadata);\r\n    }\r\n    getNationalComparatorGrouping(root: GroupRoot): Grouping {\r\n        return FTWrapper.getNationalComparatorGrouping(root);\r\n    }\r\n    getFTConfig(): FTConfig {\r\n        return FTWrapper.config();\r\n    }\r\n    getFTModel(): FTModel {\r\n        return FTWrapper.model();\r\n    }\r\n    getMetadata(IID: number): IndicatorMetadata {\r\n        return FTWrapper.indicatorHelper.getMetadataHash()[IID];\r\n    }\r\n    getMetadataHash(): Map<number, IndicatorMetadata> {\r\n        return FTWrapper.indicatorHelper.getMetadataHash();\r\n    }\r\n    getIndicatorIndex(): number {\r\n        return FTWrapper.indicatorHelper.getIndicatorIndex();\r\n    }\r\n    getParentArea(): Area {\r\n        return FTWrapper.getParentArea();\r\n    }\r\n    getSearch(): FTIndicatorSearch {\r\n        return FTWrapper.search;\r\n    }\r\n    getSexAndAgeLabel(groupRoot: GroupRoot): string {\r\n        return FTWrapper.getSexAndAgeLabel(groupRoot);\r\n    }\r\n    /** Returns IMG HTML for a recent trend */\r\n    getTrendMarkerImage(trendMarker: TrendMarker, polarity: number): string {\r\n        return FTWrapper.getTrendMarkerImage(trendMarker, polarity);\r\n    }\r\n    getURL(): Url {\r\n        return FTWrapper.url();\r\n    }\r\n    getIndicatorDataQualityHtml(text: string): string {\r\n        return FTWrapper.getIndicatorDataQualityHtml(text);\r\n    }\r\n    getIndicatorDataQualityTooltipText(dataQualityCount: number): string {\r\n        return FTWrapper.getIndicatorDataQualityTooltipText(dataQualityCount);\r\n    }\r\n    goToMetadataPage(rootIndex: number | string): void {\r\n        FTWrapper.goToMetadataPage(rootIndex);\r\n    }\r\n    recentTrendSelected(): RecentTrendSelected {\r\n        return FTWrapper.recentTrendSelected();\r\n    }\r\n    setAreaCode(areaCode: string): void {\r\n        FTWrapper.setAreaCode(areaCode);\r\n    }\r\n    showIndicatorMetadataInLightbox(element: ElementRef): void {\r\n        FTWrapper.showIndicatorMetadataInLightbox(element);\r\n    }\r\n    showAndHidePageElements(): void {\r\n        FTWrapper.showAndHidePageElements();\r\n    }\r\n    showTargetBenchmarkOption(roots): void {\r\n        FTWrapper.showTargetBenchmarkOption(roots);\r\n    }\r\n    getTargetLegendHtml(comparisonConfig, metadata): string {\r\n        return FTWrapper.getTargetLegendHtml(comparisonConfig, metadata);\r\n    }\r\n    lock(): void {\r\n        FTWrapper.lock();\r\n    }\r\n    unlock(): void {\r\n        FTWrapper.unlock();\r\n    }\r\n\r\n    /** The version number of the static assets, e.g. JS */\r\n    version(): string {\r\n        return FTWrapper.version();\r\n    }\r\n\r\n    saveElementAsImage(element, outputFilename): void {\r\n        return FTWrapper.saveElementAsImage(element, outputFilename);\r\n    }\r\n\r\n    redirectToPopulationPage(): void {\r\n        return FTWrapper.redirectToPopulationPage();\r\n    }\r\n\r\n    isValuePresent(val: string): boolean {\r\n        return val !== undefined && val !== '-' && val !== '';\r\n    }\r\n\r\n    logEvent(category: string, action: string, label: string = null): void {\r\n        FTWrapper.logEvent(category, action, label);\r\n    }\r\n\r\n    // getParentAreaType(): ParentAreaType[] {\r\n    //   return FTWrapper.getParentArea\r\n    // }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/service/helper/ftHelper.service.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Observer } from 'rxjs/Observer';\r\n\r\nexport interface ScriptModel {\r\n    name: string;\r\n    src: string;\r\n    loaded: boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class ScriptLoaderService {\r\n    private scripts: ScriptModel[] = [];\r\n\r\n    public load(script: ScriptModel): Observable<ScriptModel> {\r\n        return new Observable<ScriptModel>((observer: Observer<ScriptModel>) => {\r\n            let existingScript = this.scripts.find(s => s.name === script.name);\r\n\r\n            // Complete if already loaded\r\n            if (existingScript && existingScript.loaded) {\r\n                observer.next(existingScript);\r\n                observer.complete();\r\n            }\r\n            else {\r\n                // Add the script\r\n                this.scripts = [...this.scripts, script];\r\n\r\n                // Load the script\r\n                let scriptElement = document.createElement('script');\r\n                //scriptElement.baseURI = '';\r\n                scriptElement.type = 'text/javascript';\r\n                scriptElement.src = script.src;\r\n\r\n                scriptElement.onload = () => {\r\n                    script.loaded = true;\r\n                    observer.next(script);\r\n                    observer.complete();\r\n                };\r\n\r\n                scriptElement.onerror = (error: any) => {\r\n                    observer.error('Couldn\\'t load script ' + script.src);\r\n                };\r\n\r\n                document.getElementsByTagName('body')[0].appendChild(scriptElement);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/service/helper/script.service.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IndicatorHeaderComponent } from './component/indicator-header/indicator-header.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        IndicatorHeaderComponent\r\n    ],\r\n    exports: [\r\n        IndicatorHeaderComponent\r\n    ]\r\n})\r\n\r\nexport class SharedModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/shared.module.ts","import { TooltipManager, GroupRoot, ComparisonConfig } from '../typings/FT.d';\r\n\r\nexport class TooltipHelper {\r\n    constructor(private tooltipManager: TooltipManager) { }\r\n    displayHtml(event: MouseEvent, html: string): void {\r\n        this.tooltipManager.setHtml(html);\r\n        this.tooltipManager.positionXY(event.pageX + 10, event.pageY + 15);\r\n        this.tooltipManager.showOnly();\r\n    }\r\n    reposition(event: MouseEvent): void {\r\n        this.tooltipManager.positionXY(event.pageX + 10, event.pageY + 15)\r\n    }\r\n    hide(): void {\r\n        this.tooltipManager.hide();\r\n    }\r\n}\r\nexport class AreaCodes {\r\n    public static readonly England = \"E92000001\";\r\n}\r\n\r\nexport class SexIds {\r\n    public static readonly Male = 1;\r\n    public static readonly Female = 2;\r\n    public static readonly Person = 4;\r\n}\r\n\r\n/** Highcharts helper */\r\nexport class HC {\r\n    public static readonly credits = { enabled: false };\r\n    public static readonly noLineMarker = { enabled: false, symbol: 'x' }\r\n}\r\n\r\nexport class ComparatorIds {\r\n    public static readonly national = 4;\r\n    public static readonly sub_national = 1;\r\n}\r\nexport class AreaTypeIds {\r\n    public static readonly District = 1;\r\n    public static readonly Region = 6;\r\n    public static readonly Practice = 7;\r\n    public static readonly County = 9;\r\n    public static readonly AcuteTrust = 14;\r\n    public static readonly Country = 15;\r\n    public static readonly UnitaryAuthority = 16;\r\n    public static readonly GpShape = 18;\r\n    public static readonly DeprivationDecile = 23;\r\n    public static readonly Subregion = 46;\r\n    public static readonly DistrictUA = 101;\r\n    public static readonly CountyUA = 102;\r\n    public static readonly PheCentres2013 = 103;\r\n    public static readonly PheCentres2015 = 104;\r\n    public static readonly OnsClusterGroup = 110;\r\n    public static readonly Scn = 112;\r\n    public static readonly AcuteTrusts = 118;\r\n    public static readonly Stp = 120;\r\n    public static readonly CombinedAuthorities = 126;\r\n    public static readonly CcgSinceApr2017 = 152;\r\n    public static readonly CcgPreApr2017 = 153;\r\n    public static readonly CcgSinceApr2018 = 154;\r\n};\r\n\r\nexport class IndicatorIds {\r\n    public static readonly QofListSize = 114;\r\n    public static readonly QofPoints = 295;\r\n    public static readonly WouldRecommendPractice = 347;\r\n    public static readonly LifeExpectancy = 650;\r\n    public static readonly EthnicityEstimates = 1679;\r\n    public static readonly DeprivationScore = 91872;\r\n}\r\n\r\nexport class CategoryTypeIds {\r\n    public static readonly DeprivationDecileCountyUA2015 = 39;\r\n    public static readonly DeprivationDecileDistrictUA2015 = 40;\r\n    public static readonly HealthProfilesSSILimit = 5;\r\n    public static readonly DeprivationDecileCCG2010 = 11;\r\n    public static readonly DeprivationDecileGp2015 = 38;\r\n}\r\n\r\nexport class ProfileIds {\r\n    public static readonly PracticeProfileSupportingIndicators = 21;\r\n    public static readonly PracticeProfile = 20;\r\n}\r\n\r\nexport class CommaNumber {\r\n\r\n    constructor(private value: number) { }\r\n\r\n    private commarate(value: number | string) {\r\n        return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    /**\r\n    * Rounds the number to 0 decimal places before formatting with commas\r\n    */\r\n    rounded() {\r\n        return this.commarate(Math.round(this.value));\r\n    }\r\n\r\n    unrounded() {\r\n        var commaNumber = this.value.toString();\r\n        if (commaNumber.indexOf('.') > -1) {\r\n            let bits = commaNumber.split('.');\r\n            return this.commarate(bits[0]) + '.' + bits[1];\r\n        }\r\n        return this.commarate(this.value);\r\n    }\r\n};\r\n\r\nexport class NumberHelper {\r\n\r\n    /**\r\n     * Rounds a number to a fixed amount of decimal places\r\n     * @param num Number to round\r\n     * @param dec Number of decimal place to round to\r\n     */\r\n    public static roundNumber(num, dec) {\r\n        return Math.round(num * Math.pow(10, dec)) / Math.pow(10, dec);\r\n    };\r\n}\r\n\r\nexport class ComparatorMethodIds {\r\n    public static readonly SuicidePlan = 14;\r\n    public static readonly Quintiles = 15;\r\n}\r\n\r\nexport class PolarityIds {\r\n    public static readonly RAGLowIsGood = 0;\r\n    public static readonly RAGHighIsGood = 1;\r\n    public static readonly Quintiles = 15;\r\n    public static readonly BlueOrangeBlue = 99;\r\n}\r\nexport class Colour {\r\n    public static readonly chart = '#a8a8cc';\r\n    public static readonly better = '#92d050';\r\n    public static readonly same = '#ffc000';\r\n    public static readonly worse = '#c00000';\r\n    public static readonly none = '#ffffff';\r\n    public static readonly limit99 = '#a8a8cc';\r\n    public static readonly limit95 = '#444444';\r\n    public static readonly border = '#666666';\r\n    public static readonly comparator = '#000000';\r\n    public static readonly bobLower = '#5555E6';\r\n    public static readonly bobHigher = '#C2CCFF';\r\n    public static readonly bodyText = '#333';\r\n    public static readonly noComparison = '#c9c9c9';\r\n    public static readonly quintile1 = '#DED3EC';\r\n    public static readonly quintile2 = '#BEA7DA';\r\n    public static readonly quintile3 = '#9E7CC8';\r\n    public static readonly quintile4 = '#7E50B6';\r\n    public static readonly quintile5 = '#5E25A4';\r\n\r\n    public static getSignificanceColorForBenchmark(groupRoot: GroupRoot, comparisonConfig: ComparisonConfig, sig: number): string {\r\n\r\n        const polarityId = groupRoot.PolarityId;\r\n        // Quintiles\r\n        if (comparisonConfig.useQuintileColouring ||\r\n            groupRoot.ComparatorMethodId === ComparatorMethodIds.Quintiles) {\r\n            if (sig > 0 && sig < 6) {\r\n                const quintile = 'quintile' + sig;\r\n                switch (quintile) {\r\n                    case 'quintile1': {\r\n                        return Colour.quintile1;\r\n                    }\r\n                    case 'quintile2': {\r\n                        return Colour.quintile2;\r\n                    }\r\n                    case 'quintile3': {\r\n                        return Colour.quintile3;\r\n                    }\r\n                    case 'quintile4': {\r\n                        return Colour.quintile4;\r\n                    }\r\n                    case 'quintile5': {\r\n                        return Colour.quintile5;\r\n                    }\r\n                }\r\n            } else {\r\n                return Colour.noComparison;\r\n            }\r\n        }\r\n        // No colour comparison should be made\r\n        if (polarityId === -1) {\r\n            return Colour.noComparison;\r\n        }\r\n        // Blues\r\n        if (polarityId === PolarityIds.BlueOrangeBlue) {\r\n            return sig === 1 ? Colour.bobLower :\r\n                sig === 2 ? Colour.same :\r\n                    sig === 3 ? Colour.bobHigher :\r\n                        Colour.noComparison;\r\n        }\r\n        // RAG\r\n        return sig === 1 ? Colour.worse :\r\n            sig === 2 ? Colour.same :\r\n                sig === 3 ? Colour.better :\r\n                    Colour.noComparison;\r\n    }\r\n\r\n    public static getColorForQuartile(quartile: number): string {\r\n        switch (quartile) {\r\n            case 1:\r\n                return '#E8C7D1';\r\n            case 2:\r\n                return '#B74D6D';\r\n            case 3:\r\n                return '#98002E';\r\n            case 4:\r\n            case 5:\r\n                return '#700023';\r\n            default:\r\n                return '#B0B0B2';\r\n        }\r\n    }\r\n\r\n    public static getColorForQuintile(quintile: number): string {\r\n        switch (quintile) {\r\n            case 1:\r\n                return Colour.quintile1;\r\n            case 2:\r\n                return Colour.quintile2;\r\n            case 3:\r\n                return Colour.quintile3;\r\n            case 4:\r\n                return Colour.quintile4;\r\n            case 5:\r\n            case 6:\r\n                return Colour.quintile5;\r\n            default:\r\n                return '#B0B0B2';\r\n        }\r\n    }\r\n\r\n    public static getColorForContinuous(orderFrac: number): string {\r\n        if (orderFrac === -1) {\r\n            return '#B0B0B2';\r\n        }\r\n        const seed = orderFrac;\r\n        let r = 21;\r\n        let g = 28;\r\n        let b = 85;\r\n\r\n        r = 255 - Math.round(seed * (255 - r));\r\n        g = 233 - Math.round(seed * (233 - g));\r\n        b = 127 - Math.round(seed * (127 - b));\r\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/shared.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { environment } from './environments/environment';\r\nimport { AppModule } from './app/app.module';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}