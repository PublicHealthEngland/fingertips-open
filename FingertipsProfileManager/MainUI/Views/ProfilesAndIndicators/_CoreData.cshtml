@using Fpm.MainUI.Helpers
@model Fpm.MainUI.ViewModels.ProfilesAndIndicators.CoreDataSetViewModel

@{
    var rowsFound = Model.RowsFound;
    var rowsDisplayed = Model.DataSet != null ? Model.DataSet.Count() : 0;
    var noScroll = rowsFound < 55;
}

<div class="content-row">

    @if (Model.DeleteStatus.HasValue)
    {
        <label class='field-validation-@(Model.DeleteStatus.Value ? "success" : "error")'> @Model.Message </label>
    }
    else
    {
        <h3>
            @rowsFound rows found
        @if (Model.DataSet != null && rowsFound > 0)
        {
            <span class="small-font">(@rowsDisplayed displayed)</span>
            <br />
        }
    </h3>
}

    @if (rowsFound > 0)
    {
        if (Model.CanDeleteDataSet)
        {
            <input type="button" class="btn btn-danger" id="btn-delete-filteredData" value="Delete @rowsFound rows" />
            <br />
        }
        else
        {
            <label class="field-validation-warning" style="float: right">
                You cannot delete data for this indicator (you do not have permission to the owning profile)
            </label>
        }
    }
</div>

<table id="tbl-view-data">
    <thead>
        <tr>
            <th class="cell-medium">Year</th>         
            <th class="cell-medium">Year<br/>Range</th>         
            <th class="cell-medium">Quarter</th>         
            <th class="cell-medium">Month</th>         
            <th class="cell-small">Age<br/>Id</th>         
            <th class="cell-small">Sex<br/>Id</th>         
            <th class="cell-area-code">Area<br/>Code</th>         
            <th class="cell-large">Count</th>         
            <th class="cell-large">Value</th>         
            <th class="cell-large">Lower<br/>CI 95</th>
            <th class="cell-large">Upper<br/>CI 95</th>
            <th class="cell-large">Lower<br />CI 99.8</th>
            <th class="cell-large">Upper<br />CI 99.8</th>    
            <th class="cell-large">Denom</th>         
            <th class="cell-large">Denom2</th>         
            <th class="cell-medium">Value<br />Note<br/>Id</th>         
            <th class="cell-medium">Cat<br/>Type<br />Id</th>         
            <th class="cell-medium">Cat<br/>Id</th> 
            <th class='@(noScroll ? "hide" : "")'></th>        
        </tr>
    </thead>                
    <tbody>
        @if (Model.DataSet != null)
        {
            foreach (var data in Model.DataSet)
            {
                <tr>
                    <td class="cell-medium center-align">@data.Year</td>
                    <td class="cell-medium">@data.YearRange</td>
                    <td class="cell-medium">@data.Quarter</td>
                    <td class="cell-medium">@data.Month</td>
                    <td class="cell-small">@data.AgeId</td>
                    <td class="cell-small">@data.SexId</td>
                    <td class="cell-area-code">@data.AreaCode</td>
                    <td class="cell-large right-align">@data.Count.Round()</td>
                    <td class="cell-large right-align">@data.Value.Round()</td>
                    <td class="cell-large right-align">@CoreDataSetFormatter.Format(data.LowerCI95)</td>
                    <td class="cell-large right-align">@CoreDataSetFormatter.Format(data.UpperCI95)</td>
                    <td class="cell-large right-align">@CoreDataSetFormatter.Format(data.LowerCI99_8)</td>
                    <td class="cell-large right-align">@CoreDataSetFormatter.Format(data.UpperCI99_8)</td>
                    <td class="cell-large right-align">@data.Denominator.Round()</td>
                    <td class="cell-large right-align">@data.Denominator_2.Round()</td>
                    <td class="cell-medium">@data.ValueNoteId</td>
                    <td class="cell-medium">@data.CategoryTypeId</td>
                    <td class="cell-medium">@data.CategoryId</td>
                   <td class='@(noScroll ? "hide" : "")'></td>
                </tr>
            }
        }
       
    </tbody>
</table>
