@using Fpm.MainUI
@using Fpm.MainUI.Helpers
@using iTextSharp.text.pdf.qrcode
@model Fpm.ProfileData.Entities.Profile.ContentItem
<link href="@(AppConfig.JsPath)tiny_mce/skins/lightgray/skin.min.css" rel="stylesheet" type="text/css" />

<script src="@(AppConfig.JsPath)tiny_mce/tinymce.min.js" type="text/javascript"></script>
<script src="@(AppConfig.JsPath)tiny_mce/jquery.tinymce.min.js" type="text/javascript"></script>
<script src="@(AppConfig.JsPath)content-management.js" type="text/javascript"></script>

@{ Layout = "~/Views/Shared/_LayoutPage.cshtml"; }

@{
    var isUserAdmin = UserDetails.CurrentUser().IsAdministrator;
    var hasUserAccessToProfile = UserDetails.CurrentUser().HasWritePermissionsToProfile(Model.ProfileId);
    var cancelButtonLabel = hasUserAccessToProfile
        ? "Cancel"
        : "Back";
}

<div class="standardWidth">
    @using (Html.BeginForm("UpdateContent", "Content", FormMethod.Post, new { id = "EditContent" }))
    {
        <h2 class="subheading">Edit content</h2>
        
        <div class="delete-indicators">
            <label class="content-item-detail-label">Profile:</label>@Model.ProfileName<br />
        </div>
        <div class="delete-indicators">
            <label class="content-item-detail-label">Content Key:</label>

            @if (isUserAdmin)
            {
                @Html.TextBoxFor(model => model.ContentKey, new { @class = "unselected-domain" })
                <span class="field-validation-valid" data-valmsg-for="ContentKey" data-valmsg-replace="true"></span>
            }
            else
            {
                @Model.ContentKey<br />
            }
        </div>
        <div class="delete-indicators">
            <label class="content-item-detail-label">Description:</label>
            @Html.TextBoxFor(model => model.Description, new { @class = "unselected-domain" })
            <span class="field-validation-valid" data-valmsg-for="Description" data-valmsg-replace="true"></span>
            <br />
        </div>

        if (Model.PlainTextContent && !isUserAdmin)
        {
            <div class="delete-indicators">
                <label class="content-item-detail-label">Plain text:</label>
                @Html.HiddenFor(x => x.PlainTextContent)
                @Html.CheckBox("PlainTextContent", Model.PlainTextContent, new {@value = Model.PlainTextContent, @disabled = "disabled", id="disabledCheckBox" })
            </div>
        }
        else
        {
            if (isUserAdmin)
            {
                <div class="delete-indicators">
                    <label class="content-item-detail-label">Plain text:</label>
                    @Html.CheckBoxFor(model => model.PlainTextContent)
                </div>
            }
            else
            {
                @Html.HiddenFor(x => x.PlainTextContent)
            }
        }

        <p class="warning" id="ContentWarning"style="display: none;">This content item is set to be plain text. Any HTML entered below will be converted to plain text when saved.</p>

        <div>
            @Html.TextAreaFor(m => m.Content, new { @class = "tinymce", style = "width: 100%;" })
        </div>
        
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.ProfileId)
        @Html.HiddenFor(x => x.ProfileName)
        @Html.HiddenFor(x => x.Description)
        @Html.HiddenFor(x => x.ReturnUrl)
        @Html.HiddenFor(x => x.ContentKey)
        @Html.HiddenFor(x => x.Content, new { @Id = "oldContent", @Name = "oldContent" })

        <div class="button-box clearfix">
            @if (hasUserAccessToProfile)
            {
                <input class="medium-button" id="confirm" type="submit" value="Save" />
            }
            <input class="medium-button" id="cancel" type="button" onclick="location.href='@Model.ReturnUrl    '" value="@cancelButtonLabel" />
            @if (hasUserAccessToProfile)
            {
                <input class="medium-button" id="delete" type="button" value="Delete" />
            }
            else
            {
                <p class="warning" style="margin-top: 10px;">You do not have permission to save changes for "@Model.ProfileName"</p>
            }
        </div>

    }
</div>

