@using System.Web.Optimization
@using Fpm.MainUI
@using Fpm.MainUI.Helpers

@model Fpm.MainUI.ViewModels.Profile.ProfileViewModel
@{
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
    ViewBag.Title = "FPM - Edit Profile";
}

@Scripts.Render("~/profile.js")

<h2 class="subheading">Profile details</h2>

@using (Html.BeginForm("EditProfile", "Profile", FormMethod.Post))
{
    @* Profile ID *@
    <div class="row form-group">
        <label class="col-md-3 col-form-label">ID:</label>
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.Id, new { @class = "disabled unselected-domain", @disabled = "disabled" })
        </div>

        @* Update live *@
        <div class="col-md-3 pull-right text-right">
            @Html.ActionLink("Update profile on live site",
                     "ProfileLiveUpdate", "LiveUpdate", new { profileId = Model.Id }, new { })
        </div>
    </div>

    @* URL key *@
    <div class="row form-group">
        <label class="col-md-3 col-form-label">URL key:</label>
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.UrlKey, new { @class = "unselected-domain" })
            @Html.ValidationMessageFor(model => model.UrlKey)
        </div>

        @* Copy profile button *@
        <div class="col-md-3 pull-right text-right">
            <input class="btn btn-primary" id="copy-profile" name="action:CopyProfile" type="submit" value="Copy profile"
                   data-toggle="tooltip" title="Groupings and content items will be copied but not documents" />
        </div>
    </div>

    @Html.Partial("_NonAdminProfileOtherComponents")

    @Html.Partial("_FingertipsTabOptions")

    <h3>Further settings</h3>

    <div class="row form-group">
        <label class="col-md-3 col-form-label">Areas ignored for spine chart:</label>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.AreasIgnoredForSpineChart, new { @class = "unselected-domain" })
        </div>
    </div>

    <div class="row form-group">
        <label class="col-md-3 col-form-label">Areas ignored everywhere:</label>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.AreasIgnoredEverywhere, new { @class = "unselected-domain" })
        </div>
    </div>

    <div class="row form-group">
        <label class="col-md-3 col-form-label">Extra CSS files:</label>
        <div class="col-md-9">
            @Html.TextBoxFor(model => model.ExtraCssFiles, new { @class = "unselected-domain" })
        </div>
    </div>

    <div class="row form-group">
        <label class="col-md-3 col-form-label">Access control group:</label>
        <div class="col-md-9">
            @Html.TextBoxFor(model => model.AccessControlGroup, new { @class = "unselected-domain" })
        </div>
    </div>

    <div class="row form-group">
        <label class="col-md-3 col-form-label">Skin:</label>
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.SkinId, null)
        </div>
    </div>

    @Html.Partial("_NonAdminProfileCheckboxes")

    <div class="row form-group profile-options">
        <div class="col-md-3">
            @Html.CheckBoxFor(model => model.IsLive)
            <label class="col-form-label">Is profile live</label>
        </div>
        <div class="col-md-3">
            @Html.CheckBoxFor(model => model.HasOwnFrontPage)
            <label class="col-form-label">Has own front page</label>
        </div>
        <div class="col-md-4">
            @Html.CheckBoxFor(model => model.ShouldBuildExcel)
            <label class="col-form-label">Should CSV files be built overnight</label>
        </div>
    </div>

    <div class="row form-group profile-options">

        <div class="col-md-3">
            @Html.CheckBoxFor(model => model.IsNational)
            <label class="col-form-label">Is national</label>
        </div>
        <div class="col-md-3">
            @Html.CheckBoxFor(model => model.HasAnyData)
            <label class="col-form-label">Has any data</label>
        </div>
        <div class="col-md-5">
            @Html.CheckBoxFor(model => model.AreIndicatorsExcludedFromSearch)
            <label class="col-form-label">Exclude indicators from global search</label>
        </div>
    </div>

    <div class="row form-group profile-options">
        <div class="col-md-6">
            @Html.CheckBoxFor(model => model.IsProfileViewable)
            <label class="col-form-label">Is viewable in <a href="@AppConfig.DefaultTestUrl">test site</a></label>
        </div>

    </div>

    <div class="row form-group">
        <label class="col-md-3 col-form-label">Lead profile for profile collections:<br><small>(comma separated list of profile collection IDs)</small></label>
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.LeadProfileForCollectionIds, new { @class = "unselected-domain wide-profile-textbox" })
        </div>
    </div>

    <h3>Static reports</h3>
    <p>Reports stored in <em>\\londevapppor01\c$\web-sites\static-reports</em> and managed by users</p>

    <div class="row form-group profile-options">
        <div class="col-md-6">@Html.CheckBoxFor(model => model.HasStaticReports)
            <label class="col-form-label">Has static reports?</label>
        </div>
    </div>

    @Html.Partial("_AreaTypes", Model.SelectedPdfAreaTypes)

    <div class="row form-group">
        <label class="col-md-3 col-form-label">Report label:<br><small>(optional: "Report year" will be used if not set)</small></label>
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.StaticReportsLabel, new { @class = "unselected-domain wide-profile-textbox" })
        </div>
    </div>

    <div class="row form-group">
        <label class="col-md-3 col-form-label">Static report folder names:<br><small>(optional: comma separated list, usually time periods with most recent period first)</small></label>
        <div class="col-md-4">
            @Html.TextBoxFor(model => model.StaticReportsFolders, new { @class = "unselected-domain wide-profile-textbox" })
        </div>
    </div>


    <div class="row col-md-12">
        <input class="btn btn-primary" id="update-profile" name="action:UpdateProfile" type="submit" value="Save" />
        <input class="btn btn-secondary" id="cancel_profile" type="button" onclick="location.href='@Model.ReturnUrl'" value="Cancel" />
    </div>

    <div class="row col-md-12">
        <h2 class="subheading ">Users with permission to edit this profile</h2>
    </div>

    <div id="user-listing" class="row">
        @Html.Partial("_UserPermissions", Model.ProfileUsers)
    </div>

    <h3>Add / Remove users</h3>
    <div class="row form-group">
        <div class="col-md-1">
            <label>User:</label>
        </div>
        <div class="col-md-6">
            @Html.DropDownList("userId", Model.AllUsers, "-- Select User --", new { @class = "form-control" })
        </div>
    </div>

    <div class="row form-group">
        <div class="col-md-7">
            <input class="btn btn-primary" id="AddBtn" onclick="addProfileUser()" type="button" name="action:AddProfile" value="Add user" />
            <input class="btn btn-primary" id="RemoveBtn" onclick="removeProfileUser()" type="button" name="action:RemoveProfile" value="Remove user" />
            <input class="btn btn-secondary" id="CancelBtn" type="button" onclick="location.href = '@Url.Action("UserIndex")'" value="Cancel" />
        </div>
    </div>

    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.ReturnUrl)

    @Html.HiddenFor(m => m.SelectedPdfAreaTypes, "")
    @Html.Hidden("ProfileUsers", Model.ProfileUsers)
}
